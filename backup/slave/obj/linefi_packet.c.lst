                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module linefi_packet
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _crc8_PARM_3
                                     12 	.globl _crc8_PARM_2
                                     13 	.globl _sht75_crc_table
                                     14 	.globl _chk_crc_linefi_packet_packet
                                     15 	.globl _add_crc_linefi_packet_packet
                                     16 	.globl _calc_crc_linefi_packet_packet
                                     17 	.globl _Receive_Data_From_UART1_nb
                                     18 	.globl _Send_Data_To_UART1
                                     19 	.globl _printf_fast_f
                                     20 	.globl _MOSI
                                     21 	.globl _P00
                                     22 	.globl _MISO
                                     23 	.globl _P01
                                     24 	.globl _RXD_1
                                     25 	.globl _P02
                                     26 	.globl _P03
                                     27 	.globl _STADC
                                     28 	.globl _P04
                                     29 	.globl _P05
                                     30 	.globl _TXD
                                     31 	.globl _P06
                                     32 	.globl _RXD
                                     33 	.globl _P07
                                     34 	.globl _IT0
                                     35 	.globl _IE0
                                     36 	.globl _IT1
                                     37 	.globl _IE1
                                     38 	.globl _TR0
                                     39 	.globl _TF0
                                     40 	.globl _TR1
                                     41 	.globl _TF1
                                     42 	.globl _P10
                                     43 	.globl _P11
                                     44 	.globl _P12
                                     45 	.globl _SCL
                                     46 	.globl _P13
                                     47 	.globl _SDA
                                     48 	.globl _P14
                                     49 	.globl _P15
                                     50 	.globl _TXD_1
                                     51 	.globl _P16
                                     52 	.globl _P17
                                     53 	.globl _RI
                                     54 	.globl _TI
                                     55 	.globl _RB8
                                     56 	.globl _TB8
                                     57 	.globl _REN
                                     58 	.globl _SM2
                                     59 	.globl _SM1
                                     60 	.globl _FE
                                     61 	.globl _SM0
                                     62 	.globl _P20
                                     63 	.globl _EX0
                                     64 	.globl _ET0
                                     65 	.globl _EX1
                                     66 	.globl _ET1
                                     67 	.globl _ES
                                     68 	.globl _EBOD
                                     69 	.globl _EADC
                                     70 	.globl _EA
                                     71 	.globl _P30
                                     72 	.globl _PX0
                                     73 	.globl _PT0
                                     74 	.globl _PX1
                                     75 	.globl _PT1
                                     76 	.globl _PS
                                     77 	.globl _PBOD
                                     78 	.globl _PADC
                                     79 	.globl _I2CPX
                                     80 	.globl _AA
                                     81 	.globl _SI
                                     82 	.globl _STO
                                     83 	.globl _STA
                                     84 	.globl _I2CEN
                                     85 	.globl _CM_RL2
                                     86 	.globl _TR2
                                     87 	.globl _TF2
                                     88 	.globl _P
                                     89 	.globl _OV
                                     90 	.globl _RS0
                                     91 	.globl _RS1
                                     92 	.globl _F0
                                     93 	.globl _AC
                                     94 	.globl _CY
                                     95 	.globl _CLRPWM
                                     96 	.globl _PWMF
                                     97 	.globl _LOAD
                                     98 	.globl _PWMRUN
                                     99 	.globl _ADCHS0
                                    100 	.globl _ADCHS1
                                    101 	.globl _ADCHS2
                                    102 	.globl _ADCHS3
                                    103 	.globl _ETGSEL0
                                    104 	.globl _ETGSEL1
                                    105 	.globl _ADCS
                                    106 	.globl _ADCF
                                    107 	.globl _RI_1
                                    108 	.globl _TI_1
                                    109 	.globl _RB8_1
                                    110 	.globl _TB8_1
                                    111 	.globl _REN_1
                                    112 	.globl _SM2_1
                                    113 	.globl _SM1_1
                                    114 	.globl _FE_1
                                    115 	.globl _SM0_1
                                    116 	.globl _EIPH1
                                    117 	.globl _EIP1
                                    118 	.globl _PMD
                                    119 	.globl _PMEN
                                    120 	.globl _PDTCNT
                                    121 	.globl _PDTEN
                                    122 	.globl _SCON_1
                                    123 	.globl _EIPH
                                    124 	.globl _AINDIDS
                                    125 	.globl _SPDR
                                    126 	.globl _SPSR
                                    127 	.globl _SPCR2
                                    128 	.globl _SPCR
                                    129 	.globl _CAPCON4
                                    130 	.globl _CAPCON3
                                    131 	.globl _B
                                    132 	.globl _EIP
                                    133 	.globl _C2H
                                    134 	.globl _C2L
                                    135 	.globl _PIF
                                    136 	.globl _PIPEN
                                    137 	.globl _PINEN
                                    138 	.globl _PICON
                                    139 	.globl _ADCCON0
                                    140 	.globl _C1H
                                    141 	.globl _C1L
                                    142 	.globl _C0H
                                    143 	.globl _C0L
                                    144 	.globl _ADCDLY
                                    145 	.globl _ADCCON2
                                    146 	.globl _ADCCON1
                                    147 	.globl _ACC
                                    148 	.globl _PWMCON1
                                    149 	.globl _PIOCON0
                                    150 	.globl _PWM3L
                                    151 	.globl _PWM2L
                                    152 	.globl _PWM1L
                                    153 	.globl _PWM0L
                                    154 	.globl _PWMPL
                                    155 	.globl _PWMCON0
                                    156 	.globl _FBD
                                    157 	.globl _PNP
                                    158 	.globl _PWM3H
                                    159 	.globl _PWM2H
                                    160 	.globl _PWM1H
                                    161 	.globl _PWM0H
                                    162 	.globl _PWMPH
                                    163 	.globl _PSW
                                    164 	.globl _ADCMPH
                                    165 	.globl _ADCMPL
                                    166 	.globl _PWM5L
                                    167 	.globl _TH2
                                    168 	.globl _PWM4L
                                    169 	.globl _TL2
                                    170 	.globl _RCMP2H
                                    171 	.globl _RCMP2L
                                    172 	.globl _T2MOD
                                    173 	.globl _T2CON
                                    174 	.globl _TA
                                    175 	.globl _PIOCON1
                                    176 	.globl _RH3
                                    177 	.globl _PWM5H
                                    178 	.globl _RL3
                                    179 	.globl _PWM4H
                                    180 	.globl _T3CON
                                    181 	.globl _ADCRH
                                    182 	.globl _ADCRL
                                    183 	.globl _I2ADDR
                                    184 	.globl _I2CON
                                    185 	.globl _I2TOC
                                    186 	.globl _I2CLK
                                    187 	.globl _I2STAT
                                    188 	.globl _I2DAT
                                    189 	.globl _SADDR_1
                                    190 	.globl _SADEN_1
                                    191 	.globl _SADEN
                                    192 	.globl _IP
                                    193 	.globl _PWMINTC
                                    194 	.globl _IPH
                                    195 	.globl _P2S
                                    196 	.globl _P1SR
                                    197 	.globl _P1M2
                                    198 	.globl _P1S
                                    199 	.globl _P1M1
                                    200 	.globl _P0SR
                                    201 	.globl _P0M2
                                    202 	.globl _P0S
                                    203 	.globl _P0M1
                                    204 	.globl _P3
                                    205 	.globl _IAPCN
                                    206 	.globl _IAPFD
                                    207 	.globl _P3SR
                                    208 	.globl _P3M2
                                    209 	.globl _P3S
                                    210 	.globl _P3M1
                                    211 	.globl _BODCON1
                                    212 	.globl _WDCON
                                    213 	.globl _SADDR
                                    214 	.globl _IE
                                    215 	.globl _IAPAH
                                    216 	.globl _IAPAL
                                    217 	.globl _IAPUEN
                                    218 	.globl _IAPTRG
                                    219 	.globl _BODCON0
                                    220 	.globl _AUXR1
                                    221 	.globl _P2
                                    222 	.globl _CHPCON
                                    223 	.globl _EIE1
                                    224 	.globl _EIE
                                    225 	.globl _SBUF_1
                                    226 	.globl _SBUF
                                    227 	.globl _SCON
                                    228 	.globl _CKEN
                                    229 	.globl _CKSWT
                                    230 	.globl _CKDIV
                                    231 	.globl _CAPCON2
                                    232 	.globl _CAPCON1
                                    233 	.globl _CAPCON0
                                    234 	.globl _SFRS
                                    235 	.globl _P1
                                    236 	.globl _WKCON
                                    237 	.globl _CKCON
                                    238 	.globl _TH1
                                    239 	.globl _TH0
                                    240 	.globl _TL1
                                    241 	.globl _TL0
                                    242 	.globl _TMOD
                                    243 	.globl _TCON
                                    244 	.globl _PCON
                                    245 	.globl _RWK
                                    246 	.globl _RCTRIM1
                                    247 	.globl _RCTRIM0
                                    248 	.globl _DPH
                                    249 	.globl _DPL
                                    250 	.globl _SP
                                    251 	.globl _P0
                                    252 	.globl _gpcTypeStr
                                    253 	.globl _print_raw_packet_PARM_2
                                    254 	.globl _cp_buf2linefipacket_PARM_3
                                    255 	.globl _cp_buf2linefipacket_PARM_2
                                    256 	.globl _gu16Cnt
                                    257 	.globl _size_linefi_packet
                                    258 	.globl _get_octet_from_linefi
                                    259 	.globl _send_octet_to_linefi
                                    260 	.globl _send_linefi_packet
                                    261 	.globl _cp_buf2linefipacket
                                    262 	.globl _print_linefipacket
                                    263 	.globl _crc8
                                    264 	.globl _print_raw_packet
                                    265 ;--------------------------------------------------------
                                    266 ; special function registers
                                    267 ;--------------------------------------------------------
                                    268 	.area RSEG    (ABS,DATA)
      000000                        269 	.org 0x0000
                           000080   270 _P0	=	0x0080
                           000081   271 _SP	=	0x0081
                           000082   272 _DPL	=	0x0082
                           000083   273 _DPH	=	0x0083
                           000084   274 _RCTRIM0	=	0x0084
                           000085   275 _RCTRIM1	=	0x0085
                           000086   276 _RWK	=	0x0086
                           000087   277 _PCON	=	0x0087
                           000088   278 _TCON	=	0x0088
                           000089   279 _TMOD	=	0x0089
                           00008A   280 _TL0	=	0x008a
                           00008B   281 _TL1	=	0x008b
                           00008C   282 _TH0	=	0x008c
                           00008D   283 _TH1	=	0x008d
                           00008E   284 _CKCON	=	0x008e
                           00008F   285 _WKCON	=	0x008f
                           000090   286 _P1	=	0x0090
                           000091   287 _SFRS	=	0x0091
                           000092   288 _CAPCON0	=	0x0092
                           000093   289 _CAPCON1	=	0x0093
                           000094   290 _CAPCON2	=	0x0094
                           000095   291 _CKDIV	=	0x0095
                           000096   292 _CKSWT	=	0x0096
                           000097   293 _CKEN	=	0x0097
                           000098   294 _SCON	=	0x0098
                           000099   295 _SBUF	=	0x0099
                           00009A   296 _SBUF_1	=	0x009a
                           00009B   297 _EIE	=	0x009b
                           00009C   298 _EIE1	=	0x009c
                           00009F   299 _CHPCON	=	0x009f
                           0000A0   300 _P2	=	0x00a0
                           0000A2   301 _AUXR1	=	0x00a2
                           0000A3   302 _BODCON0	=	0x00a3
                           0000A4   303 _IAPTRG	=	0x00a4
                           0000A5   304 _IAPUEN	=	0x00a5
                           0000A6   305 _IAPAL	=	0x00a6
                           0000A7   306 _IAPAH	=	0x00a7
                           0000A8   307 _IE	=	0x00a8
                           0000A9   308 _SADDR	=	0x00a9
                           0000AA   309 _WDCON	=	0x00aa
                           0000AB   310 _BODCON1	=	0x00ab
                           0000AC   311 _P3M1	=	0x00ac
                           0000AC   312 _P3S	=	0x00ac
                           0000AD   313 _P3M2	=	0x00ad
                           0000AD   314 _P3SR	=	0x00ad
                           0000AE   315 _IAPFD	=	0x00ae
                           0000AF   316 _IAPCN	=	0x00af
                           0000B0   317 _P3	=	0x00b0
                           0000B1   318 _P0M1	=	0x00b1
                           0000B1   319 _P0S	=	0x00b1
                           0000B2   320 _P0M2	=	0x00b2
                           0000B2   321 _P0SR	=	0x00b2
                           0000B3   322 _P1M1	=	0x00b3
                           0000B3   323 _P1S	=	0x00b3
                           0000B4   324 _P1M2	=	0x00b4
                           0000B4   325 _P1SR	=	0x00b4
                           0000B5   326 _P2S	=	0x00b5
                           0000B7   327 _IPH	=	0x00b7
                           0000B7   328 _PWMINTC	=	0x00b7
                           0000B8   329 _IP	=	0x00b8
                           0000B9   330 _SADEN	=	0x00b9
                           0000BA   331 _SADEN_1	=	0x00ba
                           0000BB   332 _SADDR_1	=	0x00bb
                           0000BC   333 _I2DAT	=	0x00bc
                           0000BD   334 _I2STAT	=	0x00bd
                           0000BE   335 _I2CLK	=	0x00be
                           0000BF   336 _I2TOC	=	0x00bf
                           0000C0   337 _I2CON	=	0x00c0
                           0000C1   338 _I2ADDR	=	0x00c1
                           0000C2   339 _ADCRL	=	0x00c2
                           0000C3   340 _ADCRH	=	0x00c3
                           0000C4   341 _T3CON	=	0x00c4
                           0000C4   342 _PWM4H	=	0x00c4
                           0000C5   343 _RL3	=	0x00c5
                           0000C5   344 _PWM5H	=	0x00c5
                           0000C6   345 _RH3	=	0x00c6
                           0000C6   346 _PIOCON1	=	0x00c6
                           0000C7   347 _TA	=	0x00c7
                           0000C8   348 _T2CON	=	0x00c8
                           0000C9   349 _T2MOD	=	0x00c9
                           0000CA   350 _RCMP2L	=	0x00ca
                           0000CB   351 _RCMP2H	=	0x00cb
                           0000CC   352 _TL2	=	0x00cc
                           0000CC   353 _PWM4L	=	0x00cc
                           0000CD   354 _TH2	=	0x00cd
                           0000CD   355 _PWM5L	=	0x00cd
                           0000CE   356 _ADCMPL	=	0x00ce
                           0000CF   357 _ADCMPH	=	0x00cf
                           0000D0   358 _PSW	=	0x00d0
                           0000D1   359 _PWMPH	=	0x00d1
                           0000D2   360 _PWM0H	=	0x00d2
                           0000D3   361 _PWM1H	=	0x00d3
                           0000D4   362 _PWM2H	=	0x00d4
                           0000D5   363 _PWM3H	=	0x00d5
                           0000D6   364 _PNP	=	0x00d6
                           0000D7   365 _FBD	=	0x00d7
                           0000D8   366 _PWMCON0	=	0x00d8
                           0000D9   367 _PWMPL	=	0x00d9
                           0000DA   368 _PWM0L	=	0x00da
                           0000DB   369 _PWM1L	=	0x00db
                           0000DC   370 _PWM2L	=	0x00dc
                           0000DD   371 _PWM3L	=	0x00dd
                           0000DE   372 _PIOCON0	=	0x00de
                           0000DF   373 _PWMCON1	=	0x00df
                           0000E0   374 _ACC	=	0x00e0
                           0000E1   375 _ADCCON1	=	0x00e1
                           0000E2   376 _ADCCON2	=	0x00e2
                           0000E3   377 _ADCDLY	=	0x00e3
                           0000E4   378 _C0L	=	0x00e4
                           0000E5   379 _C0H	=	0x00e5
                           0000E6   380 _C1L	=	0x00e6
                           0000E7   381 _C1H	=	0x00e7
                           0000E8   382 _ADCCON0	=	0x00e8
                           0000E9   383 _PICON	=	0x00e9
                           0000EA   384 _PINEN	=	0x00ea
                           0000EB   385 _PIPEN	=	0x00eb
                           0000EC   386 _PIF	=	0x00ec
                           0000ED   387 _C2L	=	0x00ed
                           0000EE   388 _C2H	=	0x00ee
                           0000EF   389 _EIP	=	0x00ef
                           0000F0   390 _B	=	0x00f0
                           0000F1   391 _CAPCON3	=	0x00f1
                           0000F2   392 _CAPCON4	=	0x00f2
                           0000F3   393 _SPCR	=	0x00f3
                           0000F3   394 _SPCR2	=	0x00f3
                           0000F4   395 _SPSR	=	0x00f4
                           0000F5   396 _SPDR	=	0x00f5
                           0000F6   397 _AINDIDS	=	0x00f6
                           0000F7   398 _EIPH	=	0x00f7
                           0000F8   399 _SCON_1	=	0x00f8
                           0000F9   400 _PDTEN	=	0x00f9
                           0000FA   401 _PDTCNT	=	0x00fa
                           0000FB   402 _PMEN	=	0x00fb
                           0000FC   403 _PMD	=	0x00fc
                           0000FE   404 _EIP1	=	0x00fe
                           0000FF   405 _EIPH1	=	0x00ff
                                    406 ;--------------------------------------------------------
                                    407 ; special function bits
                                    408 ;--------------------------------------------------------
                                    409 	.area RSEG    (ABS,DATA)
      000000                        410 	.org 0x0000
                           0000FF   411 _SM0_1	=	0x00ff
                           0000FF   412 _FE_1	=	0x00ff
                           0000FE   413 _SM1_1	=	0x00fe
                           0000FD   414 _SM2_1	=	0x00fd
                           0000FC   415 _REN_1	=	0x00fc
                           0000FB   416 _TB8_1	=	0x00fb
                           0000FA   417 _RB8_1	=	0x00fa
                           0000F9   418 _TI_1	=	0x00f9
                           0000F8   419 _RI_1	=	0x00f8
                           0000EF   420 _ADCF	=	0x00ef
                           0000EE   421 _ADCS	=	0x00ee
                           0000ED   422 _ETGSEL1	=	0x00ed
                           0000EC   423 _ETGSEL0	=	0x00ec
                           0000EB   424 _ADCHS3	=	0x00eb
                           0000EA   425 _ADCHS2	=	0x00ea
                           0000E9   426 _ADCHS1	=	0x00e9
                           0000E8   427 _ADCHS0	=	0x00e8
                           0000DF   428 _PWMRUN	=	0x00df
                           0000DE   429 _LOAD	=	0x00de
                           0000DD   430 _PWMF	=	0x00dd
                           0000DC   431 _CLRPWM	=	0x00dc
                           0000D7   432 _CY	=	0x00d7
                           0000D6   433 _AC	=	0x00d6
                           0000D5   434 _F0	=	0x00d5
                           0000D4   435 _RS1	=	0x00d4
                           0000D3   436 _RS0	=	0x00d3
                           0000D2   437 _OV	=	0x00d2
                           0000D0   438 _P	=	0x00d0
                           0000CF   439 _TF2	=	0x00cf
                           0000CA   440 _TR2	=	0x00ca
                           0000C8   441 _CM_RL2	=	0x00c8
                           0000C6   442 _I2CEN	=	0x00c6
                           0000C5   443 _STA	=	0x00c5
                           0000C4   444 _STO	=	0x00c4
                           0000C3   445 _SI	=	0x00c3
                           0000C2   446 _AA	=	0x00c2
                           0000C0   447 _I2CPX	=	0x00c0
                           0000BE   448 _PADC	=	0x00be
                           0000BD   449 _PBOD	=	0x00bd
                           0000BC   450 _PS	=	0x00bc
                           0000BB   451 _PT1	=	0x00bb
                           0000BA   452 _PX1	=	0x00ba
                           0000B9   453 _PT0	=	0x00b9
                           0000B8   454 _PX0	=	0x00b8
                           0000B0   455 _P30	=	0x00b0
                           0000AF   456 _EA	=	0x00af
                           0000AE   457 _EADC	=	0x00ae
                           0000AD   458 _EBOD	=	0x00ad
                           0000AC   459 _ES	=	0x00ac
                           0000AB   460 _ET1	=	0x00ab
                           0000AA   461 _EX1	=	0x00aa
                           0000A9   462 _ET0	=	0x00a9
                           0000A8   463 _EX0	=	0x00a8
                           0000A0   464 _P20	=	0x00a0
                           00009F   465 _SM0	=	0x009f
                           00009F   466 _FE	=	0x009f
                           00009E   467 _SM1	=	0x009e
                           00009D   468 _SM2	=	0x009d
                           00009C   469 _REN	=	0x009c
                           00009B   470 _TB8	=	0x009b
                           00009A   471 _RB8	=	0x009a
                           000099   472 _TI	=	0x0099
                           000098   473 _RI	=	0x0098
                           000097   474 _P17	=	0x0097
                           000096   475 _P16	=	0x0096
                           000096   476 _TXD_1	=	0x0096
                           000095   477 _P15	=	0x0095
                           000094   478 _P14	=	0x0094
                           000094   479 _SDA	=	0x0094
                           000093   480 _P13	=	0x0093
                           000093   481 _SCL	=	0x0093
                           000092   482 _P12	=	0x0092
                           000091   483 _P11	=	0x0091
                           000090   484 _P10	=	0x0090
                           00008F   485 _TF1	=	0x008f
                           00008E   486 _TR1	=	0x008e
                           00008D   487 _TF0	=	0x008d
                           00008C   488 _TR0	=	0x008c
                           00008B   489 _IE1	=	0x008b
                           00008A   490 _IT1	=	0x008a
                           000089   491 _IE0	=	0x0089
                           000088   492 _IT0	=	0x0088
                           000087   493 _P07	=	0x0087
                           000087   494 _RXD	=	0x0087
                           000086   495 _P06	=	0x0086
                           000086   496 _TXD	=	0x0086
                           000085   497 _P05	=	0x0085
                           000084   498 _P04	=	0x0084
                           000084   499 _STADC	=	0x0084
                           000083   500 _P03	=	0x0083
                           000082   501 _P02	=	0x0082
                           000082   502 _RXD_1	=	0x0082
                           000081   503 _P01	=	0x0081
                           000081   504 _MISO	=	0x0081
                           000080   505 _P00	=	0x0080
                           000080   506 _MOSI	=	0x0080
                                    507 ;--------------------------------------------------------
                                    508 ; overlayable register banks
                                    509 ;--------------------------------------------------------
                                    510 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        511 	.ds 8
                                    512 ;--------------------------------------------------------
                                    513 ; internal ram data
                                    514 ;--------------------------------------------------------
                                    515 	.area DSEG    (DATA)
      000000                        516 _gu16Cnt::
      000000                        517 	.ds 2
      000002                        518 _send_linefi_packet_i_65537_54:
      000002                        519 	.ds 1
      000003                        520 _cp_buf2linefipacket_PARM_2:
      000003                        521 	.ds 3
      000006                        522 _cp_buf2linefipacket_PARM_3:
      000006                        523 	.ds 3
      000009                        524 _cp_buf2linefipacket_i_65538_61:
      000009                        525 	.ds 1
      00000A                        526 _cp_buf2linefipacket_sloc0_1_0:
      00000A                        527 	.ds 3
      00000D                        528 _print_linefipacket_i_65537_67:
      00000D                        529 	.ds 1
      00000E                        530 _print_raw_packet_PARM_2:
      00000E                        531 	.ds 3
                                    532 ;--------------------------------------------------------
                                    533 ; overlayable items in internal ram
                                    534 ;--------------------------------------------------------
                                    535 	.area	OSEG    (OVR,DATA)
                                    536 	.area	OSEG    (OVR,DATA)
      000000                        537 _crc8_PARM_2:
      000000                        538 	.ds 1
      000001                        539 _crc8_PARM_3:
      000001                        540 	.ds 1
                                    541 ;--------------------------------------------------------
                                    542 ; indirectly addressable internal ram data
                                    543 ;--------------------------------------------------------
                                    544 	.area ISEG    (DATA)
                                    545 ;--------------------------------------------------------
                                    546 ; absolute internal ram data
                                    547 ;--------------------------------------------------------
                                    548 	.area IABS    (ABS,DATA)
                                    549 	.area IABS    (ABS,DATA)
                                    550 ;--------------------------------------------------------
                                    551 ; bit data
                                    552 ;--------------------------------------------------------
                                    553 	.area BSEG    (BIT)
                                    554 ;--------------------------------------------------------
                                    555 ; paged external ram data
                                    556 ;--------------------------------------------------------
                                    557 	.area PSEG    (PAG,XDATA)
                                    558 ;--------------------------------------------------------
                                    559 ; external ram data
                                    560 ;--------------------------------------------------------
                                    561 	.area XSEG    (XDATA)
      000000                        562 _gpcTypeStr::
      000000                        563 	.ds 84
                                    564 ;--------------------------------------------------------
                                    565 ; absolute external ram data
                                    566 ;--------------------------------------------------------
                                    567 	.area XABS    (ABS,XDATA)
                                    568 ;--------------------------------------------------------
                                    569 ; external initialized ram data
                                    570 ;--------------------------------------------------------
                                    571 	.area HOME    (CODE)
                                    572 	.area GSINIT0 (CODE)
                                    573 	.area GSINIT1 (CODE)
                                    574 	.area GSINIT2 (CODE)
                                    575 	.area GSINIT3 (CODE)
                                    576 	.area GSINIT4 (CODE)
                                    577 	.area GSINIT5 (CODE)
                                    578 	.area GSINIT  (CODE)
                                    579 	.area GSFINAL (CODE)
                                    580 	.area CSEG    (CODE)
                                    581 ;--------------------------------------------------------
                                    582 ; global & static initialisations
                                    583 ;--------------------------------------------------------
                                    584 	.area HOME    (CODE)
                                    585 	.area GSINIT  (CODE)
                                    586 	.area GSFINAL (CODE)
                                    587 	.area GSINIT  (CODE)
                                    588 ;	../lib/linefi_packet.c:15: uint16 gu16Cnt = 0;
      000000 E4               [12]  589 	clr	a
      000001 F5*00            [12]  590 	mov	_gu16Cnt,a
      000003 F5*01            [12]  591 	mov	(_gu16Cnt + 1),a
                                    592 ;	../lib/linefi_packet.c:17: const char * __xdata gpcTypeStr[] = {
      000005 90r00r00         [24]  593 	mov	dptr,#_gpcTypeStr
      000008 74r97            [12]  594 	mov	a,#___str_14
      00000A F0               [24]  595 	movx	@dptr,a
      00000B 74s00            [12]  596 	mov	a,#(___str_14 >> 8)
      00000D A3               [24]  597 	inc	dptr
      00000E F0               [24]  598 	movx	@dptr,a
      00000F 74 80            [12]  599 	mov	a,#0x80
      000011 A3               [24]  600 	inc	dptr
      000012 F0               [24]  601 	movx	@dptr,a
      000013 90r00r03         [24]  602 	mov	dptr,#(_gpcTypeStr + 0x0003)
      000016 74rA2            [12]  603 	mov	a,#___str_15
      000018 F0               [24]  604 	movx	@dptr,a
      000019 74s00            [12]  605 	mov	a,#(___str_15 >> 8)
      00001B A3               [24]  606 	inc	dptr
      00001C F0               [24]  607 	movx	@dptr,a
      00001D 74 80            [12]  608 	mov	a,#0x80
      00001F A3               [24]  609 	inc	dptr
      000020 F0               [24]  610 	movx	@dptr,a
      000021 90r00r06         [24]  611 	mov	dptr,#(_gpcTypeStr + 0x0006)
      000024 74rAD            [12]  612 	mov	a,#___str_16
      000026 F0               [24]  613 	movx	@dptr,a
      000027 74s00            [12]  614 	mov	a,#(___str_16 >> 8)
      000029 A3               [24]  615 	inc	dptr
      00002A F0               [24]  616 	movx	@dptr,a
      00002B 74 80            [12]  617 	mov	a,#0x80
      00002D A3               [24]  618 	inc	dptr
      00002E F0               [24]  619 	movx	@dptr,a
      00002F 90r00r09         [24]  620 	mov	dptr,#(_gpcTypeStr + 0x0009)
      000032 74rB8            [12]  621 	mov	a,#___str_17
      000034 F0               [24]  622 	movx	@dptr,a
      000035 74s00            [12]  623 	mov	a,#(___str_17 >> 8)
      000037 A3               [24]  624 	inc	dptr
      000038 F0               [24]  625 	movx	@dptr,a
      000039 74 80            [12]  626 	mov	a,#0x80
      00003B A3               [24]  627 	inc	dptr
      00003C F0               [24]  628 	movx	@dptr,a
      00003D 90r00r0C         [24]  629 	mov	dptr,#(_gpcTypeStr + 0x000c)
      000040 74rC5            [12]  630 	mov	a,#___str_18
      000042 F0               [24]  631 	movx	@dptr,a
      000043 74s00            [12]  632 	mov	a,#(___str_18 >> 8)
      000045 A3               [24]  633 	inc	dptr
      000046 F0               [24]  634 	movx	@dptr,a
      000047 74 80            [12]  635 	mov	a,#0x80
      000049 A3               [24]  636 	inc	dptr
      00004A F0               [24]  637 	movx	@dptr,a
      00004B 90r00r0F         [24]  638 	mov	dptr,#(_gpcTypeStr + 0x000f)
      00004E 74rD1            [12]  639 	mov	a,#___str_19
      000050 F0               [24]  640 	movx	@dptr,a
      000051 74s00            [12]  641 	mov	a,#(___str_19 >> 8)
      000053 A3               [24]  642 	inc	dptr
      000054 F0               [24]  643 	movx	@dptr,a
      000055 74 80            [12]  644 	mov	a,#0x80
      000057 A3               [24]  645 	inc	dptr
      000058 F0               [24]  646 	movx	@dptr,a
      000059 90r00r12         [24]  647 	mov	dptr,#(_gpcTypeStr + 0x0012)
      00005C 74rE0            [12]  648 	mov	a,#___str_20
      00005E F0               [24]  649 	movx	@dptr,a
      00005F 74s00            [12]  650 	mov	a,#(___str_20 >> 8)
      000061 A3               [24]  651 	inc	dptr
      000062 F0               [24]  652 	movx	@dptr,a
      000063 74 80            [12]  653 	mov	a,#0x80
      000065 A3               [24]  654 	inc	dptr
      000066 F0               [24]  655 	movx	@dptr,a
      000067 90r00r15         [24]  656 	mov	dptr,#(_gpcTypeStr + 0x0015)
      00006A 74rEE            [12]  657 	mov	a,#___str_21
      00006C F0               [24]  658 	movx	@dptr,a
      00006D 74s00            [12]  659 	mov	a,#(___str_21 >> 8)
      00006F A3               [24]  660 	inc	dptr
      000070 F0               [24]  661 	movx	@dptr,a
      000071 74 80            [12]  662 	mov	a,#0x80
      000073 A3               [24]  663 	inc	dptr
      000074 F0               [24]  664 	movx	@dptr,a
      000075 90r00r18         [24]  665 	mov	dptr,#(_gpcTypeStr + 0x0018)
      000078 74rEE            [12]  666 	mov	a,#___str_21
      00007A F0               [24]  667 	movx	@dptr,a
      00007B 74s00            [12]  668 	mov	a,#(___str_21 >> 8)
      00007D A3               [24]  669 	inc	dptr
      00007E F0               [24]  670 	movx	@dptr,a
      00007F 74 80            [12]  671 	mov	a,#0x80
      000081 A3               [24]  672 	inc	dptr
      000082 F0               [24]  673 	movx	@dptr,a
      000083 90r00r1B         [24]  674 	mov	dptr,#(_gpcTypeStr + 0x001b)
      000086 74rEE            [12]  675 	mov	a,#___str_21
      000088 F0               [24]  676 	movx	@dptr,a
      000089 74s00            [12]  677 	mov	a,#(___str_21 >> 8)
      00008B A3               [24]  678 	inc	dptr
      00008C F0               [24]  679 	movx	@dptr,a
      00008D 74 80            [12]  680 	mov	a,#0x80
      00008F A3               [24]  681 	inc	dptr
      000090 F0               [24]  682 	movx	@dptr,a
      000091 90r00r1E         [24]  683 	mov	dptr,#(_gpcTypeStr + 0x001e)
      000094 74rEE            [12]  684 	mov	a,#___str_21
      000096 F0               [24]  685 	movx	@dptr,a
      000097 74s00            [12]  686 	mov	a,#(___str_21 >> 8)
      000099 A3               [24]  687 	inc	dptr
      00009A F0               [24]  688 	movx	@dptr,a
      00009B 74 80            [12]  689 	mov	a,#0x80
      00009D A3               [24]  690 	inc	dptr
      00009E F0               [24]  691 	movx	@dptr,a
      00009F 90r00r21         [24]  692 	mov	dptr,#(_gpcTypeStr + 0x0021)
      0000A2 74rEE            [12]  693 	mov	a,#___str_21
      0000A4 F0               [24]  694 	movx	@dptr,a
      0000A5 74s00            [12]  695 	mov	a,#(___str_21 >> 8)
      0000A7 A3               [24]  696 	inc	dptr
      0000A8 F0               [24]  697 	movx	@dptr,a
      0000A9 74 80            [12]  698 	mov	a,#0x80
      0000AB A3               [24]  699 	inc	dptr
      0000AC F0               [24]  700 	movx	@dptr,a
      0000AD 90r00r24         [24]  701 	mov	dptr,#(_gpcTypeStr + 0x0024)
      0000B0 74rEE            [12]  702 	mov	a,#___str_21
      0000B2 F0               [24]  703 	movx	@dptr,a
      0000B3 74s00            [12]  704 	mov	a,#(___str_21 >> 8)
      0000B5 A3               [24]  705 	inc	dptr
      0000B6 F0               [24]  706 	movx	@dptr,a
      0000B7 74 80            [12]  707 	mov	a,#0x80
      0000B9 A3               [24]  708 	inc	dptr
      0000BA F0               [24]  709 	movx	@dptr,a
      0000BB 90r00r27         [24]  710 	mov	dptr,#(_gpcTypeStr + 0x0027)
      0000BE 74rEE            [12]  711 	mov	a,#___str_21
      0000C0 F0               [24]  712 	movx	@dptr,a
      0000C1 74s00            [12]  713 	mov	a,#(___str_21 >> 8)
      0000C3 A3               [24]  714 	inc	dptr
      0000C4 F0               [24]  715 	movx	@dptr,a
      0000C5 74 80            [12]  716 	mov	a,#0x80
      0000C7 A3               [24]  717 	inc	dptr
      0000C8 F0               [24]  718 	movx	@dptr,a
      0000C9 90r00r2A         [24]  719 	mov	dptr,#(_gpcTypeStr + 0x002a)
      0000CC 74rEE            [12]  720 	mov	a,#___str_21
      0000CE F0               [24]  721 	movx	@dptr,a
      0000CF 74s00            [12]  722 	mov	a,#(___str_21 >> 8)
      0000D1 A3               [24]  723 	inc	dptr
      0000D2 F0               [24]  724 	movx	@dptr,a
      0000D3 74 80            [12]  725 	mov	a,#0x80
      0000D5 A3               [24]  726 	inc	dptr
      0000D6 F0               [24]  727 	movx	@dptr,a
      0000D7 90r00r2D         [24]  728 	mov	dptr,#(_gpcTypeStr + 0x002d)
      0000DA 74rEE            [12]  729 	mov	a,#___str_21
      0000DC F0               [24]  730 	movx	@dptr,a
      0000DD 74s00            [12]  731 	mov	a,#(___str_21 >> 8)
      0000DF A3               [24]  732 	inc	dptr
      0000E0 F0               [24]  733 	movx	@dptr,a
      0000E1 74 80            [12]  734 	mov	a,#0x80
      0000E3 A3               [24]  735 	inc	dptr
      0000E4 F0               [24]  736 	movx	@dptr,a
      0000E5 90r00r30         [24]  737 	mov	dptr,#(_gpcTypeStr + 0x0030)
      0000E8 74rEE            [12]  738 	mov	a,#___str_21
      0000EA F0               [24]  739 	movx	@dptr,a
      0000EB 74s00            [12]  740 	mov	a,#(___str_21 >> 8)
      0000ED A3               [24]  741 	inc	dptr
      0000EE F0               [24]  742 	movx	@dptr,a
      0000EF 74 80            [12]  743 	mov	a,#0x80
      0000F1 A3               [24]  744 	inc	dptr
      0000F2 F0               [24]  745 	movx	@dptr,a
      0000F3 90r00r33         [24]  746 	mov	dptr,#(_gpcTypeStr + 0x0033)
      0000F6 74rEE            [12]  747 	mov	a,#___str_21
      0000F8 F0               [24]  748 	movx	@dptr,a
      0000F9 74s00            [12]  749 	mov	a,#(___str_21 >> 8)
      0000FB A3               [24]  750 	inc	dptr
      0000FC F0               [24]  751 	movx	@dptr,a
      0000FD 74 80            [12]  752 	mov	a,#0x80
      0000FF A3               [24]  753 	inc	dptr
      000100 F0               [24]  754 	movx	@dptr,a
      000101 90r00r36         [24]  755 	mov	dptr,#(_gpcTypeStr + 0x0036)
      000104 74rEE            [12]  756 	mov	a,#___str_21
      000106 F0               [24]  757 	movx	@dptr,a
      000107 74s00            [12]  758 	mov	a,#(___str_21 >> 8)
      000109 A3               [24]  759 	inc	dptr
      00010A F0               [24]  760 	movx	@dptr,a
      00010B 74 80            [12]  761 	mov	a,#0x80
      00010D A3               [24]  762 	inc	dptr
      00010E F0               [24]  763 	movx	@dptr,a
      00010F 90r00r39         [24]  764 	mov	dptr,#(_gpcTypeStr + 0x0039)
      000112 74rEE            [12]  765 	mov	a,#___str_21
      000114 F0               [24]  766 	movx	@dptr,a
      000115 74s00            [12]  767 	mov	a,#(___str_21 >> 8)
      000117 A3               [24]  768 	inc	dptr
      000118 F0               [24]  769 	movx	@dptr,a
      000119 74 80            [12]  770 	mov	a,#0x80
      00011B A3               [24]  771 	inc	dptr
      00011C F0               [24]  772 	movx	@dptr,a
      00011D 90r00r3C         [24]  773 	mov	dptr,#(_gpcTypeStr + 0x003c)
      000120 74rEE            [12]  774 	mov	a,#___str_21
      000122 F0               [24]  775 	movx	@dptr,a
      000123 74s00            [12]  776 	mov	a,#(___str_21 >> 8)
      000125 A3               [24]  777 	inc	dptr
      000126 F0               [24]  778 	movx	@dptr,a
      000127 74 80            [12]  779 	mov	a,#0x80
      000129 A3               [24]  780 	inc	dptr
      00012A F0               [24]  781 	movx	@dptr,a
      00012B 90r00r3F         [24]  782 	mov	dptr,#(_gpcTypeStr + 0x003f)
      00012E 74rEE            [12]  783 	mov	a,#___str_21
      000130 F0               [24]  784 	movx	@dptr,a
      000131 74s00            [12]  785 	mov	a,#(___str_21 >> 8)
      000133 A3               [24]  786 	inc	dptr
      000134 F0               [24]  787 	movx	@dptr,a
      000135 74 80            [12]  788 	mov	a,#0x80
      000137 A3               [24]  789 	inc	dptr
      000138 F0               [24]  790 	movx	@dptr,a
      000139 90r00r42         [24]  791 	mov	dptr,#(_gpcTypeStr + 0x0042)
      00013C 74rEE            [12]  792 	mov	a,#___str_21
      00013E F0               [24]  793 	movx	@dptr,a
      00013F 74s00            [12]  794 	mov	a,#(___str_21 >> 8)
      000141 A3               [24]  795 	inc	dptr
      000142 F0               [24]  796 	movx	@dptr,a
      000143 74 80            [12]  797 	mov	a,#0x80
      000145 A3               [24]  798 	inc	dptr
      000146 F0               [24]  799 	movx	@dptr,a
      000147 90r00r45         [24]  800 	mov	dptr,#(_gpcTypeStr + 0x0045)
      00014A 74rEE            [12]  801 	mov	a,#___str_21
      00014C F0               [24]  802 	movx	@dptr,a
      00014D 74s00            [12]  803 	mov	a,#(___str_21 >> 8)
      00014F A3               [24]  804 	inc	dptr
      000150 F0               [24]  805 	movx	@dptr,a
      000151 74 80            [12]  806 	mov	a,#0x80
      000153 A3               [24]  807 	inc	dptr
      000154 F0               [24]  808 	movx	@dptr,a
      000155 90r00r48         [24]  809 	mov	dptr,#(_gpcTypeStr + 0x0048)
      000158 74rEE            [12]  810 	mov	a,#___str_21
      00015A F0               [24]  811 	movx	@dptr,a
      00015B 74s00            [12]  812 	mov	a,#(___str_21 >> 8)
      00015D A3               [24]  813 	inc	dptr
      00015E F0               [24]  814 	movx	@dptr,a
      00015F 74 80            [12]  815 	mov	a,#0x80
      000161 A3               [24]  816 	inc	dptr
      000162 F0               [24]  817 	movx	@dptr,a
      000163 90r00r4B         [24]  818 	mov	dptr,#(_gpcTypeStr + 0x004b)
      000166 74rEE            [12]  819 	mov	a,#___str_21
      000168 F0               [24]  820 	movx	@dptr,a
      000169 74s00            [12]  821 	mov	a,#(___str_21 >> 8)
      00016B A3               [24]  822 	inc	dptr
      00016C F0               [24]  823 	movx	@dptr,a
      00016D 74 80            [12]  824 	mov	a,#0x80
      00016F A3               [24]  825 	inc	dptr
      000170 F0               [24]  826 	movx	@dptr,a
      000171 90r00r4E         [24]  827 	mov	dptr,#(_gpcTypeStr + 0x004e)
      000174 74rEE            [12]  828 	mov	a,#___str_21
      000176 F0               [24]  829 	movx	@dptr,a
      000177 74s00            [12]  830 	mov	a,#(___str_21 >> 8)
      000179 A3               [24]  831 	inc	dptr
      00017A F0               [24]  832 	movx	@dptr,a
      00017B 74 80            [12]  833 	mov	a,#0x80
      00017D A3               [24]  834 	inc	dptr
      00017E F0               [24]  835 	movx	@dptr,a
      00017F 90r00r51         [24]  836 	mov	dptr,#(_gpcTypeStr + 0x0051)
      000182 74rEE            [12]  837 	mov	a,#___str_21
      000184 F0               [24]  838 	movx	@dptr,a
      000185 74s00            [12]  839 	mov	a,#(___str_21 >> 8)
      000187 A3               [24]  840 	inc	dptr
      000188 F0               [24]  841 	movx	@dptr,a
      000189 74 80            [12]  842 	mov	a,#0x80
      00018B A3               [24]  843 	inc	dptr
      00018C F0               [24]  844 	movx	@dptr,a
                                    845 ;--------------------------------------------------------
                                    846 ; Home
                                    847 ;--------------------------------------------------------
                                    848 	.area HOME    (CODE)
                                    849 	.area HOME    (CODE)
                                    850 ;--------------------------------------------------------
                                    851 ; code
                                    852 ;--------------------------------------------------------
                                    853 	.area CSEG    (CODE)
                                    854 ;------------------------------------------------------------
                                    855 ;Allocation info for local variables in function 'size_linefi_packet'
                                    856 ;------------------------------------------------------------
                                    857 ;apstLineFiPkt             Allocated to registers r5 r6 r7 
                                    858 ;------------------------------------------------------------
                                    859 ;	../lib/linefi_packet.c:48: uint8 size_linefi_packet(linefi_packet_t * apstLineFiPkt)
                                    860 ;	-----------------------------------------
                                    861 ;	 function size_linefi_packet
                                    862 ;	-----------------------------------------
      000000                        863 _size_linefi_packet:
                           000007   864 	ar7 = 0x07
                           000006   865 	ar6 = 0x06
                           000005   866 	ar5 = 0x05
                           000004   867 	ar4 = 0x04
                           000003   868 	ar3 = 0x03
                           000002   869 	ar2 = 0x02
                           000001   870 	ar1 = 0x01
                           000000   871 	ar0 = 0x00
      000000 AD 82            [24]  872 	mov	r5,dpl
      000002 AE 83            [24]  873 	mov	r6,dph
      000004 AF F0            [24]  874 	mov	r7,b
                                    875 ;	../lib/linefi_packet.c:50: return apstLineFiPkt->u8Size + sizeof(linefi_packet_t) - sizeof(uint8 *);
      000006 74 03            [12]  876 	mov	a,#0x03
      000008 2D               [12]  877 	add	a,r5
      000009 FD               [12]  878 	mov	r5,a
      00000A E4               [12]  879 	clr	a
      00000B 3E               [12]  880 	addc	a,r6
      00000C FE               [12]  881 	mov	r6,a
      00000D 8D 82            [24]  882 	mov	dpl,r5
      00000F 8E 83            [24]  883 	mov	dph,r6
      000011 8F F0            [24]  884 	mov	b,r7
      000013 12r00r00         [24]  885 	lcall	__gptrget
      000016 24 05            [12]  886 	add	a,#0x05
      000018 F5 82            [12]  887 	mov	dpl,a
                                    888 ;	../lib/linefi_packet.c:51: }
      00001A 22               [24]  889 	ret
                                    890 ;------------------------------------------------------------
                                    891 ;Allocation info for local variables in function 'calc_crc_linefi_packet_packet'
                                    892 ;------------------------------------------------------------
                                    893 ;apstLineFiPkt             Allocated to registers r5 r6 r7 
                                    894 ;u8CRC                     Allocated to registers 
                                    895 ;------------------------------------------------------------
                                    896 ;	../lib/linefi_packet.c:53: uint8 calc_crc_linefi_packet_packet(linefi_packet_t * apstLineFiPkt)
                                    897 ;	-----------------------------------------
                                    898 ;	 function calc_crc_linefi_packet_packet
                                    899 ;	-----------------------------------------
      00001B                        900 _calc_crc_linefi_packet_packet:
      00001B AD 82            [24]  901 	mov	r5,dpl
      00001D AE 83            [24]  902 	mov	r6,dph
      00001F AF F0            [24]  903 	mov	r7,b
                                    904 ;	../lib/linefi_packet.c:55: uint8 u8CRC = crc8((uint8 *)apstLineFiPkt, 4, 0xFF);
      000021 8D 02            [24]  905 	mov	ar2,r5
      000023 8E 03            [24]  906 	mov	ar3,r6
      000025 8F 04            [24]  907 	mov	ar4,r7
      000027 75*00 04         [24]  908 	mov	_crc8_PARM_2,#0x04
      00002A 75*01 FF         [24]  909 	mov	_crc8_PARM_3,#0xff
      00002D 8A 82            [24]  910 	mov	dpl,r2
      00002F 8B 83            [24]  911 	mov	dph,r3
      000031 8C F0            [24]  912 	mov	b,r4
      000033 C0 07            [24]  913 	push	ar7
      000035 C0 06            [24]  914 	push	ar6
      000037 C0 05            [24]  915 	push	ar5
      000039 12r05r96         [24]  916 	lcall	_crc8
      00003C 85 82*01         [24]  917 	mov	_crc8_PARM_3,dpl
      00003F D0 05            [24]  918 	pop	ar5
      000041 D0 06            [24]  919 	pop	ar6
      000043 D0 07            [24]  920 	pop	ar7
                                    921 ;	../lib/linefi_packet.c:56: u8CRC = crc8((uint8 *)(apstLineFiPkt->pu8Data), apstLineFiPkt->u8Size, u8CRC);
      000045 74 05            [12]  922 	mov	a,#0x05
      000047 2D               [12]  923 	add	a,r5
      000048 FA               [12]  924 	mov	r2,a
      000049 E4               [12]  925 	clr	a
      00004A 3E               [12]  926 	addc	a,r6
      00004B FB               [12]  927 	mov	r3,a
      00004C 8F 04            [24]  928 	mov	ar4,r7
      00004E 8A 82            [24]  929 	mov	dpl,r2
      000050 8B 83            [24]  930 	mov	dph,r3
      000052 8C F0            [24]  931 	mov	b,r4
      000054 12r00r00         [24]  932 	lcall	__gptrget
      000057 FA               [12]  933 	mov	r2,a
      000058 A3               [24]  934 	inc	dptr
      000059 12r00r00         [24]  935 	lcall	__gptrget
      00005C FB               [12]  936 	mov	r3,a
      00005D A3               [24]  937 	inc	dptr
      00005E 12r00r00         [24]  938 	lcall	__gptrget
      000061 FC               [12]  939 	mov	r4,a
      000062 74 03            [12]  940 	mov	a,#0x03
      000064 2D               [12]  941 	add	a,r5
      000065 FD               [12]  942 	mov	r5,a
      000066 E4               [12]  943 	clr	a
      000067 3E               [12]  944 	addc	a,r6
      000068 FE               [12]  945 	mov	r6,a
      000069 8D 82            [24]  946 	mov	dpl,r5
      00006B 8E 83            [24]  947 	mov	dph,r6
      00006D 8F F0            [24]  948 	mov	b,r7
      00006F 12r00r00         [24]  949 	lcall	__gptrget
      000072 F5*00            [12]  950 	mov	_crc8_PARM_2,a
      000074 8A 82            [24]  951 	mov	dpl,r2
      000076 8B 83            [24]  952 	mov	dph,r3
      000078 8C F0            [24]  953 	mov	b,r4
                                    954 ;	../lib/linefi_packet.c:58: return u8CRC;
                                    955 ;	../lib/linefi_packet.c:59: }
      00007A 02r05r96         [24]  956 	ljmp	_crc8
                                    957 ;------------------------------------------------------------
                                    958 ;Allocation info for local variables in function 'add_crc_linefi_packet_packet'
                                    959 ;------------------------------------------------------------
                                    960 ;apstLineFiPkt             Allocated to registers r5 r6 r7 
                                    961 ;u8CRC                     Allocated to registers r4 
                                    962 ;------------------------------------------------------------
                                    963 ;	../lib/linefi_packet.c:61: void add_crc_linefi_packet_packet(linefi_packet_t * apstLineFiPkt)
                                    964 ;	-----------------------------------------
                                    965 ;	 function add_crc_linefi_packet_packet
                                    966 ;	-----------------------------------------
      00007D                        967 _add_crc_linefi_packet_packet:
                                    968 ;	../lib/linefi_packet.c:63: uint8 u8CRC = calc_crc_linefi_packet_packet(apstLineFiPkt);
      00007D AD 82            [24]  969 	mov	r5,dpl
      00007F AE 83            [24]  970 	mov	r6,dph
      000081 AF F0            [24]  971 	mov	r7,b
      000083 C0 07            [24]  972 	push	ar7
      000085 C0 06            [24]  973 	push	ar6
      000087 C0 05            [24]  974 	push	ar5
      000089 12r00r1B         [24]  975 	lcall	_calc_crc_linefi_packet_packet
      00008C AC 82            [24]  976 	mov	r4,dpl
      00008E D0 05            [24]  977 	pop	ar5
      000090 D0 06            [24]  978 	pop	ar6
      000092 D0 07            [24]  979 	pop	ar7
                                    980 ;	../lib/linefi_packet.c:64: apstLineFiPkt->u8CRC = u8CRC;
      000094 74 04            [12]  981 	mov	a,#0x04
      000096 2D               [12]  982 	add	a,r5
      000097 FD               [12]  983 	mov	r5,a
      000098 E4               [12]  984 	clr	a
      000099 3E               [12]  985 	addc	a,r6
      00009A FE               [12]  986 	mov	r6,a
      00009B 8D 82            [24]  987 	mov	dpl,r5
      00009D 8E 83            [24]  988 	mov	dph,r6
      00009F 8F F0            [24]  989 	mov	b,r7
      0000A1 EC               [12]  990 	mov	a,r4
                                    991 ;	../lib/linefi_packet.c:65: }
      0000A2 02r00r00         [24]  992 	ljmp	__gptrput
                                    993 ;------------------------------------------------------------
                                    994 ;Allocation info for local variables in function 'chk_crc_linefi_packet_packet'
                                    995 ;------------------------------------------------------------
                                    996 ;apstLineFiPkt             Allocated to registers r5 r6 r7 
                                    997 ;u8CRC                     Allocated to registers r4 
                                    998 ;------------------------------------------------------------
                                    999 ;	../lib/linefi_packet.c:67: uint8 chk_crc_linefi_packet_packet(linefi_packet_t * apstLineFiPkt)
                                   1000 ;	-----------------------------------------
                                   1001 ;	 function chk_crc_linefi_packet_packet
                                   1002 ;	-----------------------------------------
      0000A5                       1003 _chk_crc_linefi_packet_packet:
                                   1004 ;	../lib/linefi_packet.c:69: uint8 u8CRC = calc_crc_linefi_packet_packet(apstLineFiPkt);
      0000A5 AD 82            [24] 1005 	mov	r5,dpl
      0000A7 AE 83            [24] 1006 	mov	r6,dph
      0000A9 AF F0            [24] 1007 	mov	r7,b
      0000AB C0 07            [24] 1008 	push	ar7
      0000AD C0 06            [24] 1009 	push	ar6
      0000AF C0 05            [24] 1010 	push	ar5
      0000B1 12r00r1B         [24] 1011 	lcall	_calc_crc_linefi_packet_packet
      0000B4 AC 82            [24] 1012 	mov	r4,dpl
      0000B6 D0 05            [24] 1013 	pop	ar5
      0000B8 D0 06            [24] 1014 	pop	ar6
      0000BA D0 07            [24] 1015 	pop	ar7
                                   1016 ;	../lib/linefi_packet.c:71: if (apstLineFiPkt->u8CRC == u8CRC) {
      0000BC 74 04            [12] 1017 	mov	a,#0x04
      0000BE 2D               [12] 1018 	add	a,r5
      0000BF FD               [12] 1019 	mov	r5,a
      0000C0 E4               [12] 1020 	clr	a
      0000C1 3E               [12] 1021 	addc	a,r6
      0000C2 FE               [12] 1022 	mov	r6,a
      0000C3 8D 82            [24] 1023 	mov	dpl,r5
      0000C5 8E 83            [24] 1024 	mov	dph,r6
      0000C7 8F F0            [24] 1025 	mov	b,r7
      0000C9 12r00r00         [24] 1026 	lcall	__gptrget
      0000CC B5 04 04         [24] 1027 	cjne	a,ar4,00102$
                                   1028 ;	../lib/linefi_packet.c:72: return CRC_OK;
      0000CF 75 82 01         [24] 1029 	mov	dpl,#0x01
      0000D2 22               [24] 1030 	ret
      0000D3                       1031 00102$:
                                   1032 ;	../lib/linefi_packet.c:74: return CRC_NOT_OK;
      0000D3 75 82 00         [24] 1033 	mov	dpl,#0x00
                                   1034 ;	../lib/linefi_packet.c:75: }
      0000D6 22               [24] 1035 	ret
                                   1036 ;------------------------------------------------------------
                                   1037 ;Allocation info for local variables in function 'get_octet_from_linefi'
                                   1038 ;------------------------------------------------------------
                                   1039 ;apu8Tmp                   Allocated to registers r5 r6 r7 
                                   1040 ;------------------------------------------------------------
                                   1041 ;	../lib/linefi_packet.c:78: UINT8 get_octet_from_linefi(UINT8 * apu8Tmp)
                                   1042 ;	-----------------------------------------
                                   1043 ;	 function get_octet_from_linefi
                                   1044 ;	-----------------------------------------
      0000D7                       1045 _get_octet_from_linefi:
                                   1046 ;	../lib/linefi_packet.c:80: return Receive_Data_From_UART1_nb(apu8Tmp);
                                   1047 ;	../lib/linefi_packet.c:81: }
      0000D7 02r00r00         [24] 1048 	ljmp	_Receive_Data_From_UART1_nb
                                   1049 ;------------------------------------------------------------
                                   1050 ;Allocation info for local variables in function 'send_octet_to_linefi'
                                   1051 ;------------------------------------------------------------
                                   1052 ;au8Data                   Allocated to registers 
                                   1053 ;------------------------------------------------------------
                                   1054 ;	../lib/linefi_packet.c:83: void send_octet_to_linefi(UINT8 au8Data)
                                   1055 ;	-----------------------------------------
                                   1056 ;	 function send_octet_to_linefi
                                   1057 ;	-----------------------------------------
      0000DA                       1058 _send_octet_to_linefi:
                                   1059 ;	../lib/linefi_packet.c:85: return Send_Data_To_UART1(au8Data);
                                   1060 ;	../lib/linefi_packet.c:86: }
      0000DA 02r00r00         [24] 1061 	ljmp	_Send_Data_To_UART1
                                   1062 ;------------------------------------------------------------
                                   1063 ;Allocation info for local variables in function 'send_linefi_packet'
                                   1064 ;------------------------------------------------------------
                                   1065 ;apstLineFiPkt             Allocated to registers r5 r6 r7 
                                   1066 ;u8CRC                     Allocated to registers r4 
                                   1067 ;pu8Buf                    Allocated to registers r1 r2 r3 
                                   1068 ;i                         Allocated with name '_send_linefi_packet_i_65537_54'
                                   1069 ;------------------------------------------------------------
                                   1070 ;	../lib/linefi_packet.c:88: void send_linefi_packet(linefi_packet_t * apstLineFiPkt)
                                   1071 ;	-----------------------------------------
                                   1072 ;	 function send_linefi_packet
                                   1073 ;	-----------------------------------------
      0000DD                       1074 _send_linefi_packet:
                                   1075 ;	../lib/linefi_packet.c:90: uint8 u8CRC = calc_crc_linefi_packet_packet(apstLineFiPkt);
      0000DD AD 82            [24] 1076 	mov	r5,dpl
      0000DF AE 83            [24] 1077 	mov	r6,dph
      0000E1 AF F0            [24] 1078 	mov	r7,b
      0000E3 C0 07            [24] 1079 	push	ar7
      0000E5 C0 06            [24] 1080 	push	ar6
      0000E7 C0 05            [24] 1081 	push	ar5
      0000E9 12r00r1B         [24] 1082 	lcall	_calc_crc_linefi_packet_packet
      0000EC AC 82            [24] 1083 	mov	r4,dpl
      0000EE D0 05            [24] 1084 	pop	ar5
      0000F0 D0 06            [24] 1085 	pop	ar6
      0000F2 D0 07            [24] 1086 	pop	ar7
                                   1087 ;	../lib/linefi_packet.c:92: uint8 * pu8Buf = (uint8 *) apstLineFiPkt;
      0000F4 8D 01            [24] 1088 	mov	ar1,r5
      0000F6 8E 02            [24] 1089 	mov	ar2,r6
      0000F8 8F 03            [24] 1090 	mov	ar3,r7
                                   1091 ;	../lib/linefi_packet.c:93: send_octet_to_linefi(*pu8Buf++);
      0000FA 89 82            [24] 1092 	mov	dpl,r1
      0000FC 8A 83            [24] 1093 	mov	dph,r2
      0000FE 8B F0            [24] 1094 	mov	b,r3
      000100 12r00r00         [24] 1095 	lcall	__gptrget
      000103 F5 82            [12] 1096 	mov	dpl,a
      000105 09               [12] 1097 	inc	r1
      000106 B9 00 01         [24] 1098 	cjne	r1,#0x00,00118$
      000109 0A               [12] 1099 	inc	r2
      00010A                       1100 00118$:
      00010A C0 07            [24] 1101 	push	ar7
      00010C C0 06            [24] 1102 	push	ar6
      00010E C0 05            [24] 1103 	push	ar5
      000110 C0 04            [24] 1104 	push	ar4
      000112 C0 03            [24] 1105 	push	ar3
      000114 C0 02            [24] 1106 	push	ar2
      000116 C0 01            [24] 1107 	push	ar1
      000118 12r00rDA         [24] 1108 	lcall	_send_octet_to_linefi
      00011B D0 01            [24] 1109 	pop	ar1
      00011D D0 02            [24] 1110 	pop	ar2
      00011F D0 03            [24] 1111 	pop	ar3
      000121 D0 04            [24] 1112 	pop	ar4
      000123 D0 05            [24] 1113 	pop	ar5
      000125 D0 06            [24] 1114 	pop	ar6
      000127 D0 07            [24] 1115 	pop	ar7
                                   1116 ;	../lib/linefi_packet.c:94: send_octet_to_linefi(*pu8Buf++);
      000129 89 82            [24] 1117 	mov	dpl,r1
      00012B 8A 83            [24] 1118 	mov	dph,r2
      00012D 8B F0            [24] 1119 	mov	b,r3
      00012F 12r00r00         [24] 1120 	lcall	__gptrget
      000132 F5 82            [12] 1121 	mov	dpl,a
      000134 09               [12] 1122 	inc	r1
      000135 B9 00 01         [24] 1123 	cjne	r1,#0x00,00119$
      000138 0A               [12] 1124 	inc	r2
      000139                       1125 00119$:
      000139 C0 07            [24] 1126 	push	ar7
      00013B C0 06            [24] 1127 	push	ar6
      00013D C0 05            [24] 1128 	push	ar5
      00013F C0 04            [24] 1129 	push	ar4
      000141 C0 03            [24] 1130 	push	ar3
      000143 C0 02            [24] 1131 	push	ar2
      000145 C0 01            [24] 1132 	push	ar1
      000147 12r00rDA         [24] 1133 	lcall	_send_octet_to_linefi
      00014A D0 01            [24] 1134 	pop	ar1
      00014C D0 02            [24] 1135 	pop	ar2
      00014E D0 03            [24] 1136 	pop	ar3
      000150 D0 04            [24] 1137 	pop	ar4
      000152 D0 05            [24] 1138 	pop	ar5
      000154 D0 06            [24] 1139 	pop	ar6
      000156 D0 07            [24] 1140 	pop	ar7
                                   1141 ;	../lib/linefi_packet.c:95: send_octet_to_linefi(*pu8Buf++);
      000158 89 82            [24] 1142 	mov	dpl,r1
      00015A 8A 83            [24] 1143 	mov	dph,r2
      00015C 8B F0            [24] 1144 	mov	b,r3
      00015E 12r00r00         [24] 1145 	lcall	__gptrget
      000161 F8               [12] 1146 	mov	r0,a
      000162 09               [12] 1147 	inc	r1
      000163 B9 00 01         [24] 1148 	cjne	r1,#0x00,00120$
      000166 0A               [12] 1149 	inc	r2
      000167                       1150 00120$:
      000167 88 82            [24] 1151 	mov	dpl,r0
      000169 C0 07            [24] 1152 	push	ar7
      00016B C0 06            [24] 1153 	push	ar6
      00016D C0 05            [24] 1154 	push	ar5
      00016F C0 04            [24] 1155 	push	ar4
      000171 C0 03            [24] 1156 	push	ar3
      000173 C0 02            [24] 1157 	push	ar2
      000175 C0 01            [24] 1158 	push	ar1
      000177 12r00rDA         [24] 1159 	lcall	_send_octet_to_linefi
      00017A D0 01            [24] 1160 	pop	ar1
      00017C D0 02            [24] 1161 	pop	ar2
      00017E D0 03            [24] 1162 	pop	ar3
                                   1163 ;	../lib/linefi_packet.c:96: send_octet_to_linefi(*pu8Buf++);
      000180 89 82            [24] 1164 	mov	dpl,r1
      000182 8A 83            [24] 1165 	mov	dph,r2
      000184 8B F0            [24] 1166 	mov	b,r3
      000186 12r00r00         [24] 1167 	lcall	__gptrget
      000189 F5 82            [12] 1168 	mov	dpl,a
      00018B 12r00rDA         [24] 1169 	lcall	_send_octet_to_linefi
      00018E D0 04            [24] 1170 	pop	ar4
                                   1171 ;	../lib/linefi_packet.c:98: send_octet_to_linefi(u8CRC); //CRC
      000190 8C 82            [24] 1172 	mov	dpl,r4
      000192 12r00rDA         [24] 1173 	lcall	_send_octet_to_linefi
      000195 D0 05            [24] 1174 	pop	ar5
      000197 D0 06            [24] 1175 	pop	ar6
      000199 D0 07            [24] 1176 	pop	ar7
                                   1177 ;	../lib/linefi_packet.c:100: for (i=0;i<apstLineFiPkt->u8Size;i++) {
      00019B 74 05            [12] 1178 	mov	a,#0x05
      00019D 2D               [12] 1179 	add	a,r5
      00019E FA               [12] 1180 	mov	r2,a
      00019F E4               [12] 1181 	clr	a
      0001A0 3E               [12] 1182 	addc	a,r6
      0001A1 FB               [12] 1183 	mov	r3,a
      0001A2 8F 04            [24] 1184 	mov	ar4,r7
      0001A4 74 03            [12] 1185 	mov	a,#0x03
      0001A6 2D               [12] 1186 	add	a,r5
      0001A7 FD               [12] 1187 	mov	r5,a
      0001A8 E4               [12] 1188 	clr	a
      0001A9 3E               [12] 1189 	addc	a,r6
      0001AA FE               [12] 1190 	mov	r6,a
      0001AB 75*02 00         [24] 1191 	mov	_send_linefi_packet_i_65537_54,#0x00
      0001AE                       1192 00103$:
      0001AE 8D 82            [24] 1193 	mov	dpl,r5
      0001B0 8E 83            [24] 1194 	mov	dph,r6
      0001B2 8F F0            [24] 1195 	mov	b,r7
      0001B4 12r00r00         [24] 1196 	lcall	__gptrget
      0001B7 F8               [12] 1197 	mov	r0,a
      0001B8 C3               [12] 1198 	clr	c
      0001B9 E5*02            [12] 1199 	mov	a,_send_linefi_packet_i_65537_54
      0001BB 98               [12] 1200 	subb	a,r0
      0001BC 50 51            [24] 1201 	jnc	00105$
                                   1202 ;	../lib/linefi_packet.c:101: send_octet_to_linefi(*(apstLineFiPkt->pu8Data+i));
      0001BE C0 05            [24] 1203 	push	ar5
      0001C0 C0 06            [24] 1204 	push	ar6
      0001C2 C0 07            [24] 1205 	push	ar7
      0001C4 8A 82            [24] 1206 	mov	dpl,r2
      0001C6 8B 83            [24] 1207 	mov	dph,r3
      0001C8 8C F0            [24] 1208 	mov	b,r4
      0001CA 12r00r00         [24] 1209 	lcall	__gptrget
      0001CD F8               [12] 1210 	mov	r0,a
      0001CE A3               [24] 1211 	inc	dptr
      0001CF 12r00r00         [24] 1212 	lcall	__gptrget
      0001D2 F9               [12] 1213 	mov	r1,a
      0001D3 A3               [24] 1214 	inc	dptr
      0001D4 12r00r00         [24] 1215 	lcall	__gptrget
      0001D7 FF               [12] 1216 	mov	r7,a
      0001D8 E5*02            [12] 1217 	mov	a,_send_linefi_packet_i_65537_54
      0001DA 28               [12] 1218 	add	a,r0
      0001DB F8               [12] 1219 	mov	r0,a
      0001DC E4               [12] 1220 	clr	a
      0001DD 39               [12] 1221 	addc	a,r1
      0001DE F9               [12] 1222 	mov	r1,a
      0001DF 88 82            [24] 1223 	mov	dpl,r0
      0001E1 89 83            [24] 1224 	mov	dph,r1
      0001E3 8F F0            [24] 1225 	mov	b,r7
      0001E5 12r00r00         [24] 1226 	lcall	__gptrget
      0001E8 F5 82            [12] 1227 	mov	dpl,a
      0001EA C0 07            [24] 1228 	push	ar7
      0001EC C0 06            [24] 1229 	push	ar6
      0001EE C0 05            [24] 1230 	push	ar5
      0001F0 C0 04            [24] 1231 	push	ar4
      0001F2 C0 03            [24] 1232 	push	ar3
      0001F4 C0 02            [24] 1233 	push	ar2
      0001F6 12r00rDA         [24] 1234 	lcall	_send_octet_to_linefi
      0001F9 D0 02            [24] 1235 	pop	ar2
      0001FB D0 03            [24] 1236 	pop	ar3
      0001FD D0 04            [24] 1237 	pop	ar4
      0001FF D0 05            [24] 1238 	pop	ar5
      000201 D0 06            [24] 1239 	pop	ar6
      000203 D0 07            [24] 1240 	pop	ar7
                                   1241 ;	../lib/linefi_packet.c:100: for (i=0;i<apstLineFiPkt->u8Size;i++) {
      000205 05*02            [12] 1242 	inc	_send_linefi_packet_i_65537_54
      000207 D0 07            [24] 1243 	pop	ar7
      000209 D0 06            [24] 1244 	pop	ar6
      00020B D0 05            [24] 1245 	pop	ar5
      00020D 80 9F            [24] 1246 	sjmp	00103$
      00020F                       1247 00105$:
                                   1248 ;	../lib/linefi_packet.c:103: }
      00020F 22               [24] 1249 	ret
                                   1250 ;------------------------------------------------------------
                                   1251 ;Allocation info for local variables in function 'cp_buf2linefipacket'
                                   1252 ;------------------------------------------------------------
                                   1253 ;apu8RxBuf                 Allocated with name '_cp_buf2linefipacket_PARM_2'
                                   1254 ;apstLineFiPkt             Allocated with name '_cp_buf2linefipacket_PARM_3'
                                   1255 ;au8Size                   Allocated to registers r7 
                                   1256 ;pu8Buf                    Allocated to registers r5 r6 r7 
                                   1257 ;i                         Allocated with name '_cp_buf2linefipacket_i_65538_61'
                                   1258 ;sloc0                     Allocated with name '_cp_buf2linefipacket_sloc0_1_0'
                                   1259 ;------------------------------------------------------------
                                   1260 ;	../lib/linefi_packet.c:105: uint8 cp_buf2linefipacket(uint8 au8Size, uint8 * apu8RxBuf, linefi_packet_t * apstLineFiPkt)
                                   1261 ;	-----------------------------------------
                                   1262 ;	 function cp_buf2linefipacket
                                   1263 ;	-----------------------------------------
      000210                       1264 _cp_buf2linefipacket:
      000210 AF 82            [24] 1265 	mov	r7,dpl
                                   1266 ;	../lib/linefi_packet.c:107: if (au8Size < 5) {
      000212 BF 05 00         [24] 1267 	cjne	r7,#0x05,00132$
      000215                       1268 00132$:
      000215 50 04            [24] 1269 	jnc	00102$
                                   1270 ;	../lib/linefi_packet.c:108: return CONV_ERR_TOO_SMALLSIZE;
      000217 75 82 03         [24] 1271 	mov	dpl,#0x03
      00021A 22               [24] 1272 	ret
      00021B                       1273 00102$:
                                   1274 ;	../lib/linefi_packet.c:111: uint8 * pu8Buf = (uint8 *) apstLineFiPkt;
      00021B AD*06            [24] 1275 	mov	r5,_cp_buf2linefipacket_PARM_3
      00021D AE*07            [24] 1276 	mov	r6,(_cp_buf2linefipacket_PARM_3 + 1)
      00021F AF*08            [24] 1277 	mov	r7,(_cp_buf2linefipacket_PARM_3 + 2)
                                   1278 ;	../lib/linefi_packet.c:112: *pu8Buf++ = *apu8RxBuf++;
      000221 AA*03            [24] 1279 	mov	r2,_cp_buf2linefipacket_PARM_2
      000223 AB*04            [24] 1280 	mov	r3,(_cp_buf2linefipacket_PARM_2 + 1)
      000225 AC*05            [24] 1281 	mov	r4,(_cp_buf2linefipacket_PARM_2 + 2)
      000227 8A 82            [24] 1282 	mov	dpl,r2
      000229 8B 83            [24] 1283 	mov	dph,r3
      00022B 8C F0            [24] 1284 	mov	b,r4
      00022D 12r00r00         [24] 1285 	lcall	__gptrget
      000230 F9               [12] 1286 	mov	r1,a
      000231 74 01            [12] 1287 	mov	a,#0x01
      000233 2A               [12] 1288 	add	a,r2
      000234 F5*03            [12] 1289 	mov	_cp_buf2linefipacket_PARM_2,a
      000236 E4               [12] 1290 	clr	a
      000237 3B               [12] 1291 	addc	a,r3
      000238 F5*04            [12] 1292 	mov	(_cp_buf2linefipacket_PARM_2 + 1),a
      00023A 8C*05            [24] 1293 	mov	(_cp_buf2linefipacket_PARM_2 + 2),r4
      00023C 8D 82            [24] 1294 	mov	dpl,r5
      00023E 8E 83            [24] 1295 	mov	dph,r6
      000240 8F F0            [24] 1296 	mov	b,r7
      000242 E9               [12] 1297 	mov	a,r1
      000243 12r00r00         [24] 1298 	lcall	__gptrput
      000246 0D               [12] 1299 	inc	r5
      000247 BD 00 01         [24] 1300 	cjne	r5,#0x00,00134$
      00024A 0E               [12] 1301 	inc	r6
      00024B                       1302 00134$:
                                   1303 ;	../lib/linefi_packet.c:113: *pu8Buf++ = *apu8RxBuf++;
      00024B AA*03            [24] 1304 	mov	r2,_cp_buf2linefipacket_PARM_2
      00024D AB*04            [24] 1305 	mov	r3,(_cp_buf2linefipacket_PARM_2 + 1)
      00024F AC*05            [24] 1306 	mov	r4,(_cp_buf2linefipacket_PARM_2 + 2)
      000251 8A 82            [24] 1307 	mov	dpl,r2
      000253 8B 83            [24] 1308 	mov	dph,r3
      000255 8C F0            [24] 1309 	mov	b,r4
      000257 12r00r00         [24] 1310 	lcall	__gptrget
      00025A F9               [12] 1311 	mov	r1,a
      00025B 74 01            [12] 1312 	mov	a,#0x01
      00025D 2A               [12] 1313 	add	a,r2
      00025E F5*03            [12] 1314 	mov	_cp_buf2linefipacket_PARM_2,a
      000260 E4               [12] 1315 	clr	a
      000261 3B               [12] 1316 	addc	a,r3
      000262 F5*04            [12] 1317 	mov	(_cp_buf2linefipacket_PARM_2 + 1),a
      000264 8C*05            [24] 1318 	mov	(_cp_buf2linefipacket_PARM_2 + 2),r4
      000266 8D 82            [24] 1319 	mov	dpl,r5
      000268 8E 83            [24] 1320 	mov	dph,r6
      00026A 8F F0            [24] 1321 	mov	b,r7
      00026C E9               [12] 1322 	mov	a,r1
      00026D 12r00r00         [24] 1323 	lcall	__gptrput
      000270 0D               [12] 1324 	inc	r5
      000271 BD 00 01         [24] 1325 	cjne	r5,#0x00,00135$
      000274 0E               [12] 1326 	inc	r6
      000275                       1327 00135$:
                                   1328 ;	../lib/linefi_packet.c:114: *pu8Buf++ = *apu8RxBuf++;
      000275 AA*03            [24] 1329 	mov	r2,_cp_buf2linefipacket_PARM_2
      000277 AB*04            [24] 1330 	mov	r3,(_cp_buf2linefipacket_PARM_2 + 1)
      000279 AC*05            [24] 1331 	mov	r4,(_cp_buf2linefipacket_PARM_2 + 2)
      00027B 8A 82            [24] 1332 	mov	dpl,r2
      00027D 8B 83            [24] 1333 	mov	dph,r3
      00027F 8C F0            [24] 1334 	mov	b,r4
      000281 12r00r00         [24] 1335 	lcall	__gptrget
      000284 F9               [12] 1336 	mov	r1,a
      000285 74 01            [12] 1337 	mov	a,#0x01
      000287 2A               [12] 1338 	add	a,r2
      000288 F5*03            [12] 1339 	mov	_cp_buf2linefipacket_PARM_2,a
      00028A E4               [12] 1340 	clr	a
      00028B 3B               [12] 1341 	addc	a,r3
      00028C F5*04            [12] 1342 	mov	(_cp_buf2linefipacket_PARM_2 + 1),a
      00028E 8C*05            [24] 1343 	mov	(_cp_buf2linefipacket_PARM_2 + 2),r4
      000290 8D 82            [24] 1344 	mov	dpl,r5
      000292 8E 83            [24] 1345 	mov	dph,r6
      000294 8F F0            [24] 1346 	mov	b,r7
      000296 E9               [12] 1347 	mov	a,r1
      000297 12r00r00         [24] 1348 	lcall	__gptrput
      00029A 0D               [12] 1349 	inc	r5
      00029B BD 00 01         [24] 1350 	cjne	r5,#0x00,00136$
      00029E 0E               [12] 1351 	inc	r6
      00029F                       1352 00136$:
                                   1353 ;	../lib/linefi_packet.c:115: *pu8Buf++ = *apu8RxBuf++;
      00029F AA*03            [24] 1354 	mov	r2,_cp_buf2linefipacket_PARM_2
      0002A1 AB*04            [24] 1355 	mov	r3,(_cp_buf2linefipacket_PARM_2 + 1)
      0002A3 AC*05            [24] 1356 	mov	r4,(_cp_buf2linefipacket_PARM_2 + 2)
      0002A5 8A 82            [24] 1357 	mov	dpl,r2
      0002A7 8B 83            [24] 1358 	mov	dph,r3
      0002A9 8C F0            [24] 1359 	mov	b,r4
      0002AB 12r00r00         [24] 1360 	lcall	__gptrget
      0002AE F9               [12] 1361 	mov	r1,a
      0002AF 74 01            [12] 1362 	mov	a,#0x01
      0002B1 2A               [12] 1363 	add	a,r2
      0002B2 F5*03            [12] 1364 	mov	_cp_buf2linefipacket_PARM_2,a
      0002B4 E4               [12] 1365 	clr	a
      0002B5 3B               [12] 1366 	addc	a,r3
      0002B6 F5*04            [12] 1367 	mov	(_cp_buf2linefipacket_PARM_2 + 1),a
      0002B8 8C*05            [24] 1368 	mov	(_cp_buf2linefipacket_PARM_2 + 2),r4
      0002BA 8D 82            [24] 1369 	mov	dpl,r5
      0002BC 8E 83            [24] 1370 	mov	dph,r6
      0002BE 8F F0            [24] 1371 	mov	b,r7
      0002C0 E9               [12] 1372 	mov	a,r1
      0002C1 12r00r00         [24] 1373 	lcall	__gptrput
      0002C4 0D               [12] 1374 	inc	r5
      0002C5 BD 00 01         [24] 1375 	cjne	r5,#0x00,00137$
      0002C8 0E               [12] 1376 	inc	r6
      0002C9                       1377 00137$:
                                   1378 ;	../lib/linefi_packet.c:116: *pu8Buf++ = *apu8RxBuf++;
      0002C9 AA*03            [24] 1379 	mov	r2,_cp_buf2linefipacket_PARM_2
      0002CB AB*04            [24] 1380 	mov	r3,(_cp_buf2linefipacket_PARM_2 + 1)
      0002CD AC*05            [24] 1381 	mov	r4,(_cp_buf2linefipacket_PARM_2 + 2)
      0002CF 8A 82            [24] 1382 	mov	dpl,r2
      0002D1 8B 83            [24] 1383 	mov	dph,r3
      0002D3 8C F0            [24] 1384 	mov	b,r4
      0002D5 12r00r00         [24] 1385 	lcall	__gptrget
      0002D8 F9               [12] 1386 	mov	r1,a
      0002D9 74 01            [12] 1387 	mov	a,#0x01
      0002DB 2A               [12] 1388 	add	a,r2
      0002DC F5*03            [12] 1389 	mov	_cp_buf2linefipacket_PARM_2,a
      0002DE E4               [12] 1390 	clr	a
      0002DF 3B               [12] 1391 	addc	a,r3
      0002E0 F5*04            [12] 1392 	mov	(_cp_buf2linefipacket_PARM_2 + 1),a
      0002E2 8C*05            [24] 1393 	mov	(_cp_buf2linefipacket_PARM_2 + 2),r4
      0002E4 8D 82            [24] 1394 	mov	dpl,r5
      0002E6 8E 83            [24] 1395 	mov	dph,r6
      0002E8 8F F0            [24] 1396 	mov	b,r7
      0002EA E9               [12] 1397 	mov	a,r1
      0002EB 12r00r00         [24] 1398 	lcall	__gptrput
                                   1399 ;	../lib/linefi_packet.c:118: for (i=0;i<apstLineFiPkt->u8Size;i++) {
      0002EE AD*06            [24] 1400 	mov	r5,_cp_buf2linefipacket_PARM_3
      0002F0 AE*07            [24] 1401 	mov	r6,(_cp_buf2linefipacket_PARM_3 + 1)
      0002F2 AF*08            [24] 1402 	mov	r7,(_cp_buf2linefipacket_PARM_3 + 2)
      0002F4 74 03            [12] 1403 	mov	a,#0x03
      0002F6 2D               [12] 1404 	add	a,r5
      0002F7 FA               [12] 1405 	mov	r2,a
      0002F8 E4               [12] 1406 	clr	a
      0002F9 3E               [12] 1407 	addc	a,r6
      0002FA FB               [12] 1408 	mov	r3,a
      0002FB 8F 04            [24] 1409 	mov	ar4,r7
      0002FD 85*03*0A         [24] 1410 	mov	_cp_buf2linefipacket_sloc0_1_0,_cp_buf2linefipacket_PARM_2
      000300 85*04*0B         [24] 1411 	mov	(_cp_buf2linefipacket_sloc0_1_0 + 1),(_cp_buf2linefipacket_PARM_2 + 1)
      000303 85*05*0C         [24] 1412 	mov	(_cp_buf2linefipacket_sloc0_1_0 + 2),(_cp_buf2linefipacket_PARM_2 + 2)
      000306 75*09 00         [24] 1413 	mov	_cp_buf2linefipacket_i_65538_61,#0x00
      000309                       1414 00107$:
      000309 8A 82            [24] 1415 	mov	dpl,r2
      00030B 8B 83            [24] 1416 	mov	dph,r3
      00030D 8C F0            [24] 1417 	mov	b,r4
      00030F 12r00r00         [24] 1418 	lcall	__gptrget
      000312 F8               [12] 1419 	mov	r0,a
      000313 C3               [12] 1420 	clr	c
      000314 E5*09            [12] 1421 	mov	a,_cp_buf2linefipacket_i_65538_61
      000316 98               [12] 1422 	subb	a,r0
      000317 50 52            [24] 1423 	jnc	00103$
                                   1424 ;	../lib/linefi_packet.c:119: apstLineFiPkt->pu8Data[i] = *apu8RxBuf++;
      000319 C0 02            [24] 1425 	push	ar2
      00031B C0 03            [24] 1426 	push	ar3
      00031D C0 04            [24] 1427 	push	ar4
      00031F 74 05            [12] 1428 	mov	a,#0x05
      000321 2D               [12] 1429 	add	a,r5
      000322 F8               [12] 1430 	mov	r0,a
      000323 E4               [12] 1431 	clr	a
      000324 3E               [12] 1432 	addc	a,r6
      000325 F9               [12] 1433 	mov	r1,a
      000326 8F 04            [24] 1434 	mov	ar4,r7
      000328 88 82            [24] 1435 	mov	dpl,r0
      00032A 89 83            [24] 1436 	mov	dph,r1
      00032C 8C F0            [24] 1437 	mov	b,r4
      00032E 12r00r00         [24] 1438 	lcall	__gptrget
      000331 F8               [12] 1439 	mov	r0,a
      000332 A3               [24] 1440 	inc	dptr
      000333 12r00r00         [24] 1441 	lcall	__gptrget
      000336 F9               [12] 1442 	mov	r1,a
      000337 A3               [24] 1443 	inc	dptr
      000338 12r00r00         [24] 1444 	lcall	__gptrget
      00033B FC               [12] 1445 	mov	r4,a
      00033C E5*09            [12] 1446 	mov	a,_cp_buf2linefipacket_i_65538_61
      00033E 28               [12] 1447 	add	a,r0
      00033F F8               [12] 1448 	mov	r0,a
      000340 E4               [12] 1449 	clr	a
      000341 39               [12] 1450 	addc	a,r1
      000342 F9               [12] 1451 	mov	r1,a
      000343 85*0A 82         [24] 1452 	mov	dpl,_cp_buf2linefipacket_sloc0_1_0
      000346 85*0B 83         [24] 1453 	mov	dph,(_cp_buf2linefipacket_sloc0_1_0 + 1)
      000349 85*0C F0         [24] 1454 	mov	b,(_cp_buf2linefipacket_sloc0_1_0 + 2)
      00034C 12r00r00         [24] 1455 	lcall	__gptrget
      00034F FB               [12] 1456 	mov	r3,a
      000350 A3               [24] 1457 	inc	dptr
      000351 85 82*0A         [24] 1458 	mov	_cp_buf2linefipacket_sloc0_1_0,dpl
      000354 85 83*0B         [24] 1459 	mov	(_cp_buf2linefipacket_sloc0_1_0 + 1),dph
      000357 88 82            [24] 1460 	mov	dpl,r0
      000359 89 83            [24] 1461 	mov	dph,r1
      00035B 8C F0            [24] 1462 	mov	b,r4
      00035D EB               [12] 1463 	mov	a,r3
      00035E 12r00r00         [24] 1464 	lcall	__gptrput
                                   1465 ;	../lib/linefi_packet.c:118: for (i=0;i<apstLineFiPkt->u8Size;i++) {
      000361 05*09            [12] 1466 	inc	_cp_buf2linefipacket_i_65538_61
      000363 D0 04            [24] 1467 	pop	ar4
      000365 D0 03            [24] 1468 	pop	ar3
      000367 D0 02            [24] 1469 	pop	ar2
      000369 80 9E            [24] 1470 	sjmp	00107$
      00036B                       1471 00103$:
                                   1472 ;	../lib/linefi_packet.c:122: if (chk_crc_linefi_packet_packet(apstLineFiPkt) == CRC_NOT_OK) {
      00036B 8D 82            [24] 1473 	mov	dpl,r5
      00036D 8E 83            [24] 1474 	mov	dph,r6
      00036F 8F F0            [24] 1475 	mov	b,r7
      000371 12r00rA5         [24] 1476 	lcall	_chk_crc_linefi_packet_packet
      000374 E5 82            [12] 1477 	mov	a,dpl
      000376 70 04            [24] 1478 	jnz	00105$
                                   1479 ;	../lib/linefi_packet.c:123: return CONV_ERR_CRC;
      000378 75 82 04         [24] 1480 	mov	dpl,#0x04
      00037B 22               [24] 1481 	ret
      00037C                       1482 00105$:
                                   1483 ;	../lib/linefi_packet.c:125: return CONV_OK;
      00037C 75 82 02         [24] 1484 	mov	dpl,#0x02
                                   1485 ;	../lib/linefi_packet.c:126: }
      00037F 22               [24] 1486 	ret
                                   1487 ;------------------------------------------------------------
                                   1488 ;Allocation info for local variables in function 'print_linefipacket'
                                   1489 ;------------------------------------------------------------
                                   1490 ;apstLineFiPkt             Allocated to registers r5 r6 r7 
                                   1491 ;i                         Allocated with name '_print_linefipacket_i_65537_67'
                                   1492 ;------------------------------------------------------------
                                   1493 ;	../lib/linefi_packet.c:128: void print_linefipacket(linefi_packet_t * apstLineFiPkt)
                                   1494 ;	-----------------------------------------
                                   1495 ;	 function print_linefipacket
                                   1496 ;	-----------------------------------------
      000380                       1497 _print_linefipacket:
      000380 AD 82            [24] 1498 	mov	r5,dpl
      000382 AE 83            [24] 1499 	mov	r6,dph
      000384 AF F0            [24] 1500 	mov	r7,b
                                   1501 ;	../lib/linefi_packet.c:130: printf_fast_f("-------------------------------\r\n");
      000386 C0 07            [24] 1502 	push	ar7
      000388 C0 06            [24] 1503 	push	ar6
      00038A C0 05            [24] 1504 	push	ar5
      00038C 74r00            [12] 1505 	mov	a,#___str_0
      00038E C0 E0            [24] 1506 	push	acc
      000390 74s00            [12] 1507 	mov	a,#(___str_0 >> 8)
      000392 C0 E0            [24] 1508 	push	acc
      000394 12r00r00         [24] 1509 	lcall	_printf_fast_f
      000397 15 81            [12] 1510 	dec	sp
      000399 15 81            [12] 1511 	dec	sp
      00039B D0 05            [24] 1512 	pop	ar5
      00039D D0 06            [24] 1513 	pop	ar6
      00039F D0 07            [24] 1514 	pop	ar7
                                   1515 ;	../lib/linefi_packet.c:131: printf_fast_f("Ver : %d\r\n", apstLineFiPkt->u8Ver);
      0003A1 8D 82            [24] 1516 	mov	dpl,r5
      0003A3 8E 83            [24] 1517 	mov	dph,r6
      0003A5 8F F0            [24] 1518 	mov	b,r7
      0003A7 12r00r00         [24] 1519 	lcall	__gptrget
      0003AA FC               [12] 1520 	mov	r4,a
      0003AB 7B 00            [12] 1521 	mov	r3,#0x00
      0003AD C0 07            [24] 1522 	push	ar7
      0003AF C0 06            [24] 1523 	push	ar6
      0003B1 C0 05            [24] 1524 	push	ar5
      0003B3 C0 04            [24] 1525 	push	ar4
      0003B5 C0 03            [24] 1526 	push	ar3
      0003B7 74r22            [12] 1527 	mov	a,#___str_1
      0003B9 C0 E0            [24] 1528 	push	acc
      0003BB 74s00            [12] 1529 	mov	a,#(___str_1 >> 8)
      0003BD C0 E0            [24] 1530 	push	acc
      0003BF 12r00r00         [24] 1531 	lcall	_printf_fast_f
      0003C2 E5 81            [12] 1532 	mov	a,sp
      0003C4 24 FC            [12] 1533 	add	a,#0xfc
      0003C6 F5 81            [12] 1534 	mov	sp,a
      0003C8 D0 05            [24] 1535 	pop	ar5
      0003CA D0 06            [24] 1536 	pop	ar6
      0003CC D0 07            [24] 1537 	pop	ar7
                                   1538 ;	../lib/linefi_packet.c:132: printf_fast_f("Type: %d(%s)\r\n", apstLineFiPkt->u8Type, gpcTypeStr[apstLineFiPkt->u8Type]);
      0003CE 74 01            [12] 1539 	mov	a,#0x01
      0003D0 2D               [12] 1540 	add	a,r5
      0003D1 FA               [12] 1541 	mov	r2,a
      0003D2 E4               [12] 1542 	clr	a
      0003D3 3E               [12] 1543 	addc	a,r6
      0003D4 FB               [12] 1544 	mov	r3,a
      0003D5 8F 04            [24] 1545 	mov	ar4,r7
      0003D7 8A 82            [24] 1546 	mov	dpl,r2
      0003D9 8B 83            [24] 1547 	mov	dph,r3
      0003DB 8C F0            [24] 1548 	mov	b,r4
      0003DD 12r00r00         [24] 1549 	lcall	__gptrget
      0003E0 FA               [12] 1550 	mov	r2,a
      0003E1 75 F0 03         [24] 1551 	mov	b,#0x03
      0003E4 A4               [48] 1552 	mul	ab
      0003E5 24r00            [12] 1553 	add	a,#_gpcTypeStr
      0003E7 F5 82            [12] 1554 	mov	dpl,a
      0003E9 74s00            [12] 1555 	mov	a,#(_gpcTypeStr >> 8)
      0003EB 35 F0            [12] 1556 	addc	a,b
      0003ED F5 83            [12] 1557 	mov	dph,a
      0003EF E0               [24] 1558 	movx	a,@dptr
      0003F0 F9               [12] 1559 	mov	r1,a
      0003F1 A3               [24] 1560 	inc	dptr
      0003F2 E0               [24] 1561 	movx	a,@dptr
      0003F3 FB               [12] 1562 	mov	r3,a
      0003F4 A3               [24] 1563 	inc	dptr
      0003F5 E0               [24] 1564 	movx	a,@dptr
      0003F6 FC               [12] 1565 	mov	r4,a
      0003F7 8A 00            [24] 1566 	mov	ar0,r2
      0003F9 7A 00            [12] 1567 	mov	r2,#0x00
      0003FB C0 07            [24] 1568 	push	ar7
      0003FD C0 06            [24] 1569 	push	ar6
      0003FF C0 05            [24] 1570 	push	ar5
      000401 C0 01            [24] 1571 	push	ar1
      000403 C0 03            [24] 1572 	push	ar3
      000405 C0 04            [24] 1573 	push	ar4
      000407 C0 00            [24] 1574 	push	ar0
      000409 C0 02            [24] 1575 	push	ar2
      00040B 74r2D            [12] 1576 	mov	a,#___str_2
      00040D C0 E0            [24] 1577 	push	acc
      00040F 74s00            [12] 1578 	mov	a,#(___str_2 >> 8)
      000411 C0 E0            [24] 1579 	push	acc
      000413 12r00r00         [24] 1580 	lcall	_printf_fast_f
      000416 E5 81            [12] 1581 	mov	a,sp
      000418 24 F9            [12] 1582 	add	a,#0xf9
      00041A F5 81            [12] 1583 	mov	sp,a
      00041C D0 05            [24] 1584 	pop	ar5
      00041E D0 06            [24] 1585 	pop	ar6
      000420 D0 07            [24] 1586 	pop	ar7
                                   1587 ;	../lib/linefi_packet.c:135: printf_fast_f("Addr: %d\r\n", apstLineFiPkt->u8Addr);
      000422 74 02            [12] 1588 	mov	a,#0x02
      000424 2D               [12] 1589 	add	a,r5
      000425 FA               [12] 1590 	mov	r2,a
      000426 E4               [12] 1591 	clr	a
      000427 3E               [12] 1592 	addc	a,r6
      000428 FB               [12] 1593 	mov	r3,a
      000429 8F 04            [24] 1594 	mov	ar4,r7
      00042B 8A 82            [24] 1595 	mov	dpl,r2
      00042D 8B 83            [24] 1596 	mov	dph,r3
      00042F 8C F0            [24] 1597 	mov	b,r4
      000431 12r00r00         [24] 1598 	lcall	__gptrget
      000434 FA               [12] 1599 	mov	r2,a
      000435 7C 00            [12] 1600 	mov	r4,#0x00
      000437 C0 07            [24] 1601 	push	ar7
      000439 C0 06            [24] 1602 	push	ar6
      00043B C0 05            [24] 1603 	push	ar5
      00043D C0 02            [24] 1604 	push	ar2
      00043F C0 04            [24] 1605 	push	ar4
      000441 74r3C            [12] 1606 	mov	a,#___str_3
      000443 C0 E0            [24] 1607 	push	acc
      000445 74s00            [12] 1608 	mov	a,#(___str_3 >> 8)
      000447 C0 E0            [24] 1609 	push	acc
      000449 12r00r00         [24] 1610 	lcall	_printf_fast_f
      00044C E5 81            [12] 1611 	mov	a,sp
      00044E 24 FC            [12] 1612 	add	a,#0xfc
      000450 F5 81            [12] 1613 	mov	sp,a
      000452 D0 05            [24] 1614 	pop	ar5
      000454 D0 06            [24] 1615 	pop	ar6
      000456 D0 07            [24] 1616 	pop	ar7
                                   1617 ;	../lib/linefi_packet.c:136: printf_fast_f("Size: %d\r\n", apstLineFiPkt->u8Size);
      000458 74 03            [12] 1618 	mov	a,#0x03
      00045A 2D               [12] 1619 	add	a,r5
      00045B FA               [12] 1620 	mov	r2,a
      00045C E4               [12] 1621 	clr	a
      00045D 3E               [12] 1622 	addc	a,r6
      00045E FB               [12] 1623 	mov	r3,a
      00045F 8F 04            [24] 1624 	mov	ar4,r7
      000461 8A 82            [24] 1625 	mov	dpl,r2
      000463 8B 83            [24] 1626 	mov	dph,r3
      000465 8C F0            [24] 1627 	mov	b,r4
      000467 12r00r00         [24] 1628 	lcall	__gptrget
      00046A FA               [12] 1629 	mov	r2,a
      00046B 7C 00            [12] 1630 	mov	r4,#0x00
      00046D C0 07            [24] 1631 	push	ar7
      00046F C0 06            [24] 1632 	push	ar6
      000471 C0 05            [24] 1633 	push	ar5
      000473 C0 02            [24] 1634 	push	ar2
      000475 C0 04            [24] 1635 	push	ar4
      000477 74r47            [12] 1636 	mov	a,#___str_4
      000479 C0 E0            [24] 1637 	push	acc
      00047B 74s00            [12] 1638 	mov	a,#(___str_4 >> 8)
      00047D C0 E0            [24] 1639 	push	acc
      00047F 12r00r00         [24] 1640 	lcall	_printf_fast_f
      000482 E5 81            [12] 1641 	mov	a,sp
      000484 24 FC            [12] 1642 	add	a,#0xfc
      000486 F5 81            [12] 1643 	mov	sp,a
      000488 D0 05            [24] 1644 	pop	ar5
      00048A D0 06            [24] 1645 	pop	ar6
      00048C D0 07            [24] 1646 	pop	ar7
                                   1647 ;	../lib/linefi_packet.c:137: printf_fast_f("CRC comp : %d %d\r\n", apstLineFiPkt->u8CRC, calc_crc_linefi_packet_packet(apstLineFiPkt));
      00048E 8D 82            [24] 1648 	mov	dpl,r5
      000490 8E 83            [24] 1649 	mov	dph,r6
      000492 8F F0            [24] 1650 	mov	b,r7
      000494 C0 07            [24] 1651 	push	ar7
      000496 C0 06            [24] 1652 	push	ar6
      000498 C0 05            [24] 1653 	push	ar5
      00049A 12r00r1B         [24] 1654 	lcall	_calc_crc_linefi_packet_packet
      00049D AC 82            [24] 1655 	mov	r4,dpl
      00049F D0 05            [24] 1656 	pop	ar5
      0004A1 D0 06            [24] 1657 	pop	ar6
      0004A3 D0 07            [24] 1658 	pop	ar7
      0004A5 7B 00            [12] 1659 	mov	r3,#0x00
      0004A7 74 04            [12] 1660 	mov	a,#0x04
      0004A9 2D               [12] 1661 	add	a,r5
      0004AA F8               [12] 1662 	mov	r0,a
      0004AB E4               [12] 1663 	clr	a
      0004AC 3E               [12] 1664 	addc	a,r6
      0004AD F9               [12] 1665 	mov	r1,a
      0004AE 8F 02            [24] 1666 	mov	ar2,r7
      0004B0 88 82            [24] 1667 	mov	dpl,r0
      0004B2 89 83            [24] 1668 	mov	dph,r1
      0004B4 8A F0            [24] 1669 	mov	b,r2
      0004B6 12r00r00         [24] 1670 	lcall	__gptrget
      0004B9 F8               [12] 1671 	mov	r0,a
      0004BA 7A 00            [12] 1672 	mov	r2,#0x00
      0004BC C0 07            [24] 1673 	push	ar7
      0004BE C0 06            [24] 1674 	push	ar6
      0004C0 C0 05            [24] 1675 	push	ar5
      0004C2 C0 04            [24] 1676 	push	ar4
      0004C4 C0 03            [24] 1677 	push	ar3
      0004C6 C0 00            [24] 1678 	push	ar0
      0004C8 C0 02            [24] 1679 	push	ar2
      0004CA 74r52            [12] 1680 	mov	a,#___str_5
      0004CC C0 E0            [24] 1681 	push	acc
      0004CE 74s00            [12] 1682 	mov	a,#(___str_5 >> 8)
      0004D0 C0 E0            [24] 1683 	push	acc
      0004D2 12r00r00         [24] 1684 	lcall	_printf_fast_f
      0004D5 E5 81            [12] 1685 	mov	a,sp
      0004D7 24 FA            [12] 1686 	add	a,#0xfa
      0004D9 F5 81            [12] 1687 	mov	sp,a
                                   1688 ;	../lib/linefi_packet.c:138: printf_fast_f("DATA: ");
      0004DB 74r65            [12] 1689 	mov	a,#___str_6
      0004DD C0 E0            [24] 1690 	push	acc
      0004DF 74s00            [12] 1691 	mov	a,#(___str_6 >> 8)
      0004E1 C0 E0            [24] 1692 	push	acc
      0004E3 12r00r00         [24] 1693 	lcall	_printf_fast_f
      0004E6 15 81            [12] 1694 	dec	sp
      0004E8 15 81            [12] 1695 	dec	sp
      0004EA D0 05            [24] 1696 	pop	ar5
      0004EC D0 06            [24] 1697 	pop	ar6
      0004EE D0 07            [24] 1698 	pop	ar7
                                   1699 ;	../lib/linefi_packet.c:140: for (i=0;i<apstLineFiPkt->u8Size;i++) {
      0004F0 74 05            [12] 1700 	mov	a,#0x05
      0004F2 2D               [12] 1701 	add	a,r5
      0004F3 FA               [12] 1702 	mov	r2,a
      0004F4 E4               [12] 1703 	clr	a
      0004F5 3E               [12] 1704 	addc	a,r6
      0004F6 FB               [12] 1705 	mov	r3,a
      0004F7 8F 04            [24] 1706 	mov	ar4,r7
      0004F9 74 03            [12] 1707 	mov	a,#0x03
      0004FB 2D               [12] 1708 	add	a,r5
      0004FC FD               [12] 1709 	mov	r5,a
      0004FD E4               [12] 1710 	clr	a
      0004FE 3E               [12] 1711 	addc	a,r6
      0004FF FE               [12] 1712 	mov	r6,a
      000500 75*0D 00         [24] 1713 	mov	_print_linefipacket_i_65537_67,#0x00
      000503                       1714 00103$:
      000503 8D 82            [24] 1715 	mov	dpl,r5
      000505 8E 83            [24] 1716 	mov	dph,r6
      000507 8F F0            [24] 1717 	mov	b,r7
      000509 12r00r00         [24] 1718 	lcall	__gptrget
      00050C F8               [12] 1719 	mov	r0,a
      00050D C3               [12] 1720 	clr	c
      00050E E5*0D            [12] 1721 	mov	a,_print_linefipacket_i_65537_67
      000510 98               [12] 1722 	subb	a,r0
      000511 50 64            [24] 1723 	jnc	00101$
                                   1724 ;	../lib/linefi_packet.c:141: printf_fast_f("0x%x ", apstLineFiPkt->pu8Data[i]);
      000513 C0 05            [24] 1725 	push	ar5
      000515 C0 06            [24] 1726 	push	ar6
      000517 C0 07            [24] 1727 	push	ar7
      000519 8A 82            [24] 1728 	mov	dpl,r2
      00051B 8B 83            [24] 1729 	mov	dph,r3
      00051D 8C F0            [24] 1730 	mov	b,r4
      00051F 12r00r00         [24] 1731 	lcall	__gptrget
      000522 F8               [12] 1732 	mov	r0,a
      000523 A3               [24] 1733 	inc	dptr
      000524 12r00r00         [24] 1734 	lcall	__gptrget
      000527 F9               [12] 1735 	mov	r1,a
      000528 A3               [24] 1736 	inc	dptr
      000529 12r00r00         [24] 1737 	lcall	__gptrget
      00052C FF               [12] 1738 	mov	r7,a
      00052D E5*0D            [12] 1739 	mov	a,_print_linefipacket_i_65537_67
      00052F 28               [12] 1740 	add	a,r0
      000530 F8               [12] 1741 	mov	r0,a
      000531 E4               [12] 1742 	clr	a
      000532 39               [12] 1743 	addc	a,r1
      000533 F9               [12] 1744 	mov	r1,a
      000534 88 82            [24] 1745 	mov	dpl,r0
      000536 89 83            [24] 1746 	mov	dph,r1
      000538 8F F0            [24] 1747 	mov	b,r7
      00053A 12r00r00         [24] 1748 	lcall	__gptrget
      00053D F8               [12] 1749 	mov	r0,a
      00053E 7F 00            [12] 1750 	mov	r7,#0x00
      000540 C0 07            [24] 1751 	push	ar7
      000542 C0 06            [24] 1752 	push	ar6
      000544 C0 05            [24] 1753 	push	ar5
      000546 C0 04            [24] 1754 	push	ar4
      000548 C0 03            [24] 1755 	push	ar3
      00054A C0 02            [24] 1756 	push	ar2
      00054C C0 00            [24] 1757 	push	ar0
      00054E C0 07            [24] 1758 	push	ar7
      000550 74r6C            [12] 1759 	mov	a,#___str_7
      000552 C0 E0            [24] 1760 	push	acc
      000554 74s00            [12] 1761 	mov	a,#(___str_7 >> 8)
      000556 C0 E0            [24] 1762 	push	acc
      000558 12r00r00         [24] 1763 	lcall	_printf_fast_f
      00055B E5 81            [12] 1764 	mov	a,sp
      00055D 24 FC            [12] 1765 	add	a,#0xfc
      00055F F5 81            [12] 1766 	mov	sp,a
      000561 D0 02            [24] 1767 	pop	ar2
      000563 D0 03            [24] 1768 	pop	ar3
      000565 D0 04            [24] 1769 	pop	ar4
      000567 D0 05            [24] 1770 	pop	ar5
      000569 D0 06            [24] 1771 	pop	ar6
      00056B D0 07            [24] 1772 	pop	ar7
                                   1773 ;	../lib/linefi_packet.c:140: for (i=0;i<apstLineFiPkt->u8Size;i++) {
      00056D 05*0D            [12] 1774 	inc	_print_linefipacket_i_65537_67
      00056F D0 07            [24] 1775 	pop	ar7
      000571 D0 06            [24] 1776 	pop	ar6
      000573 D0 05            [24] 1777 	pop	ar5
      000575 80 8C            [24] 1778 	sjmp	00103$
      000577                       1779 00101$:
                                   1780 ;	../lib/linefi_packet.c:143: printf_fast_f("\r\n");
      000577 74r72            [12] 1781 	mov	a,#___str_8
      000579 C0 E0            [24] 1782 	push	acc
      00057B 74s00            [12] 1783 	mov	a,#(___str_8 >> 8)
      00057D C0 E0            [24] 1784 	push	acc
      00057F 12r00r00         [24] 1785 	lcall	_printf_fast_f
      000582 15 81            [12] 1786 	dec	sp
      000584 15 81            [12] 1787 	dec	sp
                                   1788 ;	../lib/linefi_packet.c:144: printf_fast_f("-------------------------------\r\n");
      000586 74r00            [12] 1789 	mov	a,#___str_0
      000588 C0 E0            [24] 1790 	push	acc
      00058A 74s00            [12] 1791 	mov	a,#(___str_0 >> 8)
      00058C C0 E0            [24] 1792 	push	acc
      00058E 12r00r00         [24] 1793 	lcall	_printf_fast_f
      000591 15 81            [12] 1794 	dec	sp
      000593 15 81            [12] 1795 	dec	sp
                                   1796 ;	../lib/linefi_packet.c:145: }
      000595 22               [24] 1797 	ret
                                   1798 ;------------------------------------------------------------
                                   1799 ;Allocation info for local variables in function 'crc8'
                                   1800 ;------------------------------------------------------------
                                   1801 ;num_bytes                 Allocated with name '_crc8_PARM_2'
                                   1802 ;au8CRC                    Allocated with name '_crc8_PARM_3'
                                   1803 ;input_str                 Allocated to registers r5 r6 r7 
                                   1804 ;a                         Allocated to registers r3 
                                   1805 ;crc                       Allocated to registers r4 
                                   1806 ;ptr                       Allocated to registers r5 r6 r7 
                                   1807 ;------------------------------------------------------------
                                   1808 ;	../lib/linefi_packet.c:166: uint8 crc8( uint8 *input_str, uint8 num_bytes, uint8 au8CRC) 
                                   1809 ;	-----------------------------------------
                                   1810 ;	 function crc8
                                   1811 ;	-----------------------------------------
      000596                       1812 _crc8:
      000596 AD 82            [24] 1813 	mov	r5,dpl
      000598 AE 83            [24] 1814 	mov	r6,dph
      00059A AF F0            [24] 1815 	mov	r7,b
                                   1816 ;	../lib/linefi_packet.c:172: crc = au8CRC;
      00059C AC*01            [24] 1817 	mov	r4,_crc8_PARM_3
                                   1818 ;	../lib/linefi_packet.c:175: if ( ptr != NULL )
      00059E ED               [12] 1819 	mov	a,r5
      00059F 4E               [12] 1820 	orl	a,r6
      0005A0 60 21            [24] 1821 	jz	00103$
                                   1822 ;	../lib/linefi_packet.c:176: for (a=0; a<num_bytes; a++) {
      0005A2 7B 00            [12] 1823 	mov	r3,#0x00
      0005A4                       1824 00105$:
      0005A4 C3               [12] 1825 	clr	c
      0005A5 EB               [12] 1826 	mov	a,r3
      0005A6 95*00            [12] 1827 	subb	a,_crc8_PARM_2
      0005A8 50 19            [24] 1828 	jnc	00103$
                                   1829 ;	../lib/linefi_packet.c:178: crc = sht75_crc_table[(*ptr++) ^ crc];
      0005AA 8D 82            [24] 1830 	mov	dpl,r5
      0005AC 8E 83            [24] 1831 	mov	dph,r6
      0005AE 8F F0            [24] 1832 	mov	b,r7
      0005B0 12r00r00         [24] 1833 	lcall	__gptrget
      0005B3 FA               [12] 1834 	mov	r2,a
      0005B4 A3               [24] 1835 	inc	dptr
      0005B5 AD 82            [24] 1836 	mov	r5,dpl
      0005B7 AE 83            [24] 1837 	mov	r6,dph
      0005B9 EC               [12] 1838 	mov	a,r4
      0005BA 6A               [12] 1839 	xrl	a,r2
      0005BB 90r06rD2         [24] 1840 	mov	dptr,#_sht75_crc_table
      0005BE 93               [24] 1841 	movc	a,@a+dptr
      0005BF FC               [12] 1842 	mov	r4,a
                                   1843 ;	../lib/linefi_packet.c:176: for (a=0; a<num_bytes; a++) {
      0005C0 0B               [12] 1844 	inc	r3
      0005C1 80 E1            [24] 1845 	sjmp	00105$
      0005C3                       1846 00103$:
                                   1847 ;	../lib/linefi_packet.c:181: return crc;
      0005C3 8C 82            [24] 1848 	mov	dpl,r4
                                   1849 ;	../lib/linefi_packet.c:182: }  /* crc_8 */
      0005C5 22               [24] 1850 	ret
                                   1851 ;------------------------------------------------------------
                                   1852 ;Allocation info for local variables in function 'print_raw_packet'
                                   1853 ;------------------------------------------------------------
                                   1854 ;apu8Data                  Allocated with name '_print_raw_packet_PARM_2'
                                   1855 ;au8Size                   Allocated to registers r7 
                                   1856 ;i                         Allocated to registers r6 
                                   1857 ;------------------------------------------------------------
                                   1858 ;	../lib/linefi_packet.c:184: void print_raw_packet(uint8 au8Size, uint8 * apu8Data)
                                   1859 ;	-----------------------------------------
                                   1860 ;	 function print_raw_packet
                                   1861 ;	-----------------------------------------
      0005C6                       1862 _print_raw_packet:
      0005C6 AF 82            [24] 1863 	mov	r7,dpl
                                   1864 ;	../lib/linefi_packet.c:187: printf_fast_f("#%d\r\n", gu16Cnt++);
      0005C8 AD*00            [24] 1865 	mov	r5,_gu16Cnt
      0005CA AE*01            [24] 1866 	mov	r6,(_gu16Cnt + 1)
      0005CC 05*00            [12] 1867 	inc	_gu16Cnt
      0005CE E4               [12] 1868 	clr	a
      0005CF B5*00 02         [24] 1869 	cjne	a,_gu16Cnt,00136$
      0005D2 05*01            [12] 1870 	inc	(_gu16Cnt + 1)
      0005D4                       1871 00136$:
      0005D4 C0 07            [24] 1872 	push	ar7
      0005D6 C0 05            [24] 1873 	push	ar5
      0005D8 C0 06            [24] 1874 	push	ar6
      0005DA 74r75            [12] 1875 	mov	a,#___str_9
      0005DC C0 E0            [24] 1876 	push	acc
      0005DE 74s00            [12] 1877 	mov	a,#(___str_9 >> 8)
      0005E0 C0 E0            [24] 1878 	push	acc
      0005E2 12r00r00         [24] 1879 	lcall	_printf_fast_f
      0005E5 E5 81            [12] 1880 	mov	a,sp
      0005E7 24 FC            [12] 1881 	add	a,#0xfc
      0005E9 F5 81            [12] 1882 	mov	sp,a
                                   1883 ;	../lib/linefi_packet.c:188: printf_fast_f("raw :  ");
      0005EB 74r7B            [12] 1884 	mov	a,#___str_10
      0005ED C0 E0            [24] 1885 	push	acc
      0005EF 74s00            [12] 1886 	mov	a,#(___str_10 >> 8)
      0005F1 C0 E0            [24] 1887 	push	acc
      0005F3 12r00r00         [24] 1888 	lcall	_printf_fast_f
      0005F6 15 81            [12] 1889 	dec	sp
      0005F8 15 81            [12] 1890 	dec	sp
      0005FA D0 07            [24] 1891 	pop	ar7
                                   1892 ;	../lib/linefi_packet.c:189: for (i=0;i<au8Size;i++) {
      0005FC 7E 00            [12] 1893 	mov	r6,#0x00
      0005FE                       1894 00107$:
      0005FE C3               [12] 1895 	clr	c
      0005FF EE               [12] 1896 	mov	a,r6
      000600 9F               [12] 1897 	subb	a,r7
      000601 50 24            [24] 1898 	jnc	00101$
                                   1899 ;	../lib/linefi_packet.c:190: printf_fast_f("%2d   ", i);
      000603 8E 04            [24] 1900 	mov	ar4,r6
      000605 7D 00            [12] 1901 	mov	r5,#0x00
      000607 C0 07            [24] 1902 	push	ar7
      000609 C0 06            [24] 1903 	push	ar6
      00060B C0 04            [24] 1904 	push	ar4
      00060D C0 05            [24] 1905 	push	ar5
      00060F 74r83            [12] 1906 	mov	a,#___str_11
      000611 C0 E0            [24] 1907 	push	acc
      000613 74s00            [12] 1908 	mov	a,#(___str_11 >> 8)
      000615 C0 E0            [24] 1909 	push	acc
      000617 12r00r00         [24] 1910 	lcall	_printf_fast_f
      00061A E5 81            [12] 1911 	mov	a,sp
      00061C 24 FC            [12] 1912 	add	a,#0xfc
      00061E F5 81            [12] 1913 	mov	sp,a
      000620 D0 06            [24] 1914 	pop	ar6
      000622 D0 07            [24] 1915 	pop	ar7
                                   1916 ;	../lib/linefi_packet.c:189: for (i=0;i<au8Size;i++) {
      000624 0E               [12] 1917 	inc	r6
      000625 80 D7            [24] 1918 	sjmp	00107$
      000627                       1919 00101$:
                                   1920 ;	../lib/linefi_packet.c:192: printf_fast_f("\r\n");
      000627 C0 07            [24] 1921 	push	ar7
      000629 74r72            [12] 1922 	mov	a,#___str_8
      00062B C0 E0            [24] 1923 	push	acc
      00062D 74s00            [12] 1924 	mov	a,#(___str_8 >> 8)
      00062F C0 E0            [24] 1925 	push	acc
      000631 12r00r00         [24] 1926 	lcall	_printf_fast_f
      000634 15 81            [12] 1927 	dec	sp
      000636 15 81            [12] 1928 	dec	sp
                                   1929 ;	../lib/linefi_packet.c:193: printf_fast_f("data:");
      000638 74r8A            [12] 1930 	mov	a,#___str_12
      00063A C0 E0            [24] 1931 	push	acc
      00063C 74s00            [12] 1932 	mov	a,#(___str_12 >> 8)
      00063E C0 E0            [24] 1933 	push	acc
      000640 12r00r00         [24] 1934 	lcall	_printf_fast_f
      000643 15 81            [12] 1935 	dec	sp
      000645 15 81            [12] 1936 	dec	sp
      000647 D0 07            [24] 1937 	pop	ar7
                                   1938 ;	../lib/linefi_packet.c:194: for (i=0;i<au8Size;i++) {
      000649 7E 00            [12] 1939 	mov	r6,#0x00
      00064B                       1940 00110$:
      00064B C3               [12] 1941 	clr	c
      00064C EE               [12] 1942 	mov	a,r6
      00064D 9F               [12] 1943 	subb	a,r7
      00064E 50 72            [24] 1944 	jnc	00105$
                                   1945 ;	../lib/linefi_packet.c:195: if (*apu8Data < 0x10) {
      000650 AB*0E            [24] 1946 	mov	r3,_print_raw_packet_PARM_2
      000652 AC*0F            [24] 1947 	mov	r4,(_print_raw_packet_PARM_2 + 1)
      000654 AD*10            [24] 1948 	mov	r5,(_print_raw_packet_PARM_2 + 2)
      000656 8B 82            [24] 1949 	mov	dpl,r3
      000658 8C 83            [24] 1950 	mov	dph,r4
      00065A 8D F0            [24] 1951 	mov	b,r5
      00065C 12r00r00         [24] 1952 	lcall	__gptrget
      00065F FA               [12] 1953 	mov	r2,a
      000660 BA 10 00         [24] 1954 	cjne	r2,#0x10,00139$
      000663                       1955 00139$:
      000663 50 30            [24] 1956 	jnc	00103$
                                   1957 ;	../lib/linefi_packet.c:196: printf_fast_f("0x0%x ", *apu8Data++);
      000665 8A 01            [24] 1958 	mov	ar1,r2
      000667 74 01            [12] 1959 	mov	a,#0x01
      000669 2B               [12] 1960 	add	a,r3
      00066A F5*0E            [12] 1961 	mov	_print_raw_packet_PARM_2,a
      00066C E4               [12] 1962 	clr	a
      00066D 3C               [12] 1963 	addc	a,r4
      00066E F5*0F            [12] 1964 	mov	(_print_raw_packet_PARM_2 + 1),a
      000670 8D*10            [24] 1965 	mov	(_print_raw_packet_PARM_2 + 2),r5
      000672 89 00            [24] 1966 	mov	ar0,r1
      000674 79 00            [12] 1967 	mov	r1,#0x00
      000676 C0 07            [24] 1968 	push	ar7
      000678 C0 06            [24] 1969 	push	ar6
      00067A C0 00            [24] 1970 	push	ar0
      00067C C0 01            [24] 1971 	push	ar1
      00067E 74r90            [12] 1972 	mov	a,#___str_13
      000680 C0 E0            [24] 1973 	push	acc
      000682 74s00            [12] 1974 	mov	a,#(___str_13 >> 8)
      000684 C0 E0            [24] 1975 	push	acc
      000686 12r00r00         [24] 1976 	lcall	_printf_fast_f
      000689 E5 81            [12] 1977 	mov	a,sp
      00068B 24 FC            [12] 1978 	add	a,#0xfc
      00068D F5 81            [12] 1979 	mov	sp,a
      00068F D0 06            [24] 1980 	pop	ar6
      000691 D0 07            [24] 1981 	pop	ar7
      000693 80 2A            [24] 1982 	sjmp	00111$
      000695                       1983 00103$:
                                   1984 ;	../lib/linefi_packet.c:199: printf_fast_f("0x%x ", *apu8Data++);
      000695 74 01            [12] 1985 	mov	a,#0x01
      000697 2B               [12] 1986 	add	a,r3
      000698 F5*0E            [12] 1987 	mov	_print_raw_packet_PARM_2,a
      00069A E4               [12] 1988 	clr	a
      00069B 3C               [12] 1989 	addc	a,r4
      00069C F5*0F            [12] 1990 	mov	(_print_raw_packet_PARM_2 + 1),a
      00069E 8D*10            [24] 1991 	mov	(_print_raw_packet_PARM_2 + 2),r5
      0006A0 7D 00            [12] 1992 	mov	r5,#0x00
      0006A2 C0 07            [24] 1993 	push	ar7
      0006A4 C0 06            [24] 1994 	push	ar6
      0006A6 C0 02            [24] 1995 	push	ar2
      0006A8 C0 05            [24] 1996 	push	ar5
      0006AA 74r6C            [12] 1997 	mov	a,#___str_7
      0006AC C0 E0            [24] 1998 	push	acc
      0006AE 74s00            [12] 1999 	mov	a,#(___str_7 >> 8)
      0006B0 C0 E0            [24] 2000 	push	acc
      0006B2 12r00r00         [24] 2001 	lcall	_printf_fast_f
      0006B5 E5 81            [12] 2002 	mov	a,sp
      0006B7 24 FC            [12] 2003 	add	a,#0xfc
      0006B9 F5 81            [12] 2004 	mov	sp,a
      0006BB D0 06            [24] 2005 	pop	ar6
      0006BD D0 07            [24] 2006 	pop	ar7
      0006BF                       2007 00111$:
                                   2008 ;	../lib/linefi_packet.c:194: for (i=0;i<au8Size;i++) {
      0006BF 0E               [12] 2009 	inc	r6
      0006C0 80 89            [24] 2010 	sjmp	00110$
      0006C2                       2011 00105$:
                                   2012 ;	../lib/linefi_packet.c:202: printf_fast_f("\r\n");
      0006C2 74r72            [12] 2013 	mov	a,#___str_8
      0006C4 C0 E0            [24] 2014 	push	acc
      0006C6 74s00            [12] 2015 	mov	a,#(___str_8 >> 8)
      0006C8 C0 E0            [24] 2016 	push	acc
      0006CA 12r00r00         [24] 2017 	lcall	_printf_fast_f
      0006CD 15 81            [12] 2018 	dec	sp
      0006CF 15 81            [12] 2019 	dec	sp
                                   2020 ;	../lib/linefi_packet.c:203: }
      0006D1 22               [24] 2021 	ret
                                   2022 	.area CSEG    (CODE)
                                   2023 	.area CONST   (CODE)
                                   2024 	.area CONST   (CODE)
      000000                       2025 ___str_0:
      000000 2D 2D 2D 2D 2D 2D 2D  2026 	.ascii "-------------------------------"
             2D 2D 2D 2D 2D 2D 2D
             2D 2D 2D 2D 2D 2D 2D
             2D 2D 2D 2D 2D 2D 2D
             2D 2D 2D
      00001F 0D                    2027 	.db 0x0d
      000020 0A                    2028 	.db 0x0a
      000021 00                    2029 	.db 0x00
                                   2030 	.area CSEG    (CODE)
                                   2031 	.area CONST   (CODE)
      000022                       2032 ___str_1:
      000022 56 65 72 20 3A 20 25  2033 	.ascii "Ver : %d"
             64
      00002A 0D                    2034 	.db 0x0d
      00002B 0A                    2035 	.db 0x0a
      00002C 00                    2036 	.db 0x00
                                   2037 	.area CSEG    (CODE)
                                   2038 	.area CONST   (CODE)
      00002D                       2039 ___str_2:
      00002D 54 79 70 65 3A 20 25  2040 	.ascii "Type: %d(%s)"
             64 28 25 73 29
      000039 0D                    2041 	.db 0x0d
      00003A 0A                    2042 	.db 0x0a
      00003B 00                    2043 	.db 0x00
                                   2044 	.area CSEG    (CODE)
                                   2045 	.area CONST   (CODE)
      00003C                       2046 ___str_3:
      00003C 41 64 64 72 3A 20 25  2047 	.ascii "Addr: %d"
             64
      000044 0D                    2048 	.db 0x0d
      000045 0A                    2049 	.db 0x0a
      000046 00                    2050 	.db 0x00
                                   2051 	.area CSEG    (CODE)
                                   2052 	.area CONST   (CODE)
      000047                       2053 ___str_4:
      000047 53 69 7A 65 3A 20 25  2054 	.ascii "Size: %d"
             64
      00004F 0D                    2055 	.db 0x0d
      000050 0A                    2056 	.db 0x0a
      000051 00                    2057 	.db 0x00
                                   2058 	.area CSEG    (CODE)
                                   2059 	.area CONST   (CODE)
      000052                       2060 ___str_5:
      000052 43 52 43 20 63 6F 6D  2061 	.ascii "CRC comp : %d %d"
             70 20 3A 20 25 64 20
             25 64
      000062 0D                    2062 	.db 0x0d
      000063 0A                    2063 	.db 0x0a
      000064 00                    2064 	.db 0x00
                                   2065 	.area CSEG    (CODE)
                                   2066 	.area CONST   (CODE)
      000065                       2067 ___str_6:
      000065 44 41 54 41 3A 20     2068 	.ascii "DATA: "
      00006B 00                    2069 	.db 0x00
                                   2070 	.area CSEG    (CODE)
                                   2071 	.area CONST   (CODE)
      00006C                       2072 ___str_7:
      00006C 30 78 25 78 20        2073 	.ascii "0x%x "
      000071 00                    2074 	.db 0x00
                                   2075 	.area CSEG    (CODE)
                                   2076 	.area CONST   (CODE)
      000072                       2077 ___str_8:
      000072 0D                    2078 	.db 0x0d
      000073 0A                    2079 	.db 0x0a
      000074 00                    2080 	.db 0x00
                                   2081 	.area CSEG    (CODE)
      0006D2                       2082 _sht75_crc_table:
      0006D2 00                    2083 	.db #0x00	; 0
      0006D3 31                    2084 	.db #0x31	; 49	'1'
      0006D4 62                    2085 	.db #0x62	; 98	'b'
      0006D5 53                    2086 	.db #0x53	; 83	'S'
      0006D6 C4                    2087 	.db #0xc4	; 196
      0006D7 F5                    2088 	.db #0xf5	; 245
      0006D8 A6                    2089 	.db #0xa6	; 166
      0006D9 97                    2090 	.db #0x97	; 151
      0006DA B9                    2091 	.db #0xb9	; 185
      0006DB 88                    2092 	.db #0x88	; 136
      0006DC DB                    2093 	.db #0xdb	; 219
      0006DD EA                    2094 	.db #0xea	; 234
      0006DE 7D                    2095 	.db #0x7d	; 125
      0006DF 4C                    2096 	.db #0x4c	; 76	'L'
      0006E0 1F                    2097 	.db #0x1f	; 31
      0006E1 2E                    2098 	.db #0x2e	; 46
      0006E2 43                    2099 	.db #0x43	; 67	'C'
      0006E3 72                    2100 	.db #0x72	; 114	'r'
      0006E4 21                    2101 	.db #0x21	; 33
      0006E5 10                    2102 	.db #0x10	; 16
      0006E6 87                    2103 	.db #0x87	; 135
      0006E7 B6                    2104 	.db #0xb6	; 182
      0006E8 E5                    2105 	.db #0xe5	; 229
      0006E9 D4                    2106 	.db #0xd4	; 212
      0006EA FA                    2107 	.db #0xfa	; 250
      0006EB CB                    2108 	.db #0xcb	; 203
      0006EC 98                    2109 	.db #0x98	; 152
      0006ED A9                    2110 	.db #0xa9	; 169
      0006EE 3E                    2111 	.db #0x3e	; 62
      0006EF 0F                    2112 	.db #0x0f	; 15
      0006F0 5C                    2113 	.db #0x5c	; 92
      0006F1 6D                    2114 	.db #0x6d	; 109	'm'
      0006F2 86                    2115 	.db #0x86	; 134
      0006F3 B7                    2116 	.db #0xb7	; 183
      0006F4 E4                    2117 	.db #0xe4	; 228
      0006F5 D5                    2118 	.db #0xd5	; 213
      0006F6 42                    2119 	.db #0x42	; 66	'B'
      0006F7 73                    2120 	.db #0x73	; 115	's'
      0006F8 20                    2121 	.db #0x20	; 32
      0006F9 11                    2122 	.db #0x11	; 17
      0006FA 3F                    2123 	.db #0x3f	; 63
      0006FB 0E                    2124 	.db #0x0e	; 14
      0006FC 5D                    2125 	.db #0x5d	; 93
      0006FD 6C                    2126 	.db #0x6c	; 108	'l'
      0006FE FB                    2127 	.db #0xfb	; 251
      0006FF CA                    2128 	.db #0xca	; 202
      000700 99                    2129 	.db #0x99	; 153
      000701 A8                    2130 	.db #0xa8	; 168
      000702 C5                    2131 	.db #0xc5	; 197
      000703 F4                    2132 	.db #0xf4	; 244
      000704 A7                    2133 	.db #0xa7	; 167
      000705 96                    2134 	.db #0x96	; 150
      000706 01                    2135 	.db #0x01	; 1
      000707 30                    2136 	.db #0x30	; 48	'0'
      000708 63                    2137 	.db #0x63	; 99	'c'
      000709 52                    2138 	.db #0x52	; 82	'R'
      00070A 7C                    2139 	.db #0x7c	; 124
      00070B 4D                    2140 	.db #0x4d	; 77	'M'
      00070C 1E                    2141 	.db #0x1e	; 30
      00070D 2F                    2142 	.db #0x2f	; 47
      00070E B8                    2143 	.db #0xb8	; 184
      00070F 89                    2144 	.db #0x89	; 137
      000710 DA                    2145 	.db #0xda	; 218
      000711 EB                    2146 	.db #0xeb	; 235
      000712 3D                    2147 	.db #0x3d	; 61
      000713 0C                    2148 	.db #0x0c	; 12
      000714 5F                    2149 	.db #0x5f	; 95
      000715 6E                    2150 	.db #0x6e	; 110	'n'
      000716 F9                    2151 	.db #0xf9	; 249
      000717 C8                    2152 	.db #0xc8	; 200
      000718 9B                    2153 	.db #0x9b	; 155
      000719 AA                    2154 	.db #0xaa	; 170
      00071A 84                    2155 	.db #0x84	; 132
      00071B B5                    2156 	.db #0xb5	; 181
      00071C E6                    2157 	.db #0xe6	; 230
      00071D D7                    2158 	.db #0xd7	; 215
      00071E 40                    2159 	.db #0x40	; 64
      00071F 71                    2160 	.db #0x71	; 113	'q'
      000720 22                    2161 	.db #0x22	; 34
      000721 13                    2162 	.db #0x13	; 19
      000722 7E                    2163 	.db #0x7e	; 126
      000723 4F                    2164 	.db #0x4f	; 79	'O'
      000724 1C                    2165 	.db #0x1c	; 28
      000725 2D                    2166 	.db #0x2d	; 45
      000726 BA                    2167 	.db #0xba	; 186
      000727 8B                    2168 	.db #0x8b	; 139
      000728 D8                    2169 	.db #0xd8	; 216
      000729 E9                    2170 	.db #0xe9	; 233
      00072A C7                    2171 	.db #0xc7	; 199
      00072B F6                    2172 	.db #0xf6	; 246
      00072C A5                    2173 	.db #0xa5	; 165
      00072D 94                    2174 	.db #0x94	; 148
      00072E 03                    2175 	.db #0x03	; 3
      00072F 32                    2176 	.db #0x32	; 50	'2'
      000730 61                    2177 	.db #0x61	; 97	'a'
      000731 50                    2178 	.db #0x50	; 80	'P'
      000732 BB                    2179 	.db #0xbb	; 187
      000733 8A                    2180 	.db #0x8a	; 138
      000734 D9                    2181 	.db #0xd9	; 217
      000735 E8                    2182 	.db #0xe8	; 232
      000736 7F                    2183 	.db #0x7f	; 127
      000737 4E                    2184 	.db #0x4e	; 78	'N'
      000738 1D                    2185 	.db #0x1d	; 29
      000739 2C                    2186 	.db #0x2c	; 44
      00073A 02                    2187 	.db #0x02	; 2
      00073B 33                    2188 	.db #0x33	; 51	'3'
      00073C 60                    2189 	.db #0x60	; 96
      00073D 51                    2190 	.db #0x51	; 81	'Q'
      00073E C6                    2191 	.db #0xc6	; 198
      00073F F7                    2192 	.db #0xf7	; 247
      000740 A4                    2193 	.db #0xa4	; 164
      000741 95                    2194 	.db #0x95	; 149
      000742 F8                    2195 	.db #0xf8	; 248
      000743 C9                    2196 	.db #0xc9	; 201
      000744 9A                    2197 	.db #0x9a	; 154
      000745 AB                    2198 	.db #0xab	; 171
      000746 3C                    2199 	.db #0x3c	; 60
      000747 0D                    2200 	.db #0x0d	; 13
      000748 5E                    2201 	.db #0x5e	; 94
      000749 6F                    2202 	.db #0x6f	; 111	'o'
      00074A 41                    2203 	.db #0x41	; 65	'A'
      00074B 70                    2204 	.db #0x70	; 112	'p'
      00074C 23                    2205 	.db #0x23	; 35
      00074D 12                    2206 	.db #0x12	; 18
      00074E 85                    2207 	.db #0x85	; 133
      00074F B4                    2208 	.db #0xb4	; 180
      000750 E7                    2209 	.db #0xe7	; 231
      000751 D6                    2210 	.db #0xd6	; 214
      000752 7A                    2211 	.db #0x7a	; 122	'z'
      000753 4B                    2212 	.db #0x4b	; 75	'K'
      000754 18                    2213 	.db #0x18	; 24
      000755 29                    2214 	.db #0x29	; 41
      000756 BE                    2215 	.db #0xbe	; 190
      000757 8F                    2216 	.db #0x8f	; 143
      000758 DC                    2217 	.db #0xdc	; 220
      000759 ED                    2218 	.db #0xed	; 237
      00075A C3                    2219 	.db #0xc3	; 195
      00075B F2                    2220 	.db #0xf2	; 242
      00075C A1                    2221 	.db #0xa1	; 161
      00075D 90                    2222 	.db #0x90	; 144
      00075E 07                    2223 	.db #0x07	; 7
      00075F 36                    2224 	.db #0x36	; 54	'6'
      000760 65                    2225 	.db #0x65	; 101	'e'
      000761 54                    2226 	.db #0x54	; 84	'T'
      000762 39                    2227 	.db #0x39	; 57	'9'
      000763 08                    2228 	.db #0x08	; 8
      000764 5B                    2229 	.db #0x5b	; 91
      000765 6A                    2230 	.db #0x6a	; 106	'j'
      000766 FD                    2231 	.db #0xfd	; 253
      000767 CC                    2232 	.db #0xcc	; 204
      000768 9F                    2233 	.db #0x9f	; 159
      000769 AE                    2234 	.db #0xae	; 174
      00076A 80                    2235 	.db #0x80	; 128
      00076B B1                    2236 	.db #0xb1	; 177
      00076C E2                    2237 	.db #0xe2	; 226
      00076D D3                    2238 	.db #0xd3	; 211
      00076E 44                    2239 	.db #0x44	; 68	'D'
      00076F 75                    2240 	.db #0x75	; 117	'u'
      000770 26                    2241 	.db #0x26	; 38
      000771 17                    2242 	.db #0x17	; 23
      000772 FC                    2243 	.db #0xfc	; 252
      000773 CD                    2244 	.db #0xcd	; 205
      000774 9E                    2245 	.db #0x9e	; 158
      000775 AF                    2246 	.db #0xaf	; 175
      000776 38                    2247 	.db #0x38	; 56	'8'
      000777 09                    2248 	.db #0x09	; 9
      000778 5A                    2249 	.db #0x5a	; 90	'Z'
      000779 6B                    2250 	.db #0x6b	; 107	'k'
      00077A 45                    2251 	.db #0x45	; 69	'E'
      00077B 74                    2252 	.db #0x74	; 116	't'
      00077C 27                    2253 	.db #0x27	; 39
      00077D 16                    2254 	.db #0x16	; 22
      00077E 81                    2255 	.db #0x81	; 129
      00077F B0                    2256 	.db #0xb0	; 176
      000780 E3                    2257 	.db #0xe3	; 227
      000781 D2                    2258 	.db #0xd2	; 210
      000782 BF                    2259 	.db #0xbf	; 191
      000783 8E                    2260 	.db #0x8e	; 142
      000784 DD                    2261 	.db #0xdd	; 221
      000785 EC                    2262 	.db #0xec	; 236
      000786 7B                    2263 	.db #0x7b	; 123
      000787 4A                    2264 	.db #0x4a	; 74	'J'
      000788 19                    2265 	.db #0x19	; 25
      000789 28                    2266 	.db #0x28	; 40
      00078A 06                    2267 	.db #0x06	; 6
      00078B 37                    2268 	.db #0x37	; 55	'7'
      00078C 64                    2269 	.db #0x64	; 100	'd'
      00078D 55                    2270 	.db #0x55	; 85	'U'
      00078E C2                    2271 	.db #0xc2	; 194
      00078F F3                    2272 	.db #0xf3	; 243
      000790 A0                    2273 	.db #0xa0	; 160
      000791 91                    2274 	.db #0x91	; 145
      000792 47                    2275 	.db #0x47	; 71	'G'
      000793 76                    2276 	.db #0x76	; 118	'v'
      000794 25                    2277 	.db #0x25	; 37
      000795 14                    2278 	.db #0x14	; 20
      000796 83                    2279 	.db #0x83	; 131
      000797 B2                    2280 	.db #0xb2	; 178
      000798 E1                    2281 	.db #0xe1	; 225
      000799 D0                    2282 	.db #0xd0	; 208
      00079A FE                    2283 	.db #0xfe	; 254
      00079B CF                    2284 	.db #0xcf	; 207
      00079C 9C                    2285 	.db #0x9c	; 156
      00079D AD                    2286 	.db #0xad	; 173
      00079E 3A                    2287 	.db #0x3a	; 58
      00079F 0B                    2288 	.db #0x0b	; 11
      0007A0 58                    2289 	.db #0x58	; 88	'X'
      0007A1 69                    2290 	.db #0x69	; 105	'i'
      0007A2 04                    2291 	.db #0x04	; 4
      0007A3 35                    2292 	.db #0x35	; 53	'5'
      0007A4 66                    2293 	.db #0x66	; 102	'f'
      0007A5 57                    2294 	.db #0x57	; 87	'W'
      0007A6 C0                    2295 	.db #0xc0	; 192
      0007A7 F1                    2296 	.db #0xf1	; 241
      0007A8 A2                    2297 	.db #0xa2	; 162
      0007A9 93                    2298 	.db #0x93	; 147
      0007AA BD                    2299 	.db #0xbd	; 189
      0007AB 8C                    2300 	.db #0x8c	; 140
      0007AC DF                    2301 	.db #0xdf	; 223
      0007AD EE                    2302 	.db #0xee	; 238
      0007AE 79                    2303 	.db #0x79	; 121	'y'
      0007AF 48                    2304 	.db #0x48	; 72	'H'
      0007B0 1B                    2305 	.db #0x1b	; 27
      0007B1 2A                    2306 	.db #0x2a	; 42
      0007B2 C1                    2307 	.db #0xc1	; 193
      0007B3 F0                    2308 	.db #0xf0	; 240
      0007B4 A3                    2309 	.db #0xa3	; 163
      0007B5 92                    2310 	.db #0x92	; 146
      0007B6 05                    2311 	.db #0x05	; 5
      0007B7 34                    2312 	.db #0x34	; 52	'4'
      0007B8 67                    2313 	.db #0x67	; 103	'g'
      0007B9 56                    2314 	.db #0x56	; 86	'V'
      0007BA 78                    2315 	.db #0x78	; 120	'x'
      0007BB 49                    2316 	.db #0x49	; 73	'I'
      0007BC 1A                    2317 	.db #0x1a	; 26
      0007BD 2B                    2318 	.db #0x2b	; 43
      0007BE BC                    2319 	.db #0xbc	; 188
      0007BF 8D                    2320 	.db #0x8d	; 141
      0007C0 DE                    2321 	.db #0xde	; 222
      0007C1 EF                    2322 	.db #0xef	; 239
      0007C2 82                    2323 	.db #0x82	; 130
      0007C3 B3                    2324 	.db #0xb3	; 179
      0007C4 E0                    2325 	.db #0xe0	; 224
      0007C5 D1                    2326 	.db #0xd1	; 209
      0007C6 46                    2327 	.db #0x46	; 70	'F'
      0007C7 77                    2328 	.db #0x77	; 119	'w'
      0007C8 24                    2329 	.db #0x24	; 36
      0007C9 15                    2330 	.db #0x15	; 21
      0007CA 3B                    2331 	.db #0x3b	; 59
      0007CB 0A                    2332 	.db #0x0a	; 10
      0007CC 59                    2333 	.db #0x59	; 89	'Y'
      0007CD 68                    2334 	.db #0x68	; 104	'h'
      0007CE FF                    2335 	.db #0xff	; 255
      0007CF CE                    2336 	.db #0xce	; 206
      0007D0 9D                    2337 	.db #0x9d	; 157
      0007D1 AC                    2338 	.db #0xac	; 172
                                   2339 	.area CONST   (CODE)
      000075                       2340 ___str_9:
      000075 23 25 64              2341 	.ascii "#%d"
      000078 0D                    2342 	.db 0x0d
      000079 0A                    2343 	.db 0x0a
      00007A 00                    2344 	.db 0x00
                                   2345 	.area CSEG    (CODE)
                                   2346 	.area CONST   (CODE)
      00007B                       2347 ___str_10:
      00007B 72 61 77 20 3A 20 20  2348 	.ascii "raw :  "
      000082 00                    2349 	.db 0x00
                                   2350 	.area CSEG    (CODE)
                                   2351 	.area CONST   (CODE)
      000083                       2352 ___str_11:
      000083 25 32 64 20 20 20     2353 	.ascii "%2d   "
      000089 00                    2354 	.db 0x00
                                   2355 	.area CSEG    (CODE)
                                   2356 	.area CONST   (CODE)
      00008A                       2357 ___str_12:
      00008A 64 61 74 61 3A        2358 	.ascii "data:"
      00008F 00                    2359 	.db 0x00
                                   2360 	.area CSEG    (CODE)
                                   2361 	.area CONST   (CODE)
      000090                       2362 ___str_13:
      000090 30 78 30 25 78 20     2363 	.ascii "0x0%x "
      000096 00                    2364 	.db 0x00
                                   2365 	.area CSEG    (CODE)
                                   2366 	.area CONST   (CODE)
      000097                       2367 ___str_14:
      000097 54 79 70 65 5F 42 63  2368 	.ascii "Type_Bcast"
             61 73 74
      0000A1 00                    2369 	.db 0x00
                                   2370 	.area CSEG    (CODE)
                                   2371 	.area CONST   (CODE)
      0000A2                       2372 ___str_15:
      0000A2 54 79 70 65 5F 55 63  2373 	.ascii "Type_Ucast"
             61 73 74
      0000AC 00                    2374 	.db 0x00
                                   2375 	.area CSEG    (CODE)
                                   2376 	.area CONST   (CODE)
      0000AD                       2377 ___str_16:
      0000AD 54 79 70 65 5F 4D 63  2378 	.ascii "Type_Mcast"
             61 73 74
      0000B7 00                    2379 	.db 0x00
                                   2380 	.area CSEG    (CODE)
                                   2381 	.area CONST   (CODE)
      0000B8                       2382 ___str_17:
      0000B8 54 79 70 65 5F 53 65  2383 	.ascii "Type_SetAddr"
             74 41 64 64 72
      0000C4 00                    2384 	.db 0x00
                                   2385 	.area CSEG    (CODE)
                                   2386 	.area CONST   (CODE)
      0000C5                       2387 ___str_18:
      0000C5 54 79 70 65 5F 53 65  2388 	.ascii "Type_SetLED"
             74 4C 45 44
      0000D0 00                    2389 	.db 0x00
                                   2390 	.area CSEG    (CODE)
                                   2391 	.area CONST   (CODE)
      0000D1                       2392 ___str_19:
      0000D1 54 79 70 65 5F 43 74  2393 	.ascii "Type_CtrlMotor"
             72 6C 4D 6F 74 6F 72
      0000DF 00                    2394 	.db 0x00
                                   2395 	.area CSEG    (CODE)
                                   2396 	.area CONST   (CODE)
      0000E0                       2397 ___str_20:
      0000E0 54 79 70 65 5F 52 65  2398 	.ascii "Type_ReadAddr"
             61 64 41 64 64 72
      0000ED 00                    2399 	.db 0x00
                                   2400 	.area CSEG    (CODE)
                                   2401 	.area CONST   (CODE)
      0000EE                       2402 ___str_21:
      0000EE 54 79 70 65 5F 4E 6F  2403 	.ascii "Type_None"
             6E 65
      0000F7 00                    2404 	.db 0x00
                                   2405 	.area CSEG    (CODE)
                                   2406 	.area CABS    (ABS,CODE)
