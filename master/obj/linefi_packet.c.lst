                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module linefi_packet
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _crc8_PARM_3
                                     12 	.globl _crc8_PARM_2
                                     13 	.globl _cp_buf2linefipacket_PARM_3
                                     14 	.globl _cp_buf2linefipacket_PARM_2
                                     15 	.globl _sht75_crc_table
                                     16 	.globl _chk_crc_linefi_packet_packet
                                     17 	.globl _add_crc_linefi_packet_packet
                                     18 	.globl _calc_crc_linefi_packet_packet
                                     19 	.globl _Receive_Data_From_UART1_nb
                                     20 	.globl _Send_Data_To_UART1
                                     21 	.globl _printf_fast_f
                                     22 	.globl _MOSI
                                     23 	.globl _P00
                                     24 	.globl _MISO
                                     25 	.globl _P01
                                     26 	.globl _RXD_1
                                     27 	.globl _P02
                                     28 	.globl _P03
                                     29 	.globl _STADC
                                     30 	.globl _P04
                                     31 	.globl _P05
                                     32 	.globl _TXD
                                     33 	.globl _P06
                                     34 	.globl _RXD
                                     35 	.globl _P07
                                     36 	.globl _IT0
                                     37 	.globl _IE0
                                     38 	.globl _IT1
                                     39 	.globl _IE1
                                     40 	.globl _TR0
                                     41 	.globl _TF0
                                     42 	.globl _TR1
                                     43 	.globl _TF1
                                     44 	.globl _P10
                                     45 	.globl _P11
                                     46 	.globl _P12
                                     47 	.globl _SCL
                                     48 	.globl _P13
                                     49 	.globl _SDA
                                     50 	.globl _P14
                                     51 	.globl _P15
                                     52 	.globl _TXD_1
                                     53 	.globl _P16
                                     54 	.globl _P17
                                     55 	.globl _RI
                                     56 	.globl _TI
                                     57 	.globl _RB8
                                     58 	.globl _TB8
                                     59 	.globl _REN
                                     60 	.globl _SM2
                                     61 	.globl _SM1
                                     62 	.globl _FE
                                     63 	.globl _SM0
                                     64 	.globl _P20
                                     65 	.globl _EX0
                                     66 	.globl _ET0
                                     67 	.globl _EX1
                                     68 	.globl _ET1
                                     69 	.globl _ES
                                     70 	.globl _EBOD
                                     71 	.globl _EADC
                                     72 	.globl _EA
                                     73 	.globl _P30
                                     74 	.globl _PX0
                                     75 	.globl _PT0
                                     76 	.globl _PX1
                                     77 	.globl _PT1
                                     78 	.globl _PS
                                     79 	.globl _PBOD
                                     80 	.globl _PADC
                                     81 	.globl _I2CPX
                                     82 	.globl _AA
                                     83 	.globl _SI
                                     84 	.globl _STO
                                     85 	.globl _STA
                                     86 	.globl _I2CEN
                                     87 	.globl _CM_RL2
                                     88 	.globl _TR2
                                     89 	.globl _TF2
                                     90 	.globl _P
                                     91 	.globl _OV
                                     92 	.globl _RS0
                                     93 	.globl _RS1
                                     94 	.globl _F0
                                     95 	.globl _AC
                                     96 	.globl _CY
                                     97 	.globl _CLRPWM
                                     98 	.globl _PWMF
                                     99 	.globl _LOAD
                                    100 	.globl _PWMRUN
                                    101 	.globl _ADCHS0
                                    102 	.globl _ADCHS1
                                    103 	.globl _ADCHS2
                                    104 	.globl _ADCHS3
                                    105 	.globl _ETGSEL0
                                    106 	.globl _ETGSEL1
                                    107 	.globl _ADCS
                                    108 	.globl _ADCF
                                    109 	.globl _RI_1
                                    110 	.globl _TI_1
                                    111 	.globl _RB8_1
                                    112 	.globl _TB8_1
                                    113 	.globl _REN_1
                                    114 	.globl _SM2_1
                                    115 	.globl _SM1_1
                                    116 	.globl _FE_1
                                    117 	.globl _SM0_1
                                    118 	.globl _EIPH1
                                    119 	.globl _EIP1
                                    120 	.globl _PMD
                                    121 	.globl _PMEN
                                    122 	.globl _PDTCNT
                                    123 	.globl _PDTEN
                                    124 	.globl _SCON_1
                                    125 	.globl _EIPH
                                    126 	.globl _AINDIDS
                                    127 	.globl _SPDR
                                    128 	.globl _SPSR
                                    129 	.globl _SPCR2
                                    130 	.globl _SPCR
                                    131 	.globl _CAPCON4
                                    132 	.globl _CAPCON3
                                    133 	.globl _B
                                    134 	.globl _EIP
                                    135 	.globl _C2H
                                    136 	.globl _C2L
                                    137 	.globl _PIF
                                    138 	.globl _PIPEN
                                    139 	.globl _PINEN
                                    140 	.globl _PICON
                                    141 	.globl _ADCCON0
                                    142 	.globl _C1H
                                    143 	.globl _C1L
                                    144 	.globl _C0H
                                    145 	.globl _C0L
                                    146 	.globl _ADCDLY
                                    147 	.globl _ADCCON2
                                    148 	.globl _ADCCON1
                                    149 	.globl _ACC
                                    150 	.globl _PWMCON1
                                    151 	.globl _PIOCON0
                                    152 	.globl _PWM3L
                                    153 	.globl _PWM2L
                                    154 	.globl _PWM1L
                                    155 	.globl _PWM0L
                                    156 	.globl _PWMPL
                                    157 	.globl _PWMCON0
                                    158 	.globl _FBD
                                    159 	.globl _PNP
                                    160 	.globl _PWM3H
                                    161 	.globl _PWM2H
                                    162 	.globl _PWM1H
                                    163 	.globl _PWM0H
                                    164 	.globl _PWMPH
                                    165 	.globl _PSW
                                    166 	.globl _ADCMPH
                                    167 	.globl _ADCMPL
                                    168 	.globl _PWM5L
                                    169 	.globl _TH2
                                    170 	.globl _PWM4L
                                    171 	.globl _TL2
                                    172 	.globl _RCMP2H
                                    173 	.globl _RCMP2L
                                    174 	.globl _T2MOD
                                    175 	.globl _T2CON
                                    176 	.globl _TA
                                    177 	.globl _PIOCON1
                                    178 	.globl _RH3
                                    179 	.globl _PWM5H
                                    180 	.globl _RL3
                                    181 	.globl _PWM4H
                                    182 	.globl _T3CON
                                    183 	.globl _ADCRH
                                    184 	.globl _ADCRL
                                    185 	.globl _I2ADDR
                                    186 	.globl _I2CON
                                    187 	.globl _I2TOC
                                    188 	.globl _I2CLK
                                    189 	.globl _I2STAT
                                    190 	.globl _I2DAT
                                    191 	.globl _SADDR_1
                                    192 	.globl _SADEN_1
                                    193 	.globl _SADEN
                                    194 	.globl _IP
                                    195 	.globl _PWMINTC
                                    196 	.globl _IPH
                                    197 	.globl _P2S
                                    198 	.globl _P1SR
                                    199 	.globl _P1M2
                                    200 	.globl _P1S
                                    201 	.globl _P1M1
                                    202 	.globl _P0SR
                                    203 	.globl _P0M2
                                    204 	.globl _P0S
                                    205 	.globl _P0M1
                                    206 	.globl _P3
                                    207 	.globl _IAPCN
                                    208 	.globl _IAPFD
                                    209 	.globl _P3SR
                                    210 	.globl _P3M2
                                    211 	.globl _P3S
                                    212 	.globl _P3M1
                                    213 	.globl _BODCON1
                                    214 	.globl _WDCON
                                    215 	.globl _SADDR
                                    216 	.globl _IE
                                    217 	.globl _IAPAH
                                    218 	.globl _IAPAL
                                    219 	.globl _IAPUEN
                                    220 	.globl _IAPTRG
                                    221 	.globl _BODCON0
                                    222 	.globl _AUXR1
                                    223 	.globl _P2
                                    224 	.globl _CHPCON
                                    225 	.globl _EIE1
                                    226 	.globl _EIE
                                    227 	.globl _SBUF_1
                                    228 	.globl _SBUF
                                    229 	.globl _SCON
                                    230 	.globl _CKEN
                                    231 	.globl _CKSWT
                                    232 	.globl _CKDIV
                                    233 	.globl _CAPCON2
                                    234 	.globl _CAPCON1
                                    235 	.globl _CAPCON0
                                    236 	.globl _SFRS
                                    237 	.globl _P1
                                    238 	.globl _WKCON
                                    239 	.globl _CKCON
                                    240 	.globl _TH1
                                    241 	.globl _TH0
                                    242 	.globl _TL1
                                    243 	.globl _TL0
                                    244 	.globl _TMOD
                                    245 	.globl _TCON
                                    246 	.globl _PCON
                                    247 	.globl _RWK
                                    248 	.globl _RCTRIM1
                                    249 	.globl _RCTRIM0
                                    250 	.globl _DPH
                                    251 	.globl _DPL
                                    252 	.globl _SP
                                    253 	.globl _P0
                                    254 	.globl _gpcTypeStr
                                    255 	.globl _print_raw_packet_PARM_2
                                    256 	.globl _gu16Cnt
                                    257 	.globl _size_linefi_packet
                                    258 	.globl _get_octet_from_linefi
                                    259 	.globl _send_octet_to_linefi
                                    260 	.globl _send_linefi_packet
                                    261 	.globl _cp_buf2linefipacket
                                    262 	.globl _print_linefipacket
                                    263 	.globl _crc8
                                    264 	.globl _print_raw_packet
                                    265 ;--------------------------------------------------------
                                    266 ; special function registers
                                    267 ;--------------------------------------------------------
                                    268 	.area RSEG    (ABS,DATA)
      000000                        269 	.org 0x0000
                           000080   270 _P0	=	0x0080
                           000081   271 _SP	=	0x0081
                           000082   272 _DPL	=	0x0082
                           000083   273 _DPH	=	0x0083
                           000084   274 _RCTRIM0	=	0x0084
                           000085   275 _RCTRIM1	=	0x0085
                           000086   276 _RWK	=	0x0086
                           000087   277 _PCON	=	0x0087
                           000088   278 _TCON	=	0x0088
                           000089   279 _TMOD	=	0x0089
                           00008A   280 _TL0	=	0x008a
                           00008B   281 _TL1	=	0x008b
                           00008C   282 _TH0	=	0x008c
                           00008D   283 _TH1	=	0x008d
                           00008E   284 _CKCON	=	0x008e
                           00008F   285 _WKCON	=	0x008f
                           000090   286 _P1	=	0x0090
                           000091   287 _SFRS	=	0x0091
                           000092   288 _CAPCON0	=	0x0092
                           000093   289 _CAPCON1	=	0x0093
                           000094   290 _CAPCON2	=	0x0094
                           000095   291 _CKDIV	=	0x0095
                           000096   292 _CKSWT	=	0x0096
                           000097   293 _CKEN	=	0x0097
                           000098   294 _SCON	=	0x0098
                           000099   295 _SBUF	=	0x0099
                           00009A   296 _SBUF_1	=	0x009a
                           00009B   297 _EIE	=	0x009b
                           00009C   298 _EIE1	=	0x009c
                           00009F   299 _CHPCON	=	0x009f
                           0000A0   300 _P2	=	0x00a0
                           0000A2   301 _AUXR1	=	0x00a2
                           0000A3   302 _BODCON0	=	0x00a3
                           0000A4   303 _IAPTRG	=	0x00a4
                           0000A5   304 _IAPUEN	=	0x00a5
                           0000A6   305 _IAPAL	=	0x00a6
                           0000A7   306 _IAPAH	=	0x00a7
                           0000A8   307 _IE	=	0x00a8
                           0000A9   308 _SADDR	=	0x00a9
                           0000AA   309 _WDCON	=	0x00aa
                           0000AB   310 _BODCON1	=	0x00ab
                           0000AC   311 _P3M1	=	0x00ac
                           0000AC   312 _P3S	=	0x00ac
                           0000AD   313 _P3M2	=	0x00ad
                           0000AD   314 _P3SR	=	0x00ad
                           0000AE   315 _IAPFD	=	0x00ae
                           0000AF   316 _IAPCN	=	0x00af
                           0000B0   317 _P3	=	0x00b0
                           0000B1   318 _P0M1	=	0x00b1
                           0000B1   319 _P0S	=	0x00b1
                           0000B2   320 _P0M2	=	0x00b2
                           0000B2   321 _P0SR	=	0x00b2
                           0000B3   322 _P1M1	=	0x00b3
                           0000B3   323 _P1S	=	0x00b3
                           0000B4   324 _P1M2	=	0x00b4
                           0000B4   325 _P1SR	=	0x00b4
                           0000B5   326 _P2S	=	0x00b5
                           0000B7   327 _IPH	=	0x00b7
                           0000B7   328 _PWMINTC	=	0x00b7
                           0000B8   329 _IP	=	0x00b8
                           0000B9   330 _SADEN	=	0x00b9
                           0000BA   331 _SADEN_1	=	0x00ba
                           0000BB   332 _SADDR_1	=	0x00bb
                           0000BC   333 _I2DAT	=	0x00bc
                           0000BD   334 _I2STAT	=	0x00bd
                           0000BE   335 _I2CLK	=	0x00be
                           0000BF   336 _I2TOC	=	0x00bf
                           0000C0   337 _I2CON	=	0x00c0
                           0000C1   338 _I2ADDR	=	0x00c1
                           0000C2   339 _ADCRL	=	0x00c2
                           0000C3   340 _ADCRH	=	0x00c3
                           0000C4   341 _T3CON	=	0x00c4
                           0000C4   342 _PWM4H	=	0x00c4
                           0000C5   343 _RL3	=	0x00c5
                           0000C5   344 _PWM5H	=	0x00c5
                           0000C6   345 _RH3	=	0x00c6
                           0000C6   346 _PIOCON1	=	0x00c6
                           0000C7   347 _TA	=	0x00c7
                           0000C8   348 _T2CON	=	0x00c8
                           0000C9   349 _T2MOD	=	0x00c9
                           0000CA   350 _RCMP2L	=	0x00ca
                           0000CB   351 _RCMP2H	=	0x00cb
                           0000CC   352 _TL2	=	0x00cc
                           0000CC   353 _PWM4L	=	0x00cc
                           0000CD   354 _TH2	=	0x00cd
                           0000CD   355 _PWM5L	=	0x00cd
                           0000CE   356 _ADCMPL	=	0x00ce
                           0000CF   357 _ADCMPH	=	0x00cf
                           0000D0   358 _PSW	=	0x00d0
                           0000D1   359 _PWMPH	=	0x00d1
                           0000D2   360 _PWM0H	=	0x00d2
                           0000D3   361 _PWM1H	=	0x00d3
                           0000D4   362 _PWM2H	=	0x00d4
                           0000D5   363 _PWM3H	=	0x00d5
                           0000D6   364 _PNP	=	0x00d6
                           0000D7   365 _FBD	=	0x00d7
                           0000D8   366 _PWMCON0	=	0x00d8
                           0000D9   367 _PWMPL	=	0x00d9
                           0000DA   368 _PWM0L	=	0x00da
                           0000DB   369 _PWM1L	=	0x00db
                           0000DC   370 _PWM2L	=	0x00dc
                           0000DD   371 _PWM3L	=	0x00dd
                           0000DE   372 _PIOCON0	=	0x00de
                           0000DF   373 _PWMCON1	=	0x00df
                           0000E0   374 _ACC	=	0x00e0
                           0000E1   375 _ADCCON1	=	0x00e1
                           0000E2   376 _ADCCON2	=	0x00e2
                           0000E3   377 _ADCDLY	=	0x00e3
                           0000E4   378 _C0L	=	0x00e4
                           0000E5   379 _C0H	=	0x00e5
                           0000E6   380 _C1L	=	0x00e6
                           0000E7   381 _C1H	=	0x00e7
                           0000E8   382 _ADCCON0	=	0x00e8
                           0000E9   383 _PICON	=	0x00e9
                           0000EA   384 _PINEN	=	0x00ea
                           0000EB   385 _PIPEN	=	0x00eb
                           0000EC   386 _PIF	=	0x00ec
                           0000ED   387 _C2L	=	0x00ed
                           0000EE   388 _C2H	=	0x00ee
                           0000EF   389 _EIP	=	0x00ef
                           0000F0   390 _B	=	0x00f0
                           0000F1   391 _CAPCON3	=	0x00f1
                           0000F2   392 _CAPCON4	=	0x00f2
                           0000F3   393 _SPCR	=	0x00f3
                           0000F3   394 _SPCR2	=	0x00f3
                           0000F4   395 _SPSR	=	0x00f4
                           0000F5   396 _SPDR	=	0x00f5
                           0000F6   397 _AINDIDS	=	0x00f6
                           0000F7   398 _EIPH	=	0x00f7
                           0000F8   399 _SCON_1	=	0x00f8
                           0000F9   400 _PDTEN	=	0x00f9
                           0000FA   401 _PDTCNT	=	0x00fa
                           0000FB   402 _PMEN	=	0x00fb
                           0000FC   403 _PMD	=	0x00fc
                           0000FE   404 _EIP1	=	0x00fe
                           0000FF   405 _EIPH1	=	0x00ff
                                    406 ;--------------------------------------------------------
                                    407 ; special function bits
                                    408 ;--------------------------------------------------------
                                    409 	.area RSEG    (ABS,DATA)
      000000                        410 	.org 0x0000
                           0000FF   411 _SM0_1	=	0x00ff
                           0000FF   412 _FE_1	=	0x00ff
                           0000FE   413 _SM1_1	=	0x00fe
                           0000FD   414 _SM2_1	=	0x00fd
                           0000FC   415 _REN_1	=	0x00fc
                           0000FB   416 _TB8_1	=	0x00fb
                           0000FA   417 _RB8_1	=	0x00fa
                           0000F9   418 _TI_1	=	0x00f9
                           0000F8   419 _RI_1	=	0x00f8
                           0000EF   420 _ADCF	=	0x00ef
                           0000EE   421 _ADCS	=	0x00ee
                           0000ED   422 _ETGSEL1	=	0x00ed
                           0000EC   423 _ETGSEL0	=	0x00ec
                           0000EB   424 _ADCHS3	=	0x00eb
                           0000EA   425 _ADCHS2	=	0x00ea
                           0000E9   426 _ADCHS1	=	0x00e9
                           0000E8   427 _ADCHS0	=	0x00e8
                           0000DF   428 _PWMRUN	=	0x00df
                           0000DE   429 _LOAD	=	0x00de
                           0000DD   430 _PWMF	=	0x00dd
                           0000DC   431 _CLRPWM	=	0x00dc
                           0000D7   432 _CY	=	0x00d7
                           0000D6   433 _AC	=	0x00d6
                           0000D5   434 _F0	=	0x00d5
                           0000D4   435 _RS1	=	0x00d4
                           0000D3   436 _RS0	=	0x00d3
                           0000D2   437 _OV	=	0x00d2
                           0000D0   438 _P	=	0x00d0
                           0000CF   439 _TF2	=	0x00cf
                           0000CA   440 _TR2	=	0x00ca
                           0000C8   441 _CM_RL2	=	0x00c8
                           0000C6   442 _I2CEN	=	0x00c6
                           0000C5   443 _STA	=	0x00c5
                           0000C4   444 _STO	=	0x00c4
                           0000C3   445 _SI	=	0x00c3
                           0000C2   446 _AA	=	0x00c2
                           0000C0   447 _I2CPX	=	0x00c0
                           0000BE   448 _PADC	=	0x00be
                           0000BD   449 _PBOD	=	0x00bd
                           0000BC   450 _PS	=	0x00bc
                           0000BB   451 _PT1	=	0x00bb
                           0000BA   452 _PX1	=	0x00ba
                           0000B9   453 _PT0	=	0x00b9
                           0000B8   454 _PX0	=	0x00b8
                           0000B0   455 _P30	=	0x00b0
                           0000AF   456 _EA	=	0x00af
                           0000AE   457 _EADC	=	0x00ae
                           0000AD   458 _EBOD	=	0x00ad
                           0000AC   459 _ES	=	0x00ac
                           0000AB   460 _ET1	=	0x00ab
                           0000AA   461 _EX1	=	0x00aa
                           0000A9   462 _ET0	=	0x00a9
                           0000A8   463 _EX0	=	0x00a8
                           0000A0   464 _P20	=	0x00a0
                           00009F   465 _SM0	=	0x009f
                           00009F   466 _FE	=	0x009f
                           00009E   467 _SM1	=	0x009e
                           00009D   468 _SM2	=	0x009d
                           00009C   469 _REN	=	0x009c
                           00009B   470 _TB8	=	0x009b
                           00009A   471 _RB8	=	0x009a
                           000099   472 _TI	=	0x0099
                           000098   473 _RI	=	0x0098
                           000097   474 _P17	=	0x0097
                           000096   475 _P16	=	0x0096
                           000096   476 _TXD_1	=	0x0096
                           000095   477 _P15	=	0x0095
                           000094   478 _P14	=	0x0094
                           000094   479 _SDA	=	0x0094
                           000093   480 _P13	=	0x0093
                           000093   481 _SCL	=	0x0093
                           000092   482 _P12	=	0x0092
                           000091   483 _P11	=	0x0091
                           000090   484 _P10	=	0x0090
                           00008F   485 _TF1	=	0x008f
                           00008E   486 _TR1	=	0x008e
                           00008D   487 _TF0	=	0x008d
                           00008C   488 _TR0	=	0x008c
                           00008B   489 _IE1	=	0x008b
                           00008A   490 _IT1	=	0x008a
                           000089   491 _IE0	=	0x0089
                           000088   492 _IT0	=	0x0088
                           000087   493 _P07	=	0x0087
                           000087   494 _RXD	=	0x0087
                           000086   495 _P06	=	0x0086
                           000086   496 _TXD	=	0x0086
                           000085   497 _P05	=	0x0085
                           000084   498 _P04	=	0x0084
                           000084   499 _STADC	=	0x0084
                           000083   500 _P03	=	0x0083
                           000082   501 _P02	=	0x0082
                           000082   502 _RXD_1	=	0x0082
                           000081   503 _P01	=	0x0081
                           000081   504 _MISO	=	0x0081
                           000080   505 _P00	=	0x0080
                           000080   506 _MOSI	=	0x0080
                                    507 ;--------------------------------------------------------
                                    508 ; overlayable register banks
                                    509 ;--------------------------------------------------------
                                    510 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        511 	.ds 8
                                    512 ;--------------------------------------------------------
                                    513 ; internal ram data
                                    514 ;--------------------------------------------------------
                                    515 	.area DSEG    (DATA)
      000000                        516 _gu16Cnt::
      000000                        517 	.ds 2
      000002                        518 _send_linefi_packet_i_65537_54:
      000002                        519 	.ds 1
      000003                        520 _print_linefipacket_i_65537_66:
      000003                        521 	.ds 1
      000004                        522 _print_raw_packet_PARM_2:
      000004                        523 	.ds 3
                                    524 ;--------------------------------------------------------
                                    525 ; overlayable items in internal ram 
                                    526 ;--------------------------------------------------------
                                    527 	.area	OSEG    (OVR,DATA)
                                    528 	.area	OSEG    (OVR,DATA)
                                    529 	.area	OSEG    (OVR,DATA)
      000000                        530 _cp_buf2linefipacket_PARM_2:
      000000                        531 	.ds 3
      000003                        532 _cp_buf2linefipacket_PARM_3:
      000003                        533 	.ds 3
      000006                        534 _cp_buf2linefipacket_i_65538_61:
      000006                        535 	.ds 1
      000007                        536 _cp_buf2linefipacket_sloc0_1_0:
      000007                        537 	.ds 3
                                    538 	.area	OSEG    (OVR,DATA)
      000000                        539 _crc8_PARM_2:
      000000                        540 	.ds 1
      000001                        541 _crc8_PARM_3:
      000001                        542 	.ds 1
                                    543 ;--------------------------------------------------------
                                    544 ; indirectly addressable internal ram data
                                    545 ;--------------------------------------------------------
                                    546 	.area ISEG    (DATA)
                                    547 ;--------------------------------------------------------
                                    548 ; absolute internal ram data
                                    549 ;--------------------------------------------------------
                                    550 	.area IABS    (ABS,DATA)
                                    551 	.area IABS    (ABS,DATA)
                                    552 ;--------------------------------------------------------
                                    553 ; bit data
                                    554 ;--------------------------------------------------------
                                    555 	.area BSEG    (BIT)
                                    556 ;--------------------------------------------------------
                                    557 ; paged external ram data
                                    558 ;--------------------------------------------------------
                                    559 	.area PSEG    (PAG,XDATA)
                                    560 ;--------------------------------------------------------
                                    561 ; external ram data
                                    562 ;--------------------------------------------------------
                                    563 	.area XSEG    (XDATA)
      000000                        564 _gpcTypeStr::
      000000                        565 	.ds 84
                                    566 ;--------------------------------------------------------
                                    567 ; absolute external ram data
                                    568 ;--------------------------------------------------------
                                    569 	.area XABS    (ABS,XDATA)
                                    570 ;--------------------------------------------------------
                                    571 ; external initialized ram data
                                    572 ;--------------------------------------------------------
                                    573 	.area HOME    (CODE)
                                    574 	.area GSINIT0 (CODE)
                                    575 	.area GSINIT1 (CODE)
                                    576 	.area GSINIT2 (CODE)
                                    577 	.area GSINIT3 (CODE)
                                    578 	.area GSINIT4 (CODE)
                                    579 	.area GSINIT5 (CODE)
                                    580 	.area GSINIT  (CODE)
                                    581 	.area GSFINAL (CODE)
                                    582 	.area CSEG    (CODE)
                                    583 ;--------------------------------------------------------
                                    584 ; global & static initialisations
                                    585 ;--------------------------------------------------------
                                    586 	.area HOME    (CODE)
                                    587 	.area GSINIT  (CODE)
                                    588 	.area GSFINAL (CODE)
                                    589 	.area GSINIT  (CODE)
                                    590 ;	../lib/linefi_packet.c:15: uint16 gu16Cnt = 0;
      000000 E4               [12]  591 	clr	a
      000001 F5*00            [12]  592 	mov	_gu16Cnt,a
      000003 F5*01            [12]  593 	mov	(_gu16Cnt + 1),a
                                    594 ;	../lib/linefi_packet.c:17: const char * __xdata gpcTypeStr[] = {
      000005 90r00r00         [24]  595 	mov	dptr,#_gpcTypeStr
      000008 74r97            [12]  596 	mov	a,#___str_14
      00000A F0               [24]  597 	movx	@dptr,a
      00000B 74s00            [12]  598 	mov	a,#(___str_14 >> 8)
      00000D A3               [24]  599 	inc	dptr
      00000E F0               [24]  600 	movx	@dptr,a
      00000F 74 80            [12]  601 	mov	a,#0x80
      000011 A3               [24]  602 	inc	dptr
      000012 F0               [24]  603 	movx	@dptr,a
      000013 90r00r03         [24]  604 	mov	dptr,#(_gpcTypeStr + 0x0003)
      000016 74rA2            [12]  605 	mov	a,#___str_15
      000018 F0               [24]  606 	movx	@dptr,a
      000019 74s00            [12]  607 	mov	a,#(___str_15 >> 8)
      00001B A3               [24]  608 	inc	dptr
      00001C F0               [24]  609 	movx	@dptr,a
      00001D 74 80            [12]  610 	mov	a,#0x80
      00001F A3               [24]  611 	inc	dptr
      000020 F0               [24]  612 	movx	@dptr,a
      000021 90r00r06         [24]  613 	mov	dptr,#(_gpcTypeStr + 0x0006)
      000024 74rAD            [12]  614 	mov	a,#___str_16
      000026 F0               [24]  615 	movx	@dptr,a
      000027 74s00            [12]  616 	mov	a,#(___str_16 >> 8)
      000029 A3               [24]  617 	inc	dptr
      00002A F0               [24]  618 	movx	@dptr,a
      00002B 74 80            [12]  619 	mov	a,#0x80
      00002D A3               [24]  620 	inc	dptr
      00002E F0               [24]  621 	movx	@dptr,a
      00002F 90r00r09         [24]  622 	mov	dptr,#(_gpcTypeStr + 0x0009)
      000032 74rB8            [12]  623 	mov	a,#___str_17
      000034 F0               [24]  624 	movx	@dptr,a
      000035 74s00            [12]  625 	mov	a,#(___str_17 >> 8)
      000037 A3               [24]  626 	inc	dptr
      000038 F0               [24]  627 	movx	@dptr,a
      000039 74 80            [12]  628 	mov	a,#0x80
      00003B A3               [24]  629 	inc	dptr
      00003C F0               [24]  630 	movx	@dptr,a
      00003D 90r00r0C         [24]  631 	mov	dptr,#(_gpcTypeStr + 0x000c)
      000040 74rC5            [12]  632 	mov	a,#___str_18
      000042 F0               [24]  633 	movx	@dptr,a
      000043 74s00            [12]  634 	mov	a,#(___str_18 >> 8)
      000045 A3               [24]  635 	inc	dptr
      000046 F0               [24]  636 	movx	@dptr,a
      000047 74 80            [12]  637 	mov	a,#0x80
      000049 A3               [24]  638 	inc	dptr
      00004A F0               [24]  639 	movx	@dptr,a
      00004B 90r00r0F         [24]  640 	mov	dptr,#(_gpcTypeStr + 0x000f)
      00004E 74rD1            [12]  641 	mov	a,#___str_19
      000050 F0               [24]  642 	movx	@dptr,a
      000051 74s00            [12]  643 	mov	a,#(___str_19 >> 8)
      000053 A3               [24]  644 	inc	dptr
      000054 F0               [24]  645 	movx	@dptr,a
      000055 74 80            [12]  646 	mov	a,#0x80
      000057 A3               [24]  647 	inc	dptr
      000058 F0               [24]  648 	movx	@dptr,a
      000059 90r00r12         [24]  649 	mov	dptr,#(_gpcTypeStr + 0x0012)
      00005C 74rE0            [12]  650 	mov	a,#___str_20
      00005E F0               [24]  651 	movx	@dptr,a
      00005F 74s00            [12]  652 	mov	a,#(___str_20 >> 8)
      000061 A3               [24]  653 	inc	dptr
      000062 F0               [24]  654 	movx	@dptr,a
      000063 74 80            [12]  655 	mov	a,#0x80
      000065 A3               [24]  656 	inc	dptr
      000066 F0               [24]  657 	movx	@dptr,a
      000067 90r00r15         [24]  658 	mov	dptr,#(_gpcTypeStr + 0x0015)
      00006A 74rEE            [12]  659 	mov	a,#___str_21
      00006C F0               [24]  660 	movx	@dptr,a
      00006D 74s00            [12]  661 	mov	a,#(___str_21 >> 8)
      00006F A3               [24]  662 	inc	dptr
      000070 F0               [24]  663 	movx	@dptr,a
      000071 74 80            [12]  664 	mov	a,#0x80
      000073 A3               [24]  665 	inc	dptr
      000074 F0               [24]  666 	movx	@dptr,a
      000075 90r00r18         [24]  667 	mov	dptr,#(_gpcTypeStr + 0x0018)
      000078 74rEE            [12]  668 	mov	a,#___str_21
      00007A F0               [24]  669 	movx	@dptr,a
      00007B 74s00            [12]  670 	mov	a,#(___str_21 >> 8)
      00007D A3               [24]  671 	inc	dptr
      00007E F0               [24]  672 	movx	@dptr,a
      00007F 74 80            [12]  673 	mov	a,#0x80
      000081 A3               [24]  674 	inc	dptr
      000082 F0               [24]  675 	movx	@dptr,a
      000083 90r00r1B         [24]  676 	mov	dptr,#(_gpcTypeStr + 0x001b)
      000086 74rEE            [12]  677 	mov	a,#___str_21
      000088 F0               [24]  678 	movx	@dptr,a
      000089 74s00            [12]  679 	mov	a,#(___str_21 >> 8)
      00008B A3               [24]  680 	inc	dptr
      00008C F0               [24]  681 	movx	@dptr,a
      00008D 74 80            [12]  682 	mov	a,#0x80
      00008F A3               [24]  683 	inc	dptr
      000090 F0               [24]  684 	movx	@dptr,a
      000091 90r00r1E         [24]  685 	mov	dptr,#(_gpcTypeStr + 0x001e)
      000094 74rEE            [12]  686 	mov	a,#___str_21
      000096 F0               [24]  687 	movx	@dptr,a
      000097 74s00            [12]  688 	mov	a,#(___str_21 >> 8)
      000099 A3               [24]  689 	inc	dptr
      00009A F0               [24]  690 	movx	@dptr,a
      00009B 74 80            [12]  691 	mov	a,#0x80
      00009D A3               [24]  692 	inc	dptr
      00009E F0               [24]  693 	movx	@dptr,a
      00009F 90r00r21         [24]  694 	mov	dptr,#(_gpcTypeStr + 0x0021)
      0000A2 74rEE            [12]  695 	mov	a,#___str_21
      0000A4 F0               [24]  696 	movx	@dptr,a
      0000A5 74s00            [12]  697 	mov	a,#(___str_21 >> 8)
      0000A7 A3               [24]  698 	inc	dptr
      0000A8 F0               [24]  699 	movx	@dptr,a
      0000A9 74 80            [12]  700 	mov	a,#0x80
      0000AB A3               [24]  701 	inc	dptr
      0000AC F0               [24]  702 	movx	@dptr,a
      0000AD 90r00r24         [24]  703 	mov	dptr,#(_gpcTypeStr + 0x0024)
      0000B0 74rEE            [12]  704 	mov	a,#___str_21
      0000B2 F0               [24]  705 	movx	@dptr,a
      0000B3 74s00            [12]  706 	mov	a,#(___str_21 >> 8)
      0000B5 A3               [24]  707 	inc	dptr
      0000B6 F0               [24]  708 	movx	@dptr,a
      0000B7 74 80            [12]  709 	mov	a,#0x80
      0000B9 A3               [24]  710 	inc	dptr
      0000BA F0               [24]  711 	movx	@dptr,a
      0000BB 90r00r27         [24]  712 	mov	dptr,#(_gpcTypeStr + 0x0027)
      0000BE 74rEE            [12]  713 	mov	a,#___str_21
      0000C0 F0               [24]  714 	movx	@dptr,a
      0000C1 74s00            [12]  715 	mov	a,#(___str_21 >> 8)
      0000C3 A3               [24]  716 	inc	dptr
      0000C4 F0               [24]  717 	movx	@dptr,a
      0000C5 74 80            [12]  718 	mov	a,#0x80
      0000C7 A3               [24]  719 	inc	dptr
      0000C8 F0               [24]  720 	movx	@dptr,a
      0000C9 90r00r2A         [24]  721 	mov	dptr,#(_gpcTypeStr + 0x002a)
      0000CC 74rEE            [12]  722 	mov	a,#___str_21
      0000CE F0               [24]  723 	movx	@dptr,a
      0000CF 74s00            [12]  724 	mov	a,#(___str_21 >> 8)
      0000D1 A3               [24]  725 	inc	dptr
      0000D2 F0               [24]  726 	movx	@dptr,a
      0000D3 74 80            [12]  727 	mov	a,#0x80
      0000D5 A3               [24]  728 	inc	dptr
      0000D6 F0               [24]  729 	movx	@dptr,a
      0000D7 90r00r2D         [24]  730 	mov	dptr,#(_gpcTypeStr + 0x002d)
      0000DA 74rEE            [12]  731 	mov	a,#___str_21
      0000DC F0               [24]  732 	movx	@dptr,a
      0000DD 74s00            [12]  733 	mov	a,#(___str_21 >> 8)
      0000DF A3               [24]  734 	inc	dptr
      0000E0 F0               [24]  735 	movx	@dptr,a
      0000E1 74 80            [12]  736 	mov	a,#0x80
      0000E3 A3               [24]  737 	inc	dptr
      0000E4 F0               [24]  738 	movx	@dptr,a
      0000E5 90r00r30         [24]  739 	mov	dptr,#(_gpcTypeStr + 0x0030)
      0000E8 74rEE            [12]  740 	mov	a,#___str_21
      0000EA F0               [24]  741 	movx	@dptr,a
      0000EB 74s00            [12]  742 	mov	a,#(___str_21 >> 8)
      0000ED A3               [24]  743 	inc	dptr
      0000EE F0               [24]  744 	movx	@dptr,a
      0000EF 74 80            [12]  745 	mov	a,#0x80
      0000F1 A3               [24]  746 	inc	dptr
      0000F2 F0               [24]  747 	movx	@dptr,a
      0000F3 90r00r33         [24]  748 	mov	dptr,#(_gpcTypeStr + 0x0033)
      0000F6 74rEE            [12]  749 	mov	a,#___str_21
      0000F8 F0               [24]  750 	movx	@dptr,a
      0000F9 74s00            [12]  751 	mov	a,#(___str_21 >> 8)
      0000FB A3               [24]  752 	inc	dptr
      0000FC F0               [24]  753 	movx	@dptr,a
      0000FD 74 80            [12]  754 	mov	a,#0x80
      0000FF A3               [24]  755 	inc	dptr
      000100 F0               [24]  756 	movx	@dptr,a
      000101 90r00r36         [24]  757 	mov	dptr,#(_gpcTypeStr + 0x0036)
      000104 74rEE            [12]  758 	mov	a,#___str_21
      000106 F0               [24]  759 	movx	@dptr,a
      000107 74s00            [12]  760 	mov	a,#(___str_21 >> 8)
      000109 A3               [24]  761 	inc	dptr
      00010A F0               [24]  762 	movx	@dptr,a
      00010B 74 80            [12]  763 	mov	a,#0x80
      00010D A3               [24]  764 	inc	dptr
      00010E F0               [24]  765 	movx	@dptr,a
      00010F 90r00r39         [24]  766 	mov	dptr,#(_gpcTypeStr + 0x0039)
      000112 74rEE            [12]  767 	mov	a,#___str_21
      000114 F0               [24]  768 	movx	@dptr,a
      000115 74s00            [12]  769 	mov	a,#(___str_21 >> 8)
      000117 A3               [24]  770 	inc	dptr
      000118 F0               [24]  771 	movx	@dptr,a
      000119 74 80            [12]  772 	mov	a,#0x80
      00011B A3               [24]  773 	inc	dptr
      00011C F0               [24]  774 	movx	@dptr,a
      00011D 90r00r3C         [24]  775 	mov	dptr,#(_gpcTypeStr + 0x003c)
      000120 74rEE            [12]  776 	mov	a,#___str_21
      000122 F0               [24]  777 	movx	@dptr,a
      000123 74s00            [12]  778 	mov	a,#(___str_21 >> 8)
      000125 A3               [24]  779 	inc	dptr
      000126 F0               [24]  780 	movx	@dptr,a
      000127 74 80            [12]  781 	mov	a,#0x80
      000129 A3               [24]  782 	inc	dptr
      00012A F0               [24]  783 	movx	@dptr,a
      00012B 90r00r3F         [24]  784 	mov	dptr,#(_gpcTypeStr + 0x003f)
      00012E 74rEE            [12]  785 	mov	a,#___str_21
      000130 F0               [24]  786 	movx	@dptr,a
      000131 74s00            [12]  787 	mov	a,#(___str_21 >> 8)
      000133 A3               [24]  788 	inc	dptr
      000134 F0               [24]  789 	movx	@dptr,a
      000135 74 80            [12]  790 	mov	a,#0x80
      000137 A3               [24]  791 	inc	dptr
      000138 F0               [24]  792 	movx	@dptr,a
      000139 90r00r42         [24]  793 	mov	dptr,#(_gpcTypeStr + 0x0042)
      00013C 74rEE            [12]  794 	mov	a,#___str_21
      00013E F0               [24]  795 	movx	@dptr,a
      00013F 74s00            [12]  796 	mov	a,#(___str_21 >> 8)
      000141 A3               [24]  797 	inc	dptr
      000142 F0               [24]  798 	movx	@dptr,a
      000143 74 80            [12]  799 	mov	a,#0x80
      000145 A3               [24]  800 	inc	dptr
      000146 F0               [24]  801 	movx	@dptr,a
      000147 90r00r45         [24]  802 	mov	dptr,#(_gpcTypeStr + 0x0045)
      00014A 74rEE            [12]  803 	mov	a,#___str_21
      00014C F0               [24]  804 	movx	@dptr,a
      00014D 74s00            [12]  805 	mov	a,#(___str_21 >> 8)
      00014F A3               [24]  806 	inc	dptr
      000150 F0               [24]  807 	movx	@dptr,a
      000151 74 80            [12]  808 	mov	a,#0x80
      000153 A3               [24]  809 	inc	dptr
      000154 F0               [24]  810 	movx	@dptr,a
      000155 90r00r48         [24]  811 	mov	dptr,#(_gpcTypeStr + 0x0048)
      000158 74rEE            [12]  812 	mov	a,#___str_21
      00015A F0               [24]  813 	movx	@dptr,a
      00015B 74s00            [12]  814 	mov	a,#(___str_21 >> 8)
      00015D A3               [24]  815 	inc	dptr
      00015E F0               [24]  816 	movx	@dptr,a
      00015F 74 80            [12]  817 	mov	a,#0x80
      000161 A3               [24]  818 	inc	dptr
      000162 F0               [24]  819 	movx	@dptr,a
      000163 90r00r4B         [24]  820 	mov	dptr,#(_gpcTypeStr + 0x004b)
      000166 74rEE            [12]  821 	mov	a,#___str_21
      000168 F0               [24]  822 	movx	@dptr,a
      000169 74s00            [12]  823 	mov	a,#(___str_21 >> 8)
      00016B A3               [24]  824 	inc	dptr
      00016C F0               [24]  825 	movx	@dptr,a
      00016D 74 80            [12]  826 	mov	a,#0x80
      00016F A3               [24]  827 	inc	dptr
      000170 F0               [24]  828 	movx	@dptr,a
      000171 90r00r4E         [24]  829 	mov	dptr,#(_gpcTypeStr + 0x004e)
      000174 74rEE            [12]  830 	mov	a,#___str_21
      000176 F0               [24]  831 	movx	@dptr,a
      000177 74s00            [12]  832 	mov	a,#(___str_21 >> 8)
      000179 A3               [24]  833 	inc	dptr
      00017A F0               [24]  834 	movx	@dptr,a
      00017B 74 80            [12]  835 	mov	a,#0x80
      00017D A3               [24]  836 	inc	dptr
      00017E F0               [24]  837 	movx	@dptr,a
      00017F 90r00r51         [24]  838 	mov	dptr,#(_gpcTypeStr + 0x0051)
      000182 74rEE            [12]  839 	mov	a,#___str_21
      000184 F0               [24]  840 	movx	@dptr,a
      000185 74s00            [12]  841 	mov	a,#(___str_21 >> 8)
      000187 A3               [24]  842 	inc	dptr
      000188 F0               [24]  843 	movx	@dptr,a
      000189 74 80            [12]  844 	mov	a,#0x80
      00018B A3               [24]  845 	inc	dptr
      00018C F0               [24]  846 	movx	@dptr,a
                                    847 ;--------------------------------------------------------
                                    848 ; Home
                                    849 ;--------------------------------------------------------
                                    850 	.area HOME    (CODE)
                                    851 	.area HOME    (CODE)
                                    852 ;--------------------------------------------------------
                                    853 ; code
                                    854 ;--------------------------------------------------------
                                    855 	.area CSEG    (CODE)
                                    856 ;------------------------------------------------------------
                                    857 ;Allocation info for local variables in function 'size_linefi_packet'
                                    858 ;------------------------------------------------------------
                                    859 ;apstLineFiPkt             Allocated to registers r5 r6 r7 
                                    860 ;------------------------------------------------------------
                                    861 ;	../lib/linefi_packet.c:48: uint8 size_linefi_packet(linefi_packet_t * apstLineFiPkt)
                                    862 ;	-----------------------------------------
                                    863 ;	 function size_linefi_packet
                                    864 ;	-----------------------------------------
      000000                        865 _size_linefi_packet:
                           000007   866 	ar7 = 0x07
                           000006   867 	ar6 = 0x06
                           000005   868 	ar5 = 0x05
                           000004   869 	ar4 = 0x04
                           000003   870 	ar3 = 0x03
                           000002   871 	ar2 = 0x02
                           000001   872 	ar1 = 0x01
                           000000   873 	ar0 = 0x00
      000000 AD 82            [24]  874 	mov	r5,dpl
      000002 AE 83            [24]  875 	mov	r6,dph
      000004 AF F0            [24]  876 	mov	r7,b
                                    877 ;	../lib/linefi_packet.c:50: return apstLineFiPkt->u8Size + sizeof(linefi_packet_t) - sizeof(uint8 *);
      000006 74 03            [12]  878 	mov	a,#0x03
      000008 2D               [12]  879 	add	a,r5
      000009 FD               [12]  880 	mov	r5,a
      00000A E4               [12]  881 	clr	a
      00000B 3E               [12]  882 	addc	a,r6
      00000C FE               [12]  883 	mov	r6,a
      00000D 8D 82            [24]  884 	mov	dpl,r5
      00000F 8E 83            [24]  885 	mov	dph,r6
      000011 8F F0            [24]  886 	mov	b,r7
      000013 12r00r00         [24]  887 	lcall	__gptrget
      000016 24 05            [12]  888 	add	a,#0x05
      000018 F5 82            [12]  889 	mov	dpl,a
                                    890 ;	../lib/linefi_packet.c:51: }
      00001A 22               [24]  891 	ret
                                    892 ;------------------------------------------------------------
                                    893 ;Allocation info for local variables in function 'calc_crc_linefi_packet_packet'
                                    894 ;------------------------------------------------------------
                                    895 ;apstLineFiPkt             Allocated to registers r5 r6 r7 
                                    896 ;u8CRC                     Allocated to registers 
                                    897 ;------------------------------------------------------------
                                    898 ;	../lib/linefi_packet.c:53: uint8 calc_crc_linefi_packet_packet(linefi_packet_t * apstLineFiPkt)
                                    899 ;	-----------------------------------------
                                    900 ;	 function calc_crc_linefi_packet_packet
                                    901 ;	-----------------------------------------
      00001B                        902 _calc_crc_linefi_packet_packet:
      00001B AD 82            [24]  903 	mov	r5,dpl
      00001D AE 83            [24]  904 	mov	r6,dph
      00001F AF F0            [24]  905 	mov	r7,b
                                    906 ;	../lib/linefi_packet.c:55: uint8 u8CRC = crc8((uint8 *)apstLineFiPkt, 4, 0xFF);
      000021 8D 02            [24]  907 	mov	ar2,r5
      000023 8E 03            [24]  908 	mov	ar3,r6
      000025 8F 04            [24]  909 	mov	ar4,r7
      000027 75*00 04         [24]  910 	mov	_crc8_PARM_2,#0x04
      00002A 75*01 FF         [24]  911 	mov	_crc8_PARM_3,#0xff
      00002D 8A 82            [24]  912 	mov	dpl,r2
      00002F 8B 83            [24]  913 	mov	dph,r3
      000031 8C F0            [24]  914 	mov	b,r4
      000033 C0 07            [24]  915 	push	ar7
      000035 C0 06            [24]  916 	push	ar6
      000037 C0 05            [24]  917 	push	ar5
      000039 12r05r60         [24]  918 	lcall	_crc8
      00003C 85 82*01         [24]  919 	mov	_crc8_PARM_3,dpl
      00003F D0 05            [24]  920 	pop	ar5
      000041 D0 06            [24]  921 	pop	ar6
      000043 D0 07            [24]  922 	pop	ar7
                                    923 ;	../lib/linefi_packet.c:56: u8CRC = crc8((uint8 *)(apstLineFiPkt->pu8Data), apstLineFiPkt->u8Size, u8CRC);
      000045 74 05            [12]  924 	mov	a,#0x05
      000047 2D               [12]  925 	add	a,r5
      000048 FA               [12]  926 	mov	r2,a
      000049 E4               [12]  927 	clr	a
      00004A 3E               [12]  928 	addc	a,r6
      00004B FB               [12]  929 	mov	r3,a
      00004C 8F 04            [24]  930 	mov	ar4,r7
      00004E 8A 82            [24]  931 	mov	dpl,r2
      000050 8B 83            [24]  932 	mov	dph,r3
      000052 8C F0            [24]  933 	mov	b,r4
      000054 12r00r00         [24]  934 	lcall	__gptrget
      000057 FA               [12]  935 	mov	r2,a
      000058 A3               [24]  936 	inc	dptr
      000059 12r00r00         [24]  937 	lcall	__gptrget
      00005C FB               [12]  938 	mov	r3,a
      00005D A3               [24]  939 	inc	dptr
      00005E 12r00r00         [24]  940 	lcall	__gptrget
      000061 FC               [12]  941 	mov	r4,a
      000062 74 03            [12]  942 	mov	a,#0x03
      000064 2D               [12]  943 	add	a,r5
      000065 FD               [12]  944 	mov	r5,a
      000066 E4               [12]  945 	clr	a
      000067 3E               [12]  946 	addc	a,r6
      000068 FE               [12]  947 	mov	r6,a
      000069 8D 82            [24]  948 	mov	dpl,r5
      00006B 8E 83            [24]  949 	mov	dph,r6
      00006D 8F F0            [24]  950 	mov	b,r7
      00006F 12r00r00         [24]  951 	lcall	__gptrget
      000072 F5*00            [12]  952 	mov	_crc8_PARM_2,a
      000074 8A 82            [24]  953 	mov	dpl,r2
      000076 8B 83            [24]  954 	mov	dph,r3
      000078 8C F0            [24]  955 	mov	b,r4
                                    956 ;	../lib/linefi_packet.c:58: return u8CRC;
                                    957 ;	../lib/linefi_packet.c:59: }
      00007A 02r05r60         [24]  958 	ljmp	_crc8
                                    959 ;------------------------------------------------------------
                                    960 ;Allocation info for local variables in function 'add_crc_linefi_packet_packet'
                                    961 ;------------------------------------------------------------
                                    962 ;apstLineFiPkt             Allocated to registers r5 r6 r7 
                                    963 ;u8CRC                     Allocated to registers r4 
                                    964 ;------------------------------------------------------------
                                    965 ;	../lib/linefi_packet.c:61: void add_crc_linefi_packet_packet(linefi_packet_t * apstLineFiPkt)
                                    966 ;	-----------------------------------------
                                    967 ;	 function add_crc_linefi_packet_packet
                                    968 ;	-----------------------------------------
      00007D                        969 _add_crc_linefi_packet_packet:
                                    970 ;	../lib/linefi_packet.c:63: uint8 u8CRC = calc_crc_linefi_packet_packet(apstLineFiPkt);
      00007D AD 82            [24]  971 	mov	r5,dpl
      00007F AE 83            [24]  972 	mov	r6,dph
      000081 AF F0            [24]  973 	mov	r7,b
      000083 C0 07            [24]  974 	push	ar7
      000085 C0 06            [24]  975 	push	ar6
      000087 C0 05            [24]  976 	push	ar5
      000089 12r00r1B         [24]  977 	lcall	_calc_crc_linefi_packet_packet
      00008C AC 82            [24]  978 	mov	r4,dpl
      00008E D0 05            [24]  979 	pop	ar5
      000090 D0 06            [24]  980 	pop	ar6
      000092 D0 07            [24]  981 	pop	ar7
                                    982 ;	../lib/linefi_packet.c:64: apstLineFiPkt->u8CRC = u8CRC;
      000094 74 04            [12]  983 	mov	a,#0x04
      000096 2D               [12]  984 	add	a,r5
      000097 FD               [12]  985 	mov	r5,a
      000098 E4               [12]  986 	clr	a
      000099 3E               [12]  987 	addc	a,r6
      00009A FE               [12]  988 	mov	r6,a
      00009B 8D 82            [24]  989 	mov	dpl,r5
      00009D 8E 83            [24]  990 	mov	dph,r6
      00009F 8F F0            [24]  991 	mov	b,r7
      0000A1 EC               [12]  992 	mov	a,r4
                                    993 ;	../lib/linefi_packet.c:65: }
      0000A2 02r00r00         [24]  994 	ljmp	__gptrput
                                    995 ;------------------------------------------------------------
                                    996 ;Allocation info for local variables in function 'chk_crc_linefi_packet_packet'
                                    997 ;------------------------------------------------------------
                                    998 ;apstLineFiPkt             Allocated to registers 
                                    999 ;------------------------------------------------------------
                                   1000 ;	../lib/linefi_packet.c:67: uint8 chk_crc_linefi_packet_packet(linefi_packet_t * apstLineFiPkt)
                                   1001 ;	-----------------------------------------
                                   1002 ;	 function chk_crc_linefi_packet_packet
                                   1003 ;	-----------------------------------------
      0000A5                       1004 _chk_crc_linefi_packet_packet:
                                   1005 ;	../lib/linefi_packet.c:73: return CRC_OK;
      0000A5 75 82 01         [24] 1006 	mov	dpl,#0x01
                                   1007 ;	../lib/linefi_packet.c:75: return CRC_NOT_OK;
                                   1008 ;	../lib/linefi_packet.c:76: }
      0000A8 22               [24] 1009 	ret
                                   1010 ;------------------------------------------------------------
                                   1011 ;Allocation info for local variables in function 'get_octet_from_linefi'
                                   1012 ;------------------------------------------------------------
                                   1013 ;apu8Tmp                   Allocated to registers r5 r6 r7 
                                   1014 ;------------------------------------------------------------
                                   1015 ;	../lib/linefi_packet.c:79: UINT8 get_octet_from_linefi(UINT8 * apu8Tmp)
                                   1016 ;	-----------------------------------------
                                   1017 ;	 function get_octet_from_linefi
                                   1018 ;	-----------------------------------------
      0000A9                       1019 _get_octet_from_linefi:
                                   1020 ;	../lib/linefi_packet.c:81: return Receive_Data_From_UART1_nb(apu8Tmp);
                                   1021 ;	../lib/linefi_packet.c:82: }
      0000A9 02r00r00         [24] 1022 	ljmp	_Receive_Data_From_UART1_nb
                                   1023 ;------------------------------------------------------------
                                   1024 ;Allocation info for local variables in function 'send_octet_to_linefi'
                                   1025 ;------------------------------------------------------------
                                   1026 ;au8Data                   Allocated to registers 
                                   1027 ;------------------------------------------------------------
                                   1028 ;	../lib/linefi_packet.c:84: void send_octet_to_linefi(UINT8 au8Data)
                                   1029 ;	-----------------------------------------
                                   1030 ;	 function send_octet_to_linefi
                                   1031 ;	-----------------------------------------
      0000AC                       1032 _send_octet_to_linefi:
                                   1033 ;	../lib/linefi_packet.c:86: return Send_Data_To_UART1(au8Data);
                                   1034 ;	../lib/linefi_packet.c:87: }
      0000AC 02r00r00         [24] 1035 	ljmp	_Send_Data_To_UART1
                                   1036 ;------------------------------------------------------------
                                   1037 ;Allocation info for local variables in function 'send_linefi_packet'
                                   1038 ;------------------------------------------------------------
                                   1039 ;apstLineFiPkt             Allocated to registers r5 r6 r7 
                                   1040 ;pu8Buf                    Allocated to registers r2 r3 r4 
                                   1041 ;i                         Allocated with name '_send_linefi_packet_i_65537_54'
                                   1042 ;------------------------------------------------------------
                                   1043 ;	../lib/linefi_packet.c:89: void send_linefi_packet(linefi_packet_t * apstLineFiPkt)
                                   1044 ;	-----------------------------------------
                                   1045 ;	 function send_linefi_packet
                                   1046 ;	-----------------------------------------
      0000AF                       1047 _send_linefi_packet:
      0000AF AD 82            [24] 1048 	mov	r5,dpl
      0000B1 AE 83            [24] 1049 	mov	r6,dph
      0000B3 AF F0            [24] 1050 	mov	r7,b
                                   1051 ;	../lib/linefi_packet.c:94: uint8 * pu8Buf = (uint8 *) apstLineFiPkt;
      0000B5 8D 02            [24] 1052 	mov	ar2,r5
      0000B7 8E 03            [24] 1053 	mov	ar3,r6
      0000B9 8F 04            [24] 1054 	mov	ar4,r7
                                   1055 ;	../lib/linefi_packet.c:95: send_octet_to_linefi(*pu8Buf++);
      0000BB 8A 82            [24] 1056 	mov	dpl,r2
      0000BD 8B 83            [24] 1057 	mov	dph,r3
      0000BF 8C F0            [24] 1058 	mov	b,r4
      0000C1 12r00r00         [24] 1059 	lcall	__gptrget
      0000C4 F5 82            [12] 1060 	mov	dpl,a
      0000C6 0A               [12] 1061 	inc	r2
      0000C7 BA 00 01         [24] 1062 	cjne	r2,#0x00,00118$
      0000CA 0B               [12] 1063 	inc	r3
      0000CB                       1064 00118$:
      0000CB C0 07            [24] 1065 	push	ar7
      0000CD C0 06            [24] 1066 	push	ar6
      0000CF C0 05            [24] 1067 	push	ar5
      0000D1 C0 04            [24] 1068 	push	ar4
      0000D3 C0 03            [24] 1069 	push	ar3
      0000D5 C0 02            [24] 1070 	push	ar2
      0000D7 12r00rAC         [24] 1071 	lcall	_send_octet_to_linefi
      0000DA D0 02            [24] 1072 	pop	ar2
      0000DC D0 03            [24] 1073 	pop	ar3
      0000DE D0 04            [24] 1074 	pop	ar4
      0000E0 D0 05            [24] 1075 	pop	ar5
      0000E2 D0 06            [24] 1076 	pop	ar6
      0000E4 D0 07            [24] 1077 	pop	ar7
                                   1078 ;	../lib/linefi_packet.c:96: send_octet_to_linefi(*pu8Buf++);
      0000E6 8A 82            [24] 1079 	mov	dpl,r2
      0000E8 8B 83            [24] 1080 	mov	dph,r3
      0000EA 8C F0            [24] 1081 	mov	b,r4
      0000EC 12r00r00         [24] 1082 	lcall	__gptrget
      0000EF F5 82            [12] 1083 	mov	dpl,a
      0000F1 0A               [12] 1084 	inc	r2
      0000F2 BA 00 01         [24] 1085 	cjne	r2,#0x00,00119$
      0000F5 0B               [12] 1086 	inc	r3
      0000F6                       1087 00119$:
      0000F6 C0 07            [24] 1088 	push	ar7
      0000F8 C0 06            [24] 1089 	push	ar6
      0000FA C0 05            [24] 1090 	push	ar5
      0000FC C0 04            [24] 1091 	push	ar4
      0000FE C0 03            [24] 1092 	push	ar3
      000100 C0 02            [24] 1093 	push	ar2
      000102 12r00rAC         [24] 1094 	lcall	_send_octet_to_linefi
      000105 D0 02            [24] 1095 	pop	ar2
      000107 D0 03            [24] 1096 	pop	ar3
      000109 D0 04            [24] 1097 	pop	ar4
      00010B D0 05            [24] 1098 	pop	ar5
      00010D D0 06            [24] 1099 	pop	ar6
      00010F D0 07            [24] 1100 	pop	ar7
                                   1101 ;	../lib/linefi_packet.c:97: send_octet_to_linefi(*pu8Buf++);
      000111 8A 82            [24] 1102 	mov	dpl,r2
      000113 8B 83            [24] 1103 	mov	dph,r3
      000115 8C F0            [24] 1104 	mov	b,r4
      000117 12r00r00         [24] 1105 	lcall	__gptrget
      00011A F9               [12] 1106 	mov	r1,a
      00011B 0A               [12] 1107 	inc	r2
      00011C BA 00 01         [24] 1108 	cjne	r2,#0x00,00120$
      00011F 0B               [12] 1109 	inc	r3
      000120                       1110 00120$:
      000120 89 82            [24] 1111 	mov	dpl,r1
      000122 C0 07            [24] 1112 	push	ar7
      000124 C0 06            [24] 1113 	push	ar6
      000126 C0 05            [24] 1114 	push	ar5
      000128 C0 04            [24] 1115 	push	ar4
      00012A C0 03            [24] 1116 	push	ar3
      00012C C0 02            [24] 1117 	push	ar2
      00012E 12r00rAC         [24] 1118 	lcall	_send_octet_to_linefi
      000131 D0 02            [24] 1119 	pop	ar2
      000133 D0 03            [24] 1120 	pop	ar3
      000135 D0 04            [24] 1121 	pop	ar4
      000137 D0 05            [24] 1122 	pop	ar5
      000139 D0 06            [24] 1123 	pop	ar6
      00013B D0 07            [24] 1124 	pop	ar7
                                   1125 ;	../lib/linefi_packet.c:98: send_octet_to_linefi(*pu8Buf++);
      00013D 8A 82            [24] 1126 	mov	dpl,r2
      00013F 8B 83            [24] 1127 	mov	dph,r3
      000141 8C F0            [24] 1128 	mov	b,r4
      000143 12r00r00         [24] 1129 	lcall	__gptrget
      000146 F5 82            [12] 1130 	mov	dpl,a
      000148 0A               [12] 1131 	inc	r2
      000149 BA 00 01         [24] 1132 	cjne	r2,#0x00,00121$
      00014C 0B               [12] 1133 	inc	r3
      00014D                       1134 00121$:
      00014D C0 07            [24] 1135 	push	ar7
      00014F C0 06            [24] 1136 	push	ar6
      000151 C0 05            [24] 1137 	push	ar5
      000153 C0 04            [24] 1138 	push	ar4
      000155 C0 03            [24] 1139 	push	ar3
      000157 C0 02            [24] 1140 	push	ar2
      000159 12r00rAC         [24] 1141 	lcall	_send_octet_to_linefi
      00015C D0 02            [24] 1142 	pop	ar2
      00015E D0 03            [24] 1143 	pop	ar3
      000160 D0 04            [24] 1144 	pop	ar4
                                   1145 ;	../lib/linefi_packet.c:99: send_octet_to_linefi(*pu8Buf++); //CRC
      000162 8A 82            [24] 1146 	mov	dpl,r2
      000164 8B 83            [24] 1147 	mov	dph,r3
      000166 8C F0            [24] 1148 	mov	b,r4
      000168 12r00r00         [24] 1149 	lcall	__gptrget
      00016B F5 82            [12] 1150 	mov	dpl,a
      00016D 12r00rAC         [24] 1151 	lcall	_send_octet_to_linefi
      000170 D0 05            [24] 1152 	pop	ar5
      000172 D0 06            [24] 1153 	pop	ar6
      000174 D0 07            [24] 1154 	pop	ar7
                                   1155 ;	../lib/linefi_packet.c:102: for (i=0;i<apstLineFiPkt->u8Size;i++) {
      000176 74 05            [12] 1156 	mov	a,#0x05
      000178 2D               [12] 1157 	add	a,r5
      000179 FA               [12] 1158 	mov	r2,a
      00017A E4               [12] 1159 	clr	a
      00017B 3E               [12] 1160 	addc	a,r6
      00017C FB               [12] 1161 	mov	r3,a
      00017D 8F 04            [24] 1162 	mov	ar4,r7
      00017F 74 03            [12] 1163 	mov	a,#0x03
      000181 2D               [12] 1164 	add	a,r5
      000182 FD               [12] 1165 	mov	r5,a
      000183 E4               [12] 1166 	clr	a
      000184 3E               [12] 1167 	addc	a,r6
      000185 FE               [12] 1168 	mov	r6,a
      000186 75*02 00         [24] 1169 	mov	_send_linefi_packet_i_65537_54,#0x00
      000189                       1170 00103$:
      000189 8D 82            [24] 1171 	mov	dpl,r5
      00018B 8E 83            [24] 1172 	mov	dph,r6
      00018D 8F F0            [24] 1173 	mov	b,r7
      00018F 12r00r00         [24] 1174 	lcall	__gptrget
      000192 F8               [12] 1175 	mov	r0,a
      000193 C3               [12] 1176 	clr	c
      000194 E5*02            [12] 1177 	mov	a,_send_linefi_packet_i_65537_54
      000196 98               [12] 1178 	subb	a,r0
      000197 50 51            [24] 1179 	jnc	00105$
                                   1180 ;	../lib/linefi_packet.c:103: send_octet_to_linefi(*(apstLineFiPkt->pu8Data+i));
      000199 C0 05            [24] 1181 	push	ar5
      00019B C0 06            [24] 1182 	push	ar6
      00019D C0 07            [24] 1183 	push	ar7
      00019F 8A 82            [24] 1184 	mov	dpl,r2
      0001A1 8B 83            [24] 1185 	mov	dph,r3
      0001A3 8C F0            [24] 1186 	mov	b,r4
      0001A5 12r00r00         [24] 1187 	lcall	__gptrget
      0001A8 F8               [12] 1188 	mov	r0,a
      0001A9 A3               [24] 1189 	inc	dptr
      0001AA 12r00r00         [24] 1190 	lcall	__gptrget
      0001AD F9               [12] 1191 	mov	r1,a
      0001AE A3               [24] 1192 	inc	dptr
      0001AF 12r00r00         [24] 1193 	lcall	__gptrget
      0001B2 FF               [12] 1194 	mov	r7,a
      0001B3 E5*02            [12] 1195 	mov	a,_send_linefi_packet_i_65537_54
      0001B5 28               [12] 1196 	add	a,r0
      0001B6 F8               [12] 1197 	mov	r0,a
      0001B7 E4               [12] 1198 	clr	a
      0001B8 39               [12] 1199 	addc	a,r1
      0001B9 F9               [12] 1200 	mov	r1,a
      0001BA 88 82            [24] 1201 	mov	dpl,r0
      0001BC 89 83            [24] 1202 	mov	dph,r1
      0001BE 8F F0            [24] 1203 	mov	b,r7
      0001C0 12r00r00         [24] 1204 	lcall	__gptrget
      0001C3 F5 82            [12] 1205 	mov	dpl,a
      0001C5 C0 07            [24] 1206 	push	ar7
      0001C7 C0 06            [24] 1207 	push	ar6
      0001C9 C0 05            [24] 1208 	push	ar5
      0001CB C0 04            [24] 1209 	push	ar4
      0001CD C0 03            [24] 1210 	push	ar3
      0001CF C0 02            [24] 1211 	push	ar2
      0001D1 12r00rAC         [24] 1212 	lcall	_send_octet_to_linefi
      0001D4 D0 02            [24] 1213 	pop	ar2
      0001D6 D0 03            [24] 1214 	pop	ar3
      0001D8 D0 04            [24] 1215 	pop	ar4
      0001DA D0 05            [24] 1216 	pop	ar5
      0001DC D0 06            [24] 1217 	pop	ar6
      0001DE D0 07            [24] 1218 	pop	ar7
                                   1219 ;	../lib/linefi_packet.c:102: for (i=0;i<apstLineFiPkt->u8Size;i++) {
      0001E0 05*02            [12] 1220 	inc	_send_linefi_packet_i_65537_54
      0001E2 D0 07            [24] 1221 	pop	ar7
      0001E4 D0 06            [24] 1222 	pop	ar6
      0001E6 D0 05            [24] 1223 	pop	ar5
      0001E8 80 9F            [24] 1224 	sjmp	00103$
      0001EA                       1225 00105$:
                                   1226 ;	../lib/linefi_packet.c:105: }
      0001EA 22               [24] 1227 	ret
                                   1228 ;------------------------------------------------------------
                                   1229 ;Allocation info for local variables in function 'cp_buf2linefipacket'
                                   1230 ;------------------------------------------------------------
                                   1231 ;apu8RxBuf                 Allocated with name '_cp_buf2linefipacket_PARM_2'
                                   1232 ;apstLineFiPkt             Allocated with name '_cp_buf2linefipacket_PARM_3'
                                   1233 ;au8Size                   Allocated to registers r7 
                                   1234 ;pu8Buf                    Allocated to registers r5 r6 r7 
                                   1235 ;i                         Allocated with name '_cp_buf2linefipacket_i_65538_61'
                                   1236 ;sloc0                     Allocated with name '_cp_buf2linefipacket_sloc0_1_0'
                                   1237 ;------------------------------------------------------------
                                   1238 ;	../lib/linefi_packet.c:107: uint8 cp_buf2linefipacket(uint8 au8Size, uint8 * apu8RxBuf, linefi_packet_t * apstLineFiPkt)
                                   1239 ;	-----------------------------------------
                                   1240 ;	 function cp_buf2linefipacket
                                   1241 ;	-----------------------------------------
      0001EB                       1242 _cp_buf2linefipacket:
      0001EB AF 82            [24] 1243 	mov	r7,dpl
                                   1244 ;	../lib/linefi_packet.c:109: if (au8Size < 5) {
      0001ED BF 05 00         [24] 1245 	cjne	r7,#0x05,00125$
      0001F0                       1246 00125$:
      0001F0 50 04            [24] 1247 	jnc	00102$
                                   1248 ;	../lib/linefi_packet.c:110: return CONV_ERR_TOO_SMALLSIZE;
      0001F2 75 82 03         [24] 1249 	mov	dpl,#0x03
      0001F5 22               [24] 1250 	ret
      0001F6                       1251 00102$:
                                   1252 ;	../lib/linefi_packet.c:113: uint8 * pu8Buf = (uint8 *) apstLineFiPkt;
      0001F6 AD*03            [24] 1253 	mov	r5,_cp_buf2linefipacket_PARM_3
      0001F8 AE*04            [24] 1254 	mov	r6,(_cp_buf2linefipacket_PARM_3 + 1)
      0001FA AF*05            [24] 1255 	mov	r7,(_cp_buf2linefipacket_PARM_3 + 2)
                                   1256 ;	../lib/linefi_packet.c:114: *pu8Buf++ = *apu8RxBuf++;
      0001FC AA*00            [24] 1257 	mov	r2,_cp_buf2linefipacket_PARM_2
      0001FE AB*01            [24] 1258 	mov	r3,(_cp_buf2linefipacket_PARM_2 + 1)
      000200 AC*02            [24] 1259 	mov	r4,(_cp_buf2linefipacket_PARM_2 + 2)
      000202 8A 82            [24] 1260 	mov	dpl,r2
      000204 8B 83            [24] 1261 	mov	dph,r3
      000206 8C F0            [24] 1262 	mov	b,r4
      000208 12r00r00         [24] 1263 	lcall	__gptrget
      00020B F9               [12] 1264 	mov	r1,a
      00020C 74 01            [12] 1265 	mov	a,#0x01
      00020E 2A               [12] 1266 	add	a,r2
      00020F F5*00            [12] 1267 	mov	_cp_buf2linefipacket_PARM_2,a
      000211 E4               [12] 1268 	clr	a
      000212 3B               [12] 1269 	addc	a,r3
      000213 F5*01            [12] 1270 	mov	(_cp_buf2linefipacket_PARM_2 + 1),a
      000215 8C*02            [24] 1271 	mov	(_cp_buf2linefipacket_PARM_2 + 2),r4
      000217 8D 82            [24] 1272 	mov	dpl,r5
      000219 8E 83            [24] 1273 	mov	dph,r6
      00021B 8F F0            [24] 1274 	mov	b,r7
      00021D E9               [12] 1275 	mov	a,r1
      00021E 12r00r00         [24] 1276 	lcall	__gptrput
      000221 0D               [12] 1277 	inc	r5
      000222 BD 00 01         [24] 1278 	cjne	r5,#0x00,00127$
      000225 0E               [12] 1279 	inc	r6
      000226                       1280 00127$:
                                   1281 ;	../lib/linefi_packet.c:115: *pu8Buf++ = *apu8RxBuf++;
      000226 AA*00            [24] 1282 	mov	r2,_cp_buf2linefipacket_PARM_2
      000228 AB*01            [24] 1283 	mov	r3,(_cp_buf2linefipacket_PARM_2 + 1)
      00022A AC*02            [24] 1284 	mov	r4,(_cp_buf2linefipacket_PARM_2 + 2)
      00022C 8A 82            [24] 1285 	mov	dpl,r2
      00022E 8B 83            [24] 1286 	mov	dph,r3
      000230 8C F0            [24] 1287 	mov	b,r4
      000232 12r00r00         [24] 1288 	lcall	__gptrget
      000235 F9               [12] 1289 	mov	r1,a
      000236 74 01            [12] 1290 	mov	a,#0x01
      000238 2A               [12] 1291 	add	a,r2
      000239 F5*00            [12] 1292 	mov	_cp_buf2linefipacket_PARM_2,a
      00023B E4               [12] 1293 	clr	a
      00023C 3B               [12] 1294 	addc	a,r3
      00023D F5*01            [12] 1295 	mov	(_cp_buf2linefipacket_PARM_2 + 1),a
      00023F 8C*02            [24] 1296 	mov	(_cp_buf2linefipacket_PARM_2 + 2),r4
      000241 8D 82            [24] 1297 	mov	dpl,r5
      000243 8E 83            [24] 1298 	mov	dph,r6
      000245 8F F0            [24] 1299 	mov	b,r7
      000247 E9               [12] 1300 	mov	a,r1
      000248 12r00r00         [24] 1301 	lcall	__gptrput
      00024B 0D               [12] 1302 	inc	r5
      00024C BD 00 01         [24] 1303 	cjne	r5,#0x00,00128$
      00024F 0E               [12] 1304 	inc	r6
      000250                       1305 00128$:
                                   1306 ;	../lib/linefi_packet.c:116: *pu8Buf++ = *apu8RxBuf++;
      000250 AA*00            [24] 1307 	mov	r2,_cp_buf2linefipacket_PARM_2
      000252 AB*01            [24] 1308 	mov	r3,(_cp_buf2linefipacket_PARM_2 + 1)
      000254 AC*02            [24] 1309 	mov	r4,(_cp_buf2linefipacket_PARM_2 + 2)
      000256 8A 82            [24] 1310 	mov	dpl,r2
      000258 8B 83            [24] 1311 	mov	dph,r3
      00025A 8C F0            [24] 1312 	mov	b,r4
      00025C 12r00r00         [24] 1313 	lcall	__gptrget
      00025F F9               [12] 1314 	mov	r1,a
      000260 74 01            [12] 1315 	mov	a,#0x01
      000262 2A               [12] 1316 	add	a,r2
      000263 F5*00            [12] 1317 	mov	_cp_buf2linefipacket_PARM_2,a
      000265 E4               [12] 1318 	clr	a
      000266 3B               [12] 1319 	addc	a,r3
      000267 F5*01            [12] 1320 	mov	(_cp_buf2linefipacket_PARM_2 + 1),a
      000269 8C*02            [24] 1321 	mov	(_cp_buf2linefipacket_PARM_2 + 2),r4
      00026B 8D 82            [24] 1322 	mov	dpl,r5
      00026D 8E 83            [24] 1323 	mov	dph,r6
      00026F 8F F0            [24] 1324 	mov	b,r7
      000271 E9               [12] 1325 	mov	a,r1
      000272 12r00r00         [24] 1326 	lcall	__gptrput
      000275 0D               [12] 1327 	inc	r5
      000276 BD 00 01         [24] 1328 	cjne	r5,#0x00,00129$
      000279 0E               [12] 1329 	inc	r6
      00027A                       1330 00129$:
                                   1331 ;	../lib/linefi_packet.c:117: *pu8Buf++ = *apu8RxBuf++;
      00027A AA*00            [24] 1332 	mov	r2,_cp_buf2linefipacket_PARM_2
      00027C AB*01            [24] 1333 	mov	r3,(_cp_buf2linefipacket_PARM_2 + 1)
      00027E AC*02            [24] 1334 	mov	r4,(_cp_buf2linefipacket_PARM_2 + 2)
      000280 8A 82            [24] 1335 	mov	dpl,r2
      000282 8B 83            [24] 1336 	mov	dph,r3
      000284 8C F0            [24] 1337 	mov	b,r4
      000286 12r00r00         [24] 1338 	lcall	__gptrget
      000289 F9               [12] 1339 	mov	r1,a
      00028A 74 01            [12] 1340 	mov	a,#0x01
      00028C 2A               [12] 1341 	add	a,r2
      00028D F5*00            [12] 1342 	mov	_cp_buf2linefipacket_PARM_2,a
      00028F E4               [12] 1343 	clr	a
      000290 3B               [12] 1344 	addc	a,r3
      000291 F5*01            [12] 1345 	mov	(_cp_buf2linefipacket_PARM_2 + 1),a
      000293 8C*02            [24] 1346 	mov	(_cp_buf2linefipacket_PARM_2 + 2),r4
      000295 8D 82            [24] 1347 	mov	dpl,r5
      000297 8E 83            [24] 1348 	mov	dph,r6
      000299 8F F0            [24] 1349 	mov	b,r7
      00029B E9               [12] 1350 	mov	a,r1
      00029C 12r00r00         [24] 1351 	lcall	__gptrput
      00029F 0D               [12] 1352 	inc	r5
      0002A0 BD 00 01         [24] 1353 	cjne	r5,#0x00,00130$
      0002A3 0E               [12] 1354 	inc	r6
      0002A4                       1355 00130$:
                                   1356 ;	../lib/linefi_packet.c:118: *pu8Buf++ = *apu8RxBuf++;
      0002A4 AA*00            [24] 1357 	mov	r2,_cp_buf2linefipacket_PARM_2
      0002A6 AB*01            [24] 1358 	mov	r3,(_cp_buf2linefipacket_PARM_2 + 1)
      0002A8 AC*02            [24] 1359 	mov	r4,(_cp_buf2linefipacket_PARM_2 + 2)
      0002AA 8A 82            [24] 1360 	mov	dpl,r2
      0002AC 8B 83            [24] 1361 	mov	dph,r3
      0002AE 8C F0            [24] 1362 	mov	b,r4
      0002B0 12r00r00         [24] 1363 	lcall	__gptrget
      0002B3 F9               [12] 1364 	mov	r1,a
      0002B4 74 01            [12] 1365 	mov	a,#0x01
      0002B6 2A               [12] 1366 	add	a,r2
      0002B7 F5*00            [12] 1367 	mov	_cp_buf2linefipacket_PARM_2,a
      0002B9 E4               [12] 1368 	clr	a
      0002BA 3B               [12] 1369 	addc	a,r3
      0002BB F5*01            [12] 1370 	mov	(_cp_buf2linefipacket_PARM_2 + 1),a
      0002BD 8C*02            [24] 1371 	mov	(_cp_buf2linefipacket_PARM_2 + 2),r4
      0002BF 8D 82            [24] 1372 	mov	dpl,r5
      0002C1 8E 83            [24] 1373 	mov	dph,r6
      0002C3 8F F0            [24] 1374 	mov	b,r7
      0002C5 E9               [12] 1375 	mov	a,r1
      0002C6 12r00r00         [24] 1376 	lcall	__gptrput
                                   1377 ;	../lib/linefi_packet.c:120: for (i=0;i<apstLineFiPkt->u8Size;i++) {
      0002C9 AD*03            [24] 1378 	mov	r5,_cp_buf2linefipacket_PARM_3
      0002CB AE*04            [24] 1379 	mov	r6,(_cp_buf2linefipacket_PARM_3 + 1)
      0002CD AF*05            [24] 1380 	mov	r7,(_cp_buf2linefipacket_PARM_3 + 2)
      0002CF 74 03            [12] 1381 	mov	a,#0x03
      0002D1 2D               [12] 1382 	add	a,r5
      0002D2 FA               [12] 1383 	mov	r2,a
      0002D3 E4               [12] 1384 	clr	a
      0002D4 3E               [12] 1385 	addc	a,r6
      0002D5 FB               [12] 1386 	mov	r3,a
      0002D6 8F 04            [24] 1387 	mov	ar4,r7
      0002D8 85*00*07         [24] 1388 	mov	_cp_buf2linefipacket_sloc0_1_0,_cp_buf2linefipacket_PARM_2
      0002DB 85*01*08         [24] 1389 	mov	(_cp_buf2linefipacket_sloc0_1_0 + 1),(_cp_buf2linefipacket_PARM_2 + 1)
      0002DE 85*02*09         [24] 1390 	mov	(_cp_buf2linefipacket_sloc0_1_0 + 2),(_cp_buf2linefipacket_PARM_2 + 2)
      0002E1 75*06 00         [24] 1391 	mov	_cp_buf2linefipacket_i_65538_61,#0x00
      0002E4                       1392 00105$:
      0002E4 8A 82            [24] 1393 	mov	dpl,r2
      0002E6 8B 83            [24] 1394 	mov	dph,r3
      0002E8 8C F0            [24] 1395 	mov	b,r4
      0002EA 12r00r00         [24] 1396 	lcall	__gptrget
      0002ED F8               [12] 1397 	mov	r0,a
      0002EE C3               [12] 1398 	clr	c
      0002EF E5*06            [12] 1399 	mov	a,_cp_buf2linefipacket_i_65538_61
      0002F1 98               [12] 1400 	subb	a,r0
      0002F2 50 52            [24] 1401 	jnc	00103$
                                   1402 ;	../lib/linefi_packet.c:121: apstLineFiPkt->pu8Data[i] = *apu8RxBuf++;
      0002F4 C0 02            [24] 1403 	push	ar2
      0002F6 C0 03            [24] 1404 	push	ar3
      0002F8 C0 04            [24] 1405 	push	ar4
      0002FA 74 05            [12] 1406 	mov	a,#0x05
      0002FC 2D               [12] 1407 	add	a,r5
      0002FD F8               [12] 1408 	mov	r0,a
      0002FE E4               [12] 1409 	clr	a
      0002FF 3E               [12] 1410 	addc	a,r6
      000300 F9               [12] 1411 	mov	r1,a
      000301 8F 04            [24] 1412 	mov	ar4,r7
      000303 88 82            [24] 1413 	mov	dpl,r0
      000305 89 83            [24] 1414 	mov	dph,r1
      000307 8C F0            [24] 1415 	mov	b,r4
      000309 12r00r00         [24] 1416 	lcall	__gptrget
      00030C F8               [12] 1417 	mov	r0,a
      00030D A3               [24] 1418 	inc	dptr
      00030E 12r00r00         [24] 1419 	lcall	__gptrget
      000311 F9               [12] 1420 	mov	r1,a
      000312 A3               [24] 1421 	inc	dptr
      000313 12r00r00         [24] 1422 	lcall	__gptrget
      000316 FC               [12] 1423 	mov	r4,a
      000317 E5*06            [12] 1424 	mov	a,_cp_buf2linefipacket_i_65538_61
      000319 28               [12] 1425 	add	a,r0
      00031A F8               [12] 1426 	mov	r0,a
      00031B E4               [12] 1427 	clr	a
      00031C 39               [12] 1428 	addc	a,r1
      00031D F9               [12] 1429 	mov	r1,a
      00031E 85*07 82         [24] 1430 	mov	dpl,_cp_buf2linefipacket_sloc0_1_0
      000321 85*08 83         [24] 1431 	mov	dph,(_cp_buf2linefipacket_sloc0_1_0 + 1)
      000324 85*09 F0         [24] 1432 	mov	b,(_cp_buf2linefipacket_sloc0_1_0 + 2)
      000327 12r00r00         [24] 1433 	lcall	__gptrget
      00032A FB               [12] 1434 	mov	r3,a
      00032B A3               [24] 1435 	inc	dptr
      00032C 85 82*07         [24] 1436 	mov	_cp_buf2linefipacket_sloc0_1_0,dpl
      00032F 85 83*08         [24] 1437 	mov	(_cp_buf2linefipacket_sloc0_1_0 + 1),dph
      000332 88 82            [24] 1438 	mov	dpl,r0
      000334 89 83            [24] 1439 	mov	dph,r1
      000336 8C F0            [24] 1440 	mov	b,r4
      000338 EB               [12] 1441 	mov	a,r3
      000339 12r00r00         [24] 1442 	lcall	__gptrput
                                   1443 ;	../lib/linefi_packet.c:120: for (i=0;i<apstLineFiPkt->u8Size;i++) {
      00033C 05*06            [12] 1444 	inc	_cp_buf2linefipacket_i_65538_61
      00033E D0 04            [24] 1445 	pop	ar4
      000340 D0 03            [24] 1446 	pop	ar3
      000342 D0 02            [24] 1447 	pop	ar2
      000344 80 9E            [24] 1448 	sjmp	00105$
      000346                       1449 00103$:
                                   1450 ;	../lib/linefi_packet.c:127: return CONV_OK;
      000346 75 82 02         [24] 1451 	mov	dpl,#0x02
                                   1452 ;	../lib/linefi_packet.c:128: }
      000349 22               [24] 1453 	ret
                                   1454 ;------------------------------------------------------------
                                   1455 ;Allocation info for local variables in function 'print_linefipacket'
                                   1456 ;------------------------------------------------------------
                                   1457 ;apstLineFiPkt             Allocated to registers r5 r6 r7 
                                   1458 ;i                         Allocated with name '_print_linefipacket_i_65537_66'
                                   1459 ;------------------------------------------------------------
                                   1460 ;	../lib/linefi_packet.c:130: void print_linefipacket(linefi_packet_t * apstLineFiPkt)
                                   1461 ;	-----------------------------------------
                                   1462 ;	 function print_linefipacket
                                   1463 ;	-----------------------------------------
      00034A                       1464 _print_linefipacket:
      00034A AD 82            [24] 1465 	mov	r5,dpl
      00034C AE 83            [24] 1466 	mov	r6,dph
      00034E AF F0            [24] 1467 	mov	r7,b
                                   1468 ;	../lib/linefi_packet.c:132: printf_fast_f("-------------------------------\r\n");
      000350 C0 07            [24] 1469 	push	ar7
      000352 C0 06            [24] 1470 	push	ar6
      000354 C0 05            [24] 1471 	push	ar5
      000356 74r00            [12] 1472 	mov	a,#___str_0
      000358 C0 E0            [24] 1473 	push	acc
      00035A 74s00            [12] 1474 	mov	a,#(___str_0 >> 8)
      00035C C0 E0            [24] 1475 	push	acc
      00035E 12r00r00         [24] 1476 	lcall	_printf_fast_f
      000361 15 81            [12] 1477 	dec	sp
      000363 15 81            [12] 1478 	dec	sp
      000365 D0 05            [24] 1479 	pop	ar5
      000367 D0 06            [24] 1480 	pop	ar6
      000369 D0 07            [24] 1481 	pop	ar7
                                   1482 ;	../lib/linefi_packet.c:133: printf_fast_f("Ver : %d\r\n", apstLineFiPkt->u8Ver);
      00036B 8D 82            [24] 1483 	mov	dpl,r5
      00036D 8E 83            [24] 1484 	mov	dph,r6
      00036F 8F F0            [24] 1485 	mov	b,r7
      000371 12r00r00         [24] 1486 	lcall	__gptrget
      000374 FC               [12] 1487 	mov	r4,a
      000375 7B 00            [12] 1488 	mov	r3,#0x00
      000377 C0 07            [24] 1489 	push	ar7
      000379 C0 06            [24] 1490 	push	ar6
      00037B C0 05            [24] 1491 	push	ar5
      00037D C0 04            [24] 1492 	push	ar4
      00037F C0 03            [24] 1493 	push	ar3
      000381 74r22            [12] 1494 	mov	a,#___str_1
      000383 C0 E0            [24] 1495 	push	acc
      000385 74s00            [12] 1496 	mov	a,#(___str_1 >> 8)
      000387 C0 E0            [24] 1497 	push	acc
      000389 12r00r00         [24] 1498 	lcall	_printf_fast_f
      00038C E5 81            [12] 1499 	mov	a,sp
      00038E 24 FC            [12] 1500 	add	a,#0xfc
      000390 F5 81            [12] 1501 	mov	sp,a
      000392 D0 05            [24] 1502 	pop	ar5
      000394 D0 06            [24] 1503 	pop	ar6
      000396 D0 07            [24] 1504 	pop	ar7
                                   1505 ;	../lib/linefi_packet.c:134: printf_fast_f("Type: %d(%s)\r\n", apstLineFiPkt->u8Type, gpcTypeStr[apstLineFiPkt->u8Type]);
      000398 74 01            [12] 1506 	mov	a,#0x01
      00039A 2D               [12] 1507 	add	a,r5
      00039B FA               [12] 1508 	mov	r2,a
      00039C E4               [12] 1509 	clr	a
      00039D 3E               [12] 1510 	addc	a,r6
      00039E FB               [12] 1511 	mov	r3,a
      00039F 8F 04            [24] 1512 	mov	ar4,r7
      0003A1 8A 82            [24] 1513 	mov	dpl,r2
      0003A3 8B 83            [24] 1514 	mov	dph,r3
      0003A5 8C F0            [24] 1515 	mov	b,r4
      0003A7 12r00r00         [24] 1516 	lcall	__gptrget
      0003AA FA               [12] 1517 	mov	r2,a
      0003AB 75 F0 03         [24] 1518 	mov	b,#0x03
      0003AE A4               [48] 1519 	mul	ab
      0003AF 24r00            [12] 1520 	add	a,#_gpcTypeStr
      0003B1 F5 82            [12] 1521 	mov	dpl,a
      0003B3 74s00            [12] 1522 	mov	a,#(_gpcTypeStr >> 8)
      0003B5 35 F0            [12] 1523 	addc	a,b
      0003B7 F5 83            [12] 1524 	mov	dph,a
      0003B9 E0               [24] 1525 	movx	a,@dptr
      0003BA F9               [12] 1526 	mov	r1,a
      0003BB A3               [24] 1527 	inc	dptr
      0003BC E0               [24] 1528 	movx	a,@dptr
      0003BD FB               [12] 1529 	mov	r3,a
      0003BE A3               [24] 1530 	inc	dptr
      0003BF E0               [24] 1531 	movx	a,@dptr
      0003C0 FC               [12] 1532 	mov	r4,a
      0003C1 8A 00            [24] 1533 	mov	ar0,r2
      0003C3 7A 00            [12] 1534 	mov	r2,#0x00
      0003C5 C0 07            [24] 1535 	push	ar7
      0003C7 C0 06            [24] 1536 	push	ar6
      0003C9 C0 05            [24] 1537 	push	ar5
      0003CB C0 01            [24] 1538 	push	ar1
      0003CD C0 03            [24] 1539 	push	ar3
      0003CF C0 04            [24] 1540 	push	ar4
      0003D1 C0 00            [24] 1541 	push	ar0
      0003D3 C0 02            [24] 1542 	push	ar2
      0003D5 74r2D            [12] 1543 	mov	a,#___str_2
      0003D7 C0 E0            [24] 1544 	push	acc
      0003D9 74s00            [12] 1545 	mov	a,#(___str_2 >> 8)
      0003DB C0 E0            [24] 1546 	push	acc
      0003DD 12r00r00         [24] 1547 	lcall	_printf_fast_f
      0003E0 E5 81            [12] 1548 	mov	a,sp
      0003E2 24 F9            [12] 1549 	add	a,#0xf9
      0003E4 F5 81            [12] 1550 	mov	sp,a
      0003E6 D0 05            [24] 1551 	pop	ar5
      0003E8 D0 06            [24] 1552 	pop	ar6
      0003EA D0 07            [24] 1553 	pop	ar7
                                   1554 ;	../lib/linefi_packet.c:137: printf_fast_f("Addr: %d\r\n", apstLineFiPkt->u8Addr);
      0003EC 74 02            [12] 1555 	mov	a,#0x02
      0003EE 2D               [12] 1556 	add	a,r5
      0003EF FA               [12] 1557 	mov	r2,a
      0003F0 E4               [12] 1558 	clr	a
      0003F1 3E               [12] 1559 	addc	a,r6
      0003F2 FB               [12] 1560 	mov	r3,a
      0003F3 8F 04            [24] 1561 	mov	ar4,r7
      0003F5 8A 82            [24] 1562 	mov	dpl,r2
      0003F7 8B 83            [24] 1563 	mov	dph,r3
      0003F9 8C F0            [24] 1564 	mov	b,r4
      0003FB 12r00r00         [24] 1565 	lcall	__gptrget
      0003FE FA               [12] 1566 	mov	r2,a
      0003FF 7C 00            [12] 1567 	mov	r4,#0x00
      000401 C0 07            [24] 1568 	push	ar7
      000403 C0 06            [24] 1569 	push	ar6
      000405 C0 05            [24] 1570 	push	ar5
      000407 C0 02            [24] 1571 	push	ar2
      000409 C0 04            [24] 1572 	push	ar4
      00040B 74r3C            [12] 1573 	mov	a,#___str_3
      00040D C0 E0            [24] 1574 	push	acc
      00040F 74s00            [12] 1575 	mov	a,#(___str_3 >> 8)
      000411 C0 E0            [24] 1576 	push	acc
      000413 12r00r00         [24] 1577 	lcall	_printf_fast_f
      000416 E5 81            [12] 1578 	mov	a,sp
      000418 24 FC            [12] 1579 	add	a,#0xfc
      00041A F5 81            [12] 1580 	mov	sp,a
      00041C D0 05            [24] 1581 	pop	ar5
      00041E D0 06            [24] 1582 	pop	ar6
      000420 D0 07            [24] 1583 	pop	ar7
                                   1584 ;	../lib/linefi_packet.c:138: printf_fast_f("Size: %d\r\n", apstLineFiPkt->u8Size);
      000422 74 03            [12] 1585 	mov	a,#0x03
      000424 2D               [12] 1586 	add	a,r5
      000425 FA               [12] 1587 	mov	r2,a
      000426 E4               [12] 1588 	clr	a
      000427 3E               [12] 1589 	addc	a,r6
      000428 FB               [12] 1590 	mov	r3,a
      000429 8F 04            [24] 1591 	mov	ar4,r7
      00042B 8A 82            [24] 1592 	mov	dpl,r2
      00042D 8B 83            [24] 1593 	mov	dph,r3
      00042F 8C F0            [24] 1594 	mov	b,r4
      000431 12r00r00         [24] 1595 	lcall	__gptrget
      000434 FA               [12] 1596 	mov	r2,a
      000435 7C 00            [12] 1597 	mov	r4,#0x00
      000437 C0 07            [24] 1598 	push	ar7
      000439 C0 06            [24] 1599 	push	ar6
      00043B C0 05            [24] 1600 	push	ar5
      00043D C0 02            [24] 1601 	push	ar2
      00043F C0 04            [24] 1602 	push	ar4
      000441 74r47            [12] 1603 	mov	a,#___str_4
      000443 C0 E0            [24] 1604 	push	acc
      000445 74s00            [12] 1605 	mov	a,#(___str_4 >> 8)
      000447 C0 E0            [24] 1606 	push	acc
      000449 12r00r00         [24] 1607 	lcall	_printf_fast_f
      00044C E5 81            [12] 1608 	mov	a,sp
      00044E 24 FC            [12] 1609 	add	a,#0xfc
      000450 F5 81            [12] 1610 	mov	sp,a
      000452 D0 05            [24] 1611 	pop	ar5
      000454 D0 06            [24] 1612 	pop	ar6
      000456 D0 07            [24] 1613 	pop	ar7
                                   1614 ;	../lib/linefi_packet.c:139: printf_fast_f("CRC comp : %d %d\r\n", apstLineFiPkt->u8CRC, calc_crc_linefi_packet_packet(apstLineFiPkt));
      000458 8D 82            [24] 1615 	mov	dpl,r5
      00045A 8E 83            [24] 1616 	mov	dph,r6
      00045C 8F F0            [24] 1617 	mov	b,r7
      00045E C0 07            [24] 1618 	push	ar7
      000460 C0 06            [24] 1619 	push	ar6
      000462 C0 05            [24] 1620 	push	ar5
      000464 12r00r1B         [24] 1621 	lcall	_calc_crc_linefi_packet_packet
      000467 AC 82            [24] 1622 	mov	r4,dpl
      000469 D0 05            [24] 1623 	pop	ar5
      00046B D0 06            [24] 1624 	pop	ar6
      00046D D0 07            [24] 1625 	pop	ar7
      00046F 7B 00            [12] 1626 	mov	r3,#0x00
      000471 74 04            [12] 1627 	mov	a,#0x04
      000473 2D               [12] 1628 	add	a,r5
      000474 F8               [12] 1629 	mov	r0,a
      000475 E4               [12] 1630 	clr	a
      000476 3E               [12] 1631 	addc	a,r6
      000477 F9               [12] 1632 	mov	r1,a
      000478 8F 02            [24] 1633 	mov	ar2,r7
      00047A 88 82            [24] 1634 	mov	dpl,r0
      00047C 89 83            [24] 1635 	mov	dph,r1
      00047E 8A F0            [24] 1636 	mov	b,r2
      000480 12r00r00         [24] 1637 	lcall	__gptrget
      000483 F8               [12] 1638 	mov	r0,a
      000484 7A 00            [12] 1639 	mov	r2,#0x00
      000486 C0 07            [24] 1640 	push	ar7
      000488 C0 06            [24] 1641 	push	ar6
      00048A C0 05            [24] 1642 	push	ar5
      00048C C0 04            [24] 1643 	push	ar4
      00048E C0 03            [24] 1644 	push	ar3
      000490 C0 00            [24] 1645 	push	ar0
      000492 C0 02            [24] 1646 	push	ar2
      000494 74r52            [12] 1647 	mov	a,#___str_5
      000496 C0 E0            [24] 1648 	push	acc
      000498 74s00            [12] 1649 	mov	a,#(___str_5 >> 8)
      00049A C0 E0            [24] 1650 	push	acc
      00049C 12r00r00         [24] 1651 	lcall	_printf_fast_f
      00049F E5 81            [12] 1652 	mov	a,sp
      0004A1 24 FA            [12] 1653 	add	a,#0xfa
      0004A3 F5 81            [12] 1654 	mov	sp,a
                                   1655 ;	../lib/linefi_packet.c:140: printf_fast_f("DATA: ");
      0004A5 74r65            [12] 1656 	mov	a,#___str_6
      0004A7 C0 E0            [24] 1657 	push	acc
      0004A9 74s00            [12] 1658 	mov	a,#(___str_6 >> 8)
      0004AB C0 E0            [24] 1659 	push	acc
      0004AD 12r00r00         [24] 1660 	lcall	_printf_fast_f
      0004B0 15 81            [12] 1661 	dec	sp
      0004B2 15 81            [12] 1662 	dec	sp
      0004B4 D0 05            [24] 1663 	pop	ar5
      0004B6 D0 06            [24] 1664 	pop	ar6
      0004B8 D0 07            [24] 1665 	pop	ar7
                                   1666 ;	../lib/linefi_packet.c:142: for (i=0;i<apstLineFiPkt->u8Size;i++) {
      0004BA 74 05            [12] 1667 	mov	a,#0x05
      0004BC 2D               [12] 1668 	add	a,r5
      0004BD FA               [12] 1669 	mov	r2,a
      0004BE E4               [12] 1670 	clr	a
      0004BF 3E               [12] 1671 	addc	a,r6
      0004C0 FB               [12] 1672 	mov	r3,a
      0004C1 8F 04            [24] 1673 	mov	ar4,r7
      0004C3 74 03            [12] 1674 	mov	a,#0x03
      0004C5 2D               [12] 1675 	add	a,r5
      0004C6 FD               [12] 1676 	mov	r5,a
      0004C7 E4               [12] 1677 	clr	a
      0004C8 3E               [12] 1678 	addc	a,r6
      0004C9 FE               [12] 1679 	mov	r6,a
      0004CA 75*03 00         [24] 1680 	mov	_print_linefipacket_i_65537_66,#0x00
      0004CD                       1681 00103$:
      0004CD 8D 82            [24] 1682 	mov	dpl,r5
      0004CF 8E 83            [24] 1683 	mov	dph,r6
      0004D1 8F F0            [24] 1684 	mov	b,r7
      0004D3 12r00r00         [24] 1685 	lcall	__gptrget
      0004D6 F8               [12] 1686 	mov	r0,a
      0004D7 C3               [12] 1687 	clr	c
      0004D8 E5*03            [12] 1688 	mov	a,_print_linefipacket_i_65537_66
      0004DA 98               [12] 1689 	subb	a,r0
      0004DB 50 64            [24] 1690 	jnc	00101$
                                   1691 ;	../lib/linefi_packet.c:143: printf_fast_f("0x%x ", apstLineFiPkt->pu8Data[i]);
      0004DD C0 05            [24] 1692 	push	ar5
      0004DF C0 06            [24] 1693 	push	ar6
      0004E1 C0 07            [24] 1694 	push	ar7
      0004E3 8A 82            [24] 1695 	mov	dpl,r2
      0004E5 8B 83            [24] 1696 	mov	dph,r3
      0004E7 8C F0            [24] 1697 	mov	b,r4
      0004E9 12r00r00         [24] 1698 	lcall	__gptrget
      0004EC F8               [12] 1699 	mov	r0,a
      0004ED A3               [24] 1700 	inc	dptr
      0004EE 12r00r00         [24] 1701 	lcall	__gptrget
      0004F1 F9               [12] 1702 	mov	r1,a
      0004F2 A3               [24] 1703 	inc	dptr
      0004F3 12r00r00         [24] 1704 	lcall	__gptrget
      0004F6 FF               [12] 1705 	mov	r7,a
      0004F7 E5*03            [12] 1706 	mov	a,_print_linefipacket_i_65537_66
      0004F9 28               [12] 1707 	add	a,r0
      0004FA F8               [12] 1708 	mov	r0,a
      0004FB E4               [12] 1709 	clr	a
      0004FC 39               [12] 1710 	addc	a,r1
      0004FD F9               [12] 1711 	mov	r1,a
      0004FE 88 82            [24] 1712 	mov	dpl,r0
      000500 89 83            [24] 1713 	mov	dph,r1
      000502 8F F0            [24] 1714 	mov	b,r7
      000504 12r00r00         [24] 1715 	lcall	__gptrget
      000507 F8               [12] 1716 	mov	r0,a
      000508 7F 00            [12] 1717 	mov	r7,#0x00
      00050A C0 07            [24] 1718 	push	ar7
      00050C C0 06            [24] 1719 	push	ar6
      00050E C0 05            [24] 1720 	push	ar5
      000510 C0 04            [24] 1721 	push	ar4
      000512 C0 03            [24] 1722 	push	ar3
      000514 C0 02            [24] 1723 	push	ar2
      000516 C0 00            [24] 1724 	push	ar0
      000518 C0 07            [24] 1725 	push	ar7
      00051A 74r6C            [12] 1726 	mov	a,#___str_7
      00051C C0 E0            [24] 1727 	push	acc
      00051E 74s00            [12] 1728 	mov	a,#(___str_7 >> 8)
      000520 C0 E0            [24] 1729 	push	acc
      000522 12r00r00         [24] 1730 	lcall	_printf_fast_f
      000525 E5 81            [12] 1731 	mov	a,sp
      000527 24 FC            [12] 1732 	add	a,#0xfc
      000529 F5 81            [12] 1733 	mov	sp,a
      00052B D0 02            [24] 1734 	pop	ar2
      00052D D0 03            [24] 1735 	pop	ar3
      00052F D0 04            [24] 1736 	pop	ar4
      000531 D0 05            [24] 1737 	pop	ar5
      000533 D0 06            [24] 1738 	pop	ar6
      000535 D0 07            [24] 1739 	pop	ar7
                                   1740 ;	../lib/linefi_packet.c:142: for (i=0;i<apstLineFiPkt->u8Size;i++) {
      000537 05*03            [12] 1741 	inc	_print_linefipacket_i_65537_66
      000539 D0 07            [24] 1742 	pop	ar7
      00053B D0 06            [24] 1743 	pop	ar6
      00053D D0 05            [24] 1744 	pop	ar5
      00053F 80 8C            [24] 1745 	sjmp	00103$
      000541                       1746 00101$:
                                   1747 ;	../lib/linefi_packet.c:145: printf_fast_f("\r\n");
      000541 74r72            [12] 1748 	mov	a,#___str_8
      000543 C0 E0            [24] 1749 	push	acc
      000545 74s00            [12] 1750 	mov	a,#(___str_8 >> 8)
      000547 C0 E0            [24] 1751 	push	acc
      000549 12r00r00         [24] 1752 	lcall	_printf_fast_f
      00054C 15 81            [12] 1753 	dec	sp
      00054E 15 81            [12] 1754 	dec	sp
                                   1755 ;	../lib/linefi_packet.c:146: printf_fast_f("-------------------------------\r\n");
      000550 74r00            [12] 1756 	mov	a,#___str_0
      000552 C0 E0            [24] 1757 	push	acc
      000554 74s00            [12] 1758 	mov	a,#(___str_0 >> 8)
      000556 C0 E0            [24] 1759 	push	acc
      000558 12r00r00         [24] 1760 	lcall	_printf_fast_f
      00055B 15 81            [12] 1761 	dec	sp
      00055D 15 81            [12] 1762 	dec	sp
                                   1763 ;	../lib/linefi_packet.c:147: }
      00055F 22               [24] 1764 	ret
                                   1765 ;------------------------------------------------------------
                                   1766 ;Allocation info for local variables in function 'crc8'
                                   1767 ;------------------------------------------------------------
                                   1768 ;num_bytes                 Allocated with name '_crc8_PARM_2'
                                   1769 ;au8CRC                    Allocated with name '_crc8_PARM_3'
                                   1770 ;input_str                 Allocated to registers r5 r6 r7 
                                   1771 ;a                         Allocated to registers r3 
                                   1772 ;crc                       Allocated to registers r4 
                                   1773 ;ptr                       Allocated to registers r5 r6 r7 
                                   1774 ;------------------------------------------------------------
                                   1775 ;	../lib/linefi_packet.c:168: uint8 crc8( uint8 *input_str, uint8 num_bytes, uint8 au8CRC) 
                                   1776 ;	-----------------------------------------
                                   1777 ;	 function crc8
                                   1778 ;	-----------------------------------------
      000560                       1779 _crc8:
      000560 AD 82            [24] 1780 	mov	r5,dpl
      000562 AE 83            [24] 1781 	mov	r6,dph
      000564 AF F0            [24] 1782 	mov	r7,b
                                   1783 ;	../lib/linefi_packet.c:174: crc = au8CRC;
      000566 AC*01            [24] 1784 	mov	r4,_crc8_PARM_3
                                   1785 ;	../lib/linefi_packet.c:177: if ( ptr != NULL )
      000568 ED               [12] 1786 	mov	a,r5
      000569 4E               [12] 1787 	orl	a,r6
      00056A 60 21            [24] 1788 	jz	00103$
                                   1789 ;	../lib/linefi_packet.c:178: for (a=0; a<num_bytes; a++) {
      00056C 7B 00            [12] 1790 	mov	r3,#0x00
      00056E                       1791 00105$:
      00056E C3               [12] 1792 	clr	c
      00056F EB               [12] 1793 	mov	a,r3
      000570 95*00            [12] 1794 	subb	a,_crc8_PARM_2
      000572 50 19            [24] 1795 	jnc	00103$
                                   1796 ;	../lib/linefi_packet.c:180: crc = sht75_crc_table[(*ptr++) ^ crc];
      000574 8D 82            [24] 1797 	mov	dpl,r5
      000576 8E 83            [24] 1798 	mov	dph,r6
      000578 8F F0            [24] 1799 	mov	b,r7
      00057A 12r00r00         [24] 1800 	lcall	__gptrget
      00057D FA               [12] 1801 	mov	r2,a
      00057E A3               [24] 1802 	inc	dptr
      00057F AD 82            [24] 1803 	mov	r5,dpl
      000581 AE 83            [24] 1804 	mov	r6,dph
      000583 EC               [12] 1805 	mov	a,r4
      000584 6A               [12] 1806 	xrl	a,r2
      000585 90r06rA2         [24] 1807 	mov	dptr,#_sht75_crc_table
      000588 93               [24] 1808 	movc	a,@a+dptr
      000589 FC               [12] 1809 	mov	r4,a
                                   1810 ;	../lib/linefi_packet.c:178: for (a=0; a<num_bytes; a++) {
      00058A 0B               [12] 1811 	inc	r3
      00058B 80 E1            [24] 1812 	sjmp	00105$
      00058D                       1813 00103$:
                                   1814 ;	../lib/linefi_packet.c:183: return crc;
      00058D 8C 82            [24] 1815 	mov	dpl,r4
                                   1816 ;	../lib/linefi_packet.c:184: }  /* crc_8 */
      00058F 22               [24] 1817 	ret
                                   1818 ;------------------------------------------------------------
                                   1819 ;Allocation info for local variables in function 'print_raw_packet'
                                   1820 ;------------------------------------------------------------
                                   1821 ;apu8Data                  Allocated with name '_print_raw_packet_PARM_2'
                                   1822 ;au8Size                   Allocated to registers r7 
                                   1823 ;i                         Allocated to registers r6 
                                   1824 ;------------------------------------------------------------
                                   1825 ;	../lib/linefi_packet.c:186: void print_raw_packet(uint8 au8Size, uint8 * apu8Data)
                                   1826 ;	-----------------------------------------
                                   1827 ;	 function print_raw_packet
                                   1828 ;	-----------------------------------------
      000590                       1829 _print_raw_packet:
      000590 AF 82            [24] 1830 	mov	r7,dpl
                                   1831 ;	../lib/linefi_packet.c:190: printf_fast_f("#%d\r\n", apu8Data[0]);
      000592 AC*04            [24] 1832 	mov	r4,_print_raw_packet_PARM_2
      000594 AD*05            [24] 1833 	mov	r5,(_print_raw_packet_PARM_2 + 1)
      000596 AE*06            [24] 1834 	mov	r6,(_print_raw_packet_PARM_2 + 2)
      000598 8C 82            [24] 1835 	mov	dpl,r4
      00059A 8D 83            [24] 1836 	mov	dph,r5
      00059C 8E F0            [24] 1837 	mov	b,r6
      00059E 12r00r00         [24] 1838 	lcall	__gptrget
      0005A1 FC               [12] 1839 	mov	r4,a
      0005A2 7E 00            [12] 1840 	mov	r6,#0x00
      0005A4 C0 07            [24] 1841 	push	ar7
      0005A6 C0 04            [24] 1842 	push	ar4
      0005A8 C0 06            [24] 1843 	push	ar6
      0005AA 74r75            [12] 1844 	mov	a,#___str_9
      0005AC C0 E0            [24] 1845 	push	acc
      0005AE 74s00            [12] 1846 	mov	a,#(___str_9 >> 8)
      0005B0 C0 E0            [24] 1847 	push	acc
      0005B2 12r00r00         [24] 1848 	lcall	_printf_fast_f
      0005B5 E5 81            [12] 1849 	mov	a,sp
      0005B7 24 FC            [12] 1850 	add	a,#0xfc
      0005B9 F5 81            [12] 1851 	mov	sp,a
                                   1852 ;	../lib/linefi_packet.c:191: printf_fast_f("raw :  ");
      0005BB 74r7B            [12] 1853 	mov	a,#___str_10
      0005BD C0 E0            [24] 1854 	push	acc
      0005BF 74s00            [12] 1855 	mov	a,#(___str_10 >> 8)
      0005C1 C0 E0            [24] 1856 	push	acc
      0005C3 12r00r00         [24] 1857 	lcall	_printf_fast_f
      0005C6 15 81            [12] 1858 	dec	sp
      0005C8 15 81            [12] 1859 	dec	sp
      0005CA D0 07            [24] 1860 	pop	ar7
                                   1861 ;	../lib/linefi_packet.c:192: for (i=0;i<au8Size;i++) {
      0005CC 7E 00            [12] 1862 	mov	r6,#0x00
      0005CE                       1863 00107$:
      0005CE C3               [12] 1864 	clr	c
      0005CF EE               [12] 1865 	mov	a,r6
      0005D0 9F               [12] 1866 	subb	a,r7
      0005D1 50 24            [24] 1867 	jnc	00101$
                                   1868 ;	../lib/linefi_packet.c:193: printf_fast_f("%2d   ", i);
      0005D3 8E 04            [24] 1869 	mov	ar4,r6
      0005D5 7D 00            [12] 1870 	mov	r5,#0x00
      0005D7 C0 07            [24] 1871 	push	ar7
      0005D9 C0 06            [24] 1872 	push	ar6
      0005DB C0 04            [24] 1873 	push	ar4
      0005DD C0 05            [24] 1874 	push	ar5
      0005DF 74r83            [12] 1875 	mov	a,#___str_11
      0005E1 C0 E0            [24] 1876 	push	acc
      0005E3 74s00            [12] 1877 	mov	a,#(___str_11 >> 8)
      0005E5 C0 E0            [24] 1878 	push	acc
      0005E7 12r00r00         [24] 1879 	lcall	_printf_fast_f
      0005EA E5 81            [12] 1880 	mov	a,sp
      0005EC 24 FC            [12] 1881 	add	a,#0xfc
      0005EE F5 81            [12] 1882 	mov	sp,a
      0005F0 D0 06            [24] 1883 	pop	ar6
      0005F2 D0 07            [24] 1884 	pop	ar7
                                   1885 ;	../lib/linefi_packet.c:192: for (i=0;i<au8Size;i++) {
      0005F4 0E               [12] 1886 	inc	r6
      0005F5 80 D7            [24] 1887 	sjmp	00107$
      0005F7                       1888 00101$:
                                   1889 ;	../lib/linefi_packet.c:195: printf_fast_f("\r\n");
      0005F7 C0 07            [24] 1890 	push	ar7
      0005F9 74r72            [12] 1891 	mov	a,#___str_8
      0005FB C0 E0            [24] 1892 	push	acc
      0005FD 74s00            [12] 1893 	mov	a,#(___str_8 >> 8)
      0005FF C0 E0            [24] 1894 	push	acc
      000601 12r00r00         [24] 1895 	lcall	_printf_fast_f
      000604 15 81            [12] 1896 	dec	sp
      000606 15 81            [12] 1897 	dec	sp
                                   1898 ;	../lib/linefi_packet.c:196: printf_fast_f("data:");
      000608 74r8A            [12] 1899 	mov	a,#___str_12
      00060A C0 E0            [24] 1900 	push	acc
      00060C 74s00            [12] 1901 	mov	a,#(___str_12 >> 8)
      00060E C0 E0            [24] 1902 	push	acc
      000610 12r00r00         [24] 1903 	lcall	_printf_fast_f
      000613 15 81            [12] 1904 	dec	sp
      000615 15 81            [12] 1905 	dec	sp
      000617 D0 07            [24] 1906 	pop	ar7
                                   1907 ;	../lib/linefi_packet.c:197: for (i=0;i<au8Size;i++) {
      000619 7E 00            [12] 1908 	mov	r6,#0x00
      00061B                       1909 00110$:
      00061B C3               [12] 1910 	clr	c
      00061C EE               [12] 1911 	mov	a,r6
      00061D 9F               [12] 1912 	subb	a,r7
      00061E 50 72            [24] 1913 	jnc	00105$
                                   1914 ;	../lib/linefi_packet.c:198: if (*apu8Data < 0x10) {
      000620 AB*04            [24] 1915 	mov	r3,_print_raw_packet_PARM_2
      000622 AC*05            [24] 1916 	mov	r4,(_print_raw_packet_PARM_2 + 1)
      000624 AD*06            [24] 1917 	mov	r5,(_print_raw_packet_PARM_2 + 2)
      000626 8B 82            [24] 1918 	mov	dpl,r3
      000628 8C 83            [24] 1919 	mov	dph,r4
      00062A 8D F0            [24] 1920 	mov	b,r5
      00062C 12r00r00         [24] 1921 	lcall	__gptrget
      00062F FA               [12] 1922 	mov	r2,a
      000630 BA 10 00         [24] 1923 	cjne	r2,#0x10,00138$
      000633                       1924 00138$:
      000633 50 30            [24] 1925 	jnc	00103$
                                   1926 ;	../lib/linefi_packet.c:199: printf_fast_f("0x0%x ", *apu8Data++);
      000635 8A 01            [24] 1927 	mov	ar1,r2
      000637 74 01            [12] 1928 	mov	a,#0x01
      000639 2B               [12] 1929 	add	a,r3
      00063A F5*04            [12] 1930 	mov	_print_raw_packet_PARM_2,a
      00063C E4               [12] 1931 	clr	a
      00063D 3C               [12] 1932 	addc	a,r4
      00063E F5*05            [12] 1933 	mov	(_print_raw_packet_PARM_2 + 1),a
      000640 8D*06            [24] 1934 	mov	(_print_raw_packet_PARM_2 + 2),r5
      000642 89 00            [24] 1935 	mov	ar0,r1
      000644 79 00            [12] 1936 	mov	r1,#0x00
      000646 C0 07            [24] 1937 	push	ar7
      000648 C0 06            [24] 1938 	push	ar6
      00064A C0 00            [24] 1939 	push	ar0
      00064C C0 01            [24] 1940 	push	ar1
      00064E 74r90            [12] 1941 	mov	a,#___str_13
      000650 C0 E0            [24] 1942 	push	acc
      000652 74s00            [12] 1943 	mov	a,#(___str_13 >> 8)
      000654 C0 E0            [24] 1944 	push	acc
      000656 12r00r00         [24] 1945 	lcall	_printf_fast_f
      000659 E5 81            [12] 1946 	mov	a,sp
      00065B 24 FC            [12] 1947 	add	a,#0xfc
      00065D F5 81            [12] 1948 	mov	sp,a
      00065F D0 06            [24] 1949 	pop	ar6
      000661 D0 07            [24] 1950 	pop	ar7
      000663 80 2A            [24] 1951 	sjmp	00111$
      000665                       1952 00103$:
                                   1953 ;	../lib/linefi_packet.c:202: printf_fast_f("0x%x ", *apu8Data++);
      000665 74 01            [12] 1954 	mov	a,#0x01
      000667 2B               [12] 1955 	add	a,r3
      000668 F5*04            [12] 1956 	mov	_print_raw_packet_PARM_2,a
      00066A E4               [12] 1957 	clr	a
      00066B 3C               [12] 1958 	addc	a,r4
      00066C F5*05            [12] 1959 	mov	(_print_raw_packet_PARM_2 + 1),a
      00066E 8D*06            [24] 1960 	mov	(_print_raw_packet_PARM_2 + 2),r5
      000670 7D 00            [12] 1961 	mov	r5,#0x00
      000672 C0 07            [24] 1962 	push	ar7
      000674 C0 06            [24] 1963 	push	ar6
      000676 C0 02            [24] 1964 	push	ar2
      000678 C0 05            [24] 1965 	push	ar5
      00067A 74r6C            [12] 1966 	mov	a,#___str_7
      00067C C0 E0            [24] 1967 	push	acc
      00067E 74s00            [12] 1968 	mov	a,#(___str_7 >> 8)
      000680 C0 E0            [24] 1969 	push	acc
      000682 12r00r00         [24] 1970 	lcall	_printf_fast_f
      000685 E5 81            [12] 1971 	mov	a,sp
      000687 24 FC            [12] 1972 	add	a,#0xfc
      000689 F5 81            [12] 1973 	mov	sp,a
      00068B D0 06            [24] 1974 	pop	ar6
      00068D D0 07            [24] 1975 	pop	ar7
      00068F                       1976 00111$:
                                   1977 ;	../lib/linefi_packet.c:197: for (i=0;i<au8Size;i++) {
      00068F 0E               [12] 1978 	inc	r6
      000690 80 89            [24] 1979 	sjmp	00110$
      000692                       1980 00105$:
                                   1981 ;	../lib/linefi_packet.c:205: printf_fast_f("\r\n");
      000692 74r72            [12] 1982 	mov	a,#___str_8
      000694 C0 E0            [24] 1983 	push	acc
      000696 74s00            [12] 1984 	mov	a,#(___str_8 >> 8)
      000698 C0 E0            [24] 1985 	push	acc
      00069A 12r00r00         [24] 1986 	lcall	_printf_fast_f
      00069D 15 81            [12] 1987 	dec	sp
      00069F 15 81            [12] 1988 	dec	sp
                                   1989 ;	../lib/linefi_packet.c:206: }
      0006A1 22               [24] 1990 	ret
                                   1991 	.area CSEG    (CODE)
                                   1992 	.area CONST   (CODE)
                                   1993 	.area CONST   (CODE)
      000000                       1994 ___str_0:
      000000 2D 2D 2D 2D 2D 2D 2D  1995 	.ascii "-------------------------------"
             2D 2D 2D 2D 2D 2D 2D
             2D 2D 2D 2D 2D 2D 2D
             2D 2D 2D 2D 2D 2D 2D
             2D 2D 2D
      00001F 0D                    1996 	.db 0x0d
      000020 0A                    1997 	.db 0x0a
      000021 00                    1998 	.db 0x00
                                   1999 	.area CSEG    (CODE)
                                   2000 	.area CONST   (CODE)
      000022                       2001 ___str_1:
      000022 56 65 72 20 3A 20 25  2002 	.ascii "Ver : %d"
             64
      00002A 0D                    2003 	.db 0x0d
      00002B 0A                    2004 	.db 0x0a
      00002C 00                    2005 	.db 0x00
                                   2006 	.area CSEG    (CODE)
                                   2007 	.area CONST   (CODE)
      00002D                       2008 ___str_2:
      00002D 54 79 70 65 3A 20 25  2009 	.ascii "Type: %d(%s)"
             64 28 25 73 29
      000039 0D                    2010 	.db 0x0d
      00003A 0A                    2011 	.db 0x0a
      00003B 00                    2012 	.db 0x00
                                   2013 	.area CSEG    (CODE)
                                   2014 	.area CONST   (CODE)
      00003C                       2015 ___str_3:
      00003C 41 64 64 72 3A 20 25  2016 	.ascii "Addr: %d"
             64
      000044 0D                    2017 	.db 0x0d
      000045 0A                    2018 	.db 0x0a
      000046 00                    2019 	.db 0x00
                                   2020 	.area CSEG    (CODE)
                                   2021 	.area CONST   (CODE)
      000047                       2022 ___str_4:
      000047 53 69 7A 65 3A 20 25  2023 	.ascii "Size: %d"
             64
      00004F 0D                    2024 	.db 0x0d
      000050 0A                    2025 	.db 0x0a
      000051 00                    2026 	.db 0x00
                                   2027 	.area CSEG    (CODE)
                                   2028 	.area CONST   (CODE)
      000052                       2029 ___str_5:
      000052 43 52 43 20 63 6F 6D  2030 	.ascii "CRC comp : %d %d"
             70 20 3A 20 25 64 20
             25 64
      000062 0D                    2031 	.db 0x0d
      000063 0A                    2032 	.db 0x0a
      000064 00                    2033 	.db 0x00
                                   2034 	.area CSEG    (CODE)
                                   2035 	.area CONST   (CODE)
      000065                       2036 ___str_6:
      000065 44 41 54 41 3A 20     2037 	.ascii "DATA: "
      00006B 00                    2038 	.db 0x00
                                   2039 	.area CSEG    (CODE)
                                   2040 	.area CONST   (CODE)
      00006C                       2041 ___str_7:
      00006C 30 78 25 78 20        2042 	.ascii "0x%x "
      000071 00                    2043 	.db 0x00
                                   2044 	.area CSEG    (CODE)
                                   2045 	.area CONST   (CODE)
      000072                       2046 ___str_8:
      000072 0D                    2047 	.db 0x0d
      000073 0A                    2048 	.db 0x0a
      000074 00                    2049 	.db 0x00
                                   2050 	.area CSEG    (CODE)
      0006A2                       2051 _sht75_crc_table:
      0006A2 00                    2052 	.db #0x00	; 0
      0006A3 31                    2053 	.db #0x31	; 49	'1'
      0006A4 62                    2054 	.db #0x62	; 98	'b'
      0006A5 53                    2055 	.db #0x53	; 83	'S'
      0006A6 C4                    2056 	.db #0xc4	; 196
      0006A7 F5                    2057 	.db #0xf5	; 245
      0006A8 A6                    2058 	.db #0xa6	; 166
      0006A9 97                    2059 	.db #0x97	; 151
      0006AA B9                    2060 	.db #0xb9	; 185
      0006AB 88                    2061 	.db #0x88	; 136
      0006AC DB                    2062 	.db #0xdb	; 219
      0006AD EA                    2063 	.db #0xea	; 234
      0006AE 7D                    2064 	.db #0x7d	; 125
      0006AF 4C                    2065 	.db #0x4c	; 76	'L'
      0006B0 1F                    2066 	.db #0x1f	; 31
      0006B1 2E                    2067 	.db #0x2e	; 46
      0006B2 43                    2068 	.db #0x43	; 67	'C'
      0006B3 72                    2069 	.db #0x72	; 114	'r'
      0006B4 21                    2070 	.db #0x21	; 33
      0006B5 10                    2071 	.db #0x10	; 16
      0006B6 87                    2072 	.db #0x87	; 135
      0006B7 B6                    2073 	.db #0xb6	; 182
      0006B8 E5                    2074 	.db #0xe5	; 229
      0006B9 D4                    2075 	.db #0xd4	; 212
      0006BA FA                    2076 	.db #0xfa	; 250
      0006BB CB                    2077 	.db #0xcb	; 203
      0006BC 98                    2078 	.db #0x98	; 152
      0006BD A9                    2079 	.db #0xa9	; 169
      0006BE 3E                    2080 	.db #0x3e	; 62
      0006BF 0F                    2081 	.db #0x0f	; 15
      0006C0 5C                    2082 	.db #0x5c	; 92
      0006C1 6D                    2083 	.db #0x6d	; 109	'm'
      0006C2 86                    2084 	.db #0x86	; 134
      0006C3 B7                    2085 	.db #0xb7	; 183
      0006C4 E4                    2086 	.db #0xe4	; 228
      0006C5 D5                    2087 	.db #0xd5	; 213
      0006C6 42                    2088 	.db #0x42	; 66	'B'
      0006C7 73                    2089 	.db #0x73	; 115	's'
      0006C8 20                    2090 	.db #0x20	; 32
      0006C9 11                    2091 	.db #0x11	; 17
      0006CA 3F                    2092 	.db #0x3f	; 63
      0006CB 0E                    2093 	.db #0x0e	; 14
      0006CC 5D                    2094 	.db #0x5d	; 93
      0006CD 6C                    2095 	.db #0x6c	; 108	'l'
      0006CE FB                    2096 	.db #0xfb	; 251
      0006CF CA                    2097 	.db #0xca	; 202
      0006D0 99                    2098 	.db #0x99	; 153
      0006D1 A8                    2099 	.db #0xa8	; 168
      0006D2 C5                    2100 	.db #0xc5	; 197
      0006D3 F4                    2101 	.db #0xf4	; 244
      0006D4 A7                    2102 	.db #0xa7	; 167
      0006D5 96                    2103 	.db #0x96	; 150
      0006D6 01                    2104 	.db #0x01	; 1
      0006D7 30                    2105 	.db #0x30	; 48	'0'
      0006D8 63                    2106 	.db #0x63	; 99	'c'
      0006D9 52                    2107 	.db #0x52	; 82	'R'
      0006DA 7C                    2108 	.db #0x7c	; 124
      0006DB 4D                    2109 	.db #0x4d	; 77	'M'
      0006DC 1E                    2110 	.db #0x1e	; 30
      0006DD 2F                    2111 	.db #0x2f	; 47
      0006DE B8                    2112 	.db #0xb8	; 184
      0006DF 89                    2113 	.db #0x89	; 137
      0006E0 DA                    2114 	.db #0xda	; 218
      0006E1 EB                    2115 	.db #0xeb	; 235
      0006E2 3D                    2116 	.db #0x3d	; 61
      0006E3 0C                    2117 	.db #0x0c	; 12
      0006E4 5F                    2118 	.db #0x5f	; 95
      0006E5 6E                    2119 	.db #0x6e	; 110	'n'
      0006E6 F9                    2120 	.db #0xf9	; 249
      0006E7 C8                    2121 	.db #0xc8	; 200
      0006E8 9B                    2122 	.db #0x9b	; 155
      0006E9 AA                    2123 	.db #0xaa	; 170
      0006EA 84                    2124 	.db #0x84	; 132
      0006EB B5                    2125 	.db #0xb5	; 181
      0006EC E6                    2126 	.db #0xe6	; 230
      0006ED D7                    2127 	.db #0xd7	; 215
      0006EE 40                    2128 	.db #0x40	; 64
      0006EF 71                    2129 	.db #0x71	; 113	'q'
      0006F0 22                    2130 	.db #0x22	; 34
      0006F1 13                    2131 	.db #0x13	; 19
      0006F2 7E                    2132 	.db #0x7e	; 126
      0006F3 4F                    2133 	.db #0x4f	; 79	'O'
      0006F4 1C                    2134 	.db #0x1c	; 28
      0006F5 2D                    2135 	.db #0x2d	; 45
      0006F6 BA                    2136 	.db #0xba	; 186
      0006F7 8B                    2137 	.db #0x8b	; 139
      0006F8 D8                    2138 	.db #0xd8	; 216
      0006F9 E9                    2139 	.db #0xe9	; 233
      0006FA C7                    2140 	.db #0xc7	; 199
      0006FB F6                    2141 	.db #0xf6	; 246
      0006FC A5                    2142 	.db #0xa5	; 165
      0006FD 94                    2143 	.db #0x94	; 148
      0006FE 03                    2144 	.db #0x03	; 3
      0006FF 32                    2145 	.db #0x32	; 50	'2'
      000700 61                    2146 	.db #0x61	; 97	'a'
      000701 50                    2147 	.db #0x50	; 80	'P'
      000702 BB                    2148 	.db #0xbb	; 187
      000703 8A                    2149 	.db #0x8a	; 138
      000704 D9                    2150 	.db #0xd9	; 217
      000705 E8                    2151 	.db #0xe8	; 232
      000706 7F                    2152 	.db #0x7f	; 127
      000707 4E                    2153 	.db #0x4e	; 78	'N'
      000708 1D                    2154 	.db #0x1d	; 29
      000709 2C                    2155 	.db #0x2c	; 44
      00070A 02                    2156 	.db #0x02	; 2
      00070B 33                    2157 	.db #0x33	; 51	'3'
      00070C 60                    2158 	.db #0x60	; 96
      00070D 51                    2159 	.db #0x51	; 81	'Q'
      00070E C6                    2160 	.db #0xc6	; 198
      00070F F7                    2161 	.db #0xf7	; 247
      000710 A4                    2162 	.db #0xa4	; 164
      000711 95                    2163 	.db #0x95	; 149
      000712 F8                    2164 	.db #0xf8	; 248
      000713 C9                    2165 	.db #0xc9	; 201
      000714 9A                    2166 	.db #0x9a	; 154
      000715 AB                    2167 	.db #0xab	; 171
      000716 3C                    2168 	.db #0x3c	; 60
      000717 0D                    2169 	.db #0x0d	; 13
      000718 5E                    2170 	.db #0x5e	; 94
      000719 6F                    2171 	.db #0x6f	; 111	'o'
      00071A 41                    2172 	.db #0x41	; 65	'A'
      00071B 70                    2173 	.db #0x70	; 112	'p'
      00071C 23                    2174 	.db #0x23	; 35
      00071D 12                    2175 	.db #0x12	; 18
      00071E 85                    2176 	.db #0x85	; 133
      00071F B4                    2177 	.db #0xb4	; 180
      000720 E7                    2178 	.db #0xe7	; 231
      000721 D6                    2179 	.db #0xd6	; 214
      000722 7A                    2180 	.db #0x7a	; 122	'z'
      000723 4B                    2181 	.db #0x4b	; 75	'K'
      000724 18                    2182 	.db #0x18	; 24
      000725 29                    2183 	.db #0x29	; 41
      000726 BE                    2184 	.db #0xbe	; 190
      000727 8F                    2185 	.db #0x8f	; 143
      000728 DC                    2186 	.db #0xdc	; 220
      000729 ED                    2187 	.db #0xed	; 237
      00072A C3                    2188 	.db #0xc3	; 195
      00072B F2                    2189 	.db #0xf2	; 242
      00072C A1                    2190 	.db #0xa1	; 161
      00072D 90                    2191 	.db #0x90	; 144
      00072E 07                    2192 	.db #0x07	; 7
      00072F 36                    2193 	.db #0x36	; 54	'6'
      000730 65                    2194 	.db #0x65	; 101	'e'
      000731 54                    2195 	.db #0x54	; 84	'T'
      000732 39                    2196 	.db #0x39	; 57	'9'
      000733 08                    2197 	.db #0x08	; 8
      000734 5B                    2198 	.db #0x5b	; 91
      000735 6A                    2199 	.db #0x6a	; 106	'j'
      000736 FD                    2200 	.db #0xfd	; 253
      000737 CC                    2201 	.db #0xcc	; 204
      000738 9F                    2202 	.db #0x9f	; 159
      000739 AE                    2203 	.db #0xae	; 174
      00073A 80                    2204 	.db #0x80	; 128
      00073B B1                    2205 	.db #0xb1	; 177
      00073C E2                    2206 	.db #0xe2	; 226
      00073D D3                    2207 	.db #0xd3	; 211
      00073E 44                    2208 	.db #0x44	; 68	'D'
      00073F 75                    2209 	.db #0x75	; 117	'u'
      000740 26                    2210 	.db #0x26	; 38
      000741 17                    2211 	.db #0x17	; 23
      000742 FC                    2212 	.db #0xfc	; 252
      000743 CD                    2213 	.db #0xcd	; 205
      000744 9E                    2214 	.db #0x9e	; 158
      000745 AF                    2215 	.db #0xaf	; 175
      000746 38                    2216 	.db #0x38	; 56	'8'
      000747 09                    2217 	.db #0x09	; 9
      000748 5A                    2218 	.db #0x5a	; 90	'Z'
      000749 6B                    2219 	.db #0x6b	; 107	'k'
      00074A 45                    2220 	.db #0x45	; 69	'E'
      00074B 74                    2221 	.db #0x74	; 116	't'
      00074C 27                    2222 	.db #0x27	; 39
      00074D 16                    2223 	.db #0x16	; 22
      00074E 81                    2224 	.db #0x81	; 129
      00074F B0                    2225 	.db #0xb0	; 176
      000750 E3                    2226 	.db #0xe3	; 227
      000751 D2                    2227 	.db #0xd2	; 210
      000752 BF                    2228 	.db #0xbf	; 191
      000753 8E                    2229 	.db #0x8e	; 142
      000754 DD                    2230 	.db #0xdd	; 221
      000755 EC                    2231 	.db #0xec	; 236
      000756 7B                    2232 	.db #0x7b	; 123
      000757 4A                    2233 	.db #0x4a	; 74	'J'
      000758 19                    2234 	.db #0x19	; 25
      000759 28                    2235 	.db #0x28	; 40
      00075A 06                    2236 	.db #0x06	; 6
      00075B 37                    2237 	.db #0x37	; 55	'7'
      00075C 64                    2238 	.db #0x64	; 100	'd'
      00075D 55                    2239 	.db #0x55	; 85	'U'
      00075E C2                    2240 	.db #0xc2	; 194
      00075F F3                    2241 	.db #0xf3	; 243
      000760 A0                    2242 	.db #0xa0	; 160
      000761 91                    2243 	.db #0x91	; 145
      000762 47                    2244 	.db #0x47	; 71	'G'
      000763 76                    2245 	.db #0x76	; 118	'v'
      000764 25                    2246 	.db #0x25	; 37
      000765 14                    2247 	.db #0x14	; 20
      000766 83                    2248 	.db #0x83	; 131
      000767 B2                    2249 	.db #0xb2	; 178
      000768 E1                    2250 	.db #0xe1	; 225
      000769 D0                    2251 	.db #0xd0	; 208
      00076A FE                    2252 	.db #0xfe	; 254
      00076B CF                    2253 	.db #0xcf	; 207
      00076C 9C                    2254 	.db #0x9c	; 156
      00076D AD                    2255 	.db #0xad	; 173
      00076E 3A                    2256 	.db #0x3a	; 58
      00076F 0B                    2257 	.db #0x0b	; 11
      000770 58                    2258 	.db #0x58	; 88	'X'
      000771 69                    2259 	.db #0x69	; 105	'i'
      000772 04                    2260 	.db #0x04	; 4
      000773 35                    2261 	.db #0x35	; 53	'5'
      000774 66                    2262 	.db #0x66	; 102	'f'
      000775 57                    2263 	.db #0x57	; 87	'W'
      000776 C0                    2264 	.db #0xc0	; 192
      000777 F1                    2265 	.db #0xf1	; 241
      000778 A2                    2266 	.db #0xa2	; 162
      000779 93                    2267 	.db #0x93	; 147
      00077A BD                    2268 	.db #0xbd	; 189
      00077B 8C                    2269 	.db #0x8c	; 140
      00077C DF                    2270 	.db #0xdf	; 223
      00077D EE                    2271 	.db #0xee	; 238
      00077E 79                    2272 	.db #0x79	; 121	'y'
      00077F 48                    2273 	.db #0x48	; 72	'H'
      000780 1B                    2274 	.db #0x1b	; 27
      000781 2A                    2275 	.db #0x2a	; 42
      000782 C1                    2276 	.db #0xc1	; 193
      000783 F0                    2277 	.db #0xf0	; 240
      000784 A3                    2278 	.db #0xa3	; 163
      000785 92                    2279 	.db #0x92	; 146
      000786 05                    2280 	.db #0x05	; 5
      000787 34                    2281 	.db #0x34	; 52	'4'
      000788 67                    2282 	.db #0x67	; 103	'g'
      000789 56                    2283 	.db #0x56	; 86	'V'
      00078A 78                    2284 	.db #0x78	; 120	'x'
      00078B 49                    2285 	.db #0x49	; 73	'I'
      00078C 1A                    2286 	.db #0x1a	; 26
      00078D 2B                    2287 	.db #0x2b	; 43
      00078E BC                    2288 	.db #0xbc	; 188
      00078F 8D                    2289 	.db #0x8d	; 141
      000790 DE                    2290 	.db #0xde	; 222
      000791 EF                    2291 	.db #0xef	; 239
      000792 82                    2292 	.db #0x82	; 130
      000793 B3                    2293 	.db #0xb3	; 179
      000794 E0                    2294 	.db #0xe0	; 224
      000795 D1                    2295 	.db #0xd1	; 209
      000796 46                    2296 	.db #0x46	; 70	'F'
      000797 77                    2297 	.db #0x77	; 119	'w'
      000798 24                    2298 	.db #0x24	; 36
      000799 15                    2299 	.db #0x15	; 21
      00079A 3B                    2300 	.db #0x3b	; 59
      00079B 0A                    2301 	.db #0x0a	; 10
      00079C 59                    2302 	.db #0x59	; 89	'Y'
      00079D 68                    2303 	.db #0x68	; 104	'h'
      00079E FF                    2304 	.db #0xff	; 255
      00079F CE                    2305 	.db #0xce	; 206
      0007A0 9D                    2306 	.db #0x9d	; 157
      0007A1 AC                    2307 	.db #0xac	; 172
                                   2308 	.area CONST   (CODE)
      000075                       2309 ___str_9:
      000075 23 25 64              2310 	.ascii "#%d"
      000078 0D                    2311 	.db 0x0d
      000079 0A                    2312 	.db 0x0a
      00007A 00                    2313 	.db 0x00
                                   2314 	.area CSEG    (CODE)
                                   2315 	.area CONST   (CODE)
      00007B                       2316 ___str_10:
      00007B 72 61 77 20 3A 20 20  2317 	.ascii "raw :  "
      000082 00                    2318 	.db 0x00
                                   2319 	.area CSEG    (CODE)
                                   2320 	.area CONST   (CODE)
      000083                       2321 ___str_11:
      000083 25 32 64 20 20 20     2322 	.ascii "%2d   "
      000089 00                    2323 	.db 0x00
                                   2324 	.area CSEG    (CODE)
                                   2325 	.area CONST   (CODE)
      00008A                       2326 ___str_12:
      00008A 64 61 74 61 3A        2327 	.ascii "data:"
      00008F 00                    2328 	.db 0x00
                                   2329 	.area CSEG    (CODE)
                                   2330 	.area CONST   (CODE)
      000090                       2331 ___str_13:
      000090 30 78 30 25 78 20     2332 	.ascii "0x0%x "
      000096 00                    2333 	.db 0x00
                                   2334 	.area CSEG    (CODE)
                                   2335 	.area CONST   (CODE)
      000097                       2336 ___str_14:
      000097 54 79 70 65 5F 42 63  2337 	.ascii "Type_Bcast"
             61 73 74
      0000A1 00                    2338 	.db 0x00
                                   2339 	.area CSEG    (CODE)
                                   2340 	.area CONST   (CODE)
      0000A2                       2341 ___str_15:
      0000A2 54 79 70 65 5F 55 63  2342 	.ascii "Type_Ucast"
             61 73 74
      0000AC 00                    2343 	.db 0x00
                                   2344 	.area CSEG    (CODE)
                                   2345 	.area CONST   (CODE)
      0000AD                       2346 ___str_16:
      0000AD 54 79 70 65 5F 4D 63  2347 	.ascii "Type_Mcast"
             61 73 74
      0000B7 00                    2348 	.db 0x00
                                   2349 	.area CSEG    (CODE)
                                   2350 	.area CONST   (CODE)
      0000B8                       2351 ___str_17:
      0000B8 54 79 70 65 5F 53 65  2352 	.ascii "Type_SetAddr"
             74 41 64 64 72
      0000C4 00                    2353 	.db 0x00
                                   2354 	.area CSEG    (CODE)
                                   2355 	.area CONST   (CODE)
      0000C5                       2356 ___str_18:
      0000C5 54 79 70 65 5F 53 65  2357 	.ascii "Type_SetLED"
             74 4C 45 44
      0000D0 00                    2358 	.db 0x00
                                   2359 	.area CSEG    (CODE)
                                   2360 	.area CONST   (CODE)
      0000D1                       2361 ___str_19:
      0000D1 54 79 70 65 5F 43 74  2362 	.ascii "Type_CtrlMotor"
             72 6C 4D 6F 74 6F 72
      0000DF 00                    2363 	.db 0x00
                                   2364 	.area CSEG    (CODE)
                                   2365 	.area CONST   (CODE)
      0000E0                       2366 ___str_20:
      0000E0 54 79 70 65 5F 52 65  2367 	.ascii "Type_ReadAddr"
             61 64 41 64 64 72
      0000ED 00                    2368 	.db 0x00
                                   2369 	.area CSEG    (CODE)
                                   2370 	.area CONST   (CODE)
      0000EE                       2371 ___str_21:
      0000EE 54 79 70 65 5F 4E 6F  2372 	.ascii "Type_None"
             6E 65
      0000F7 00                    2373 	.db 0x00
                                   2374 	.area CSEG    (CODE)
                                   2375 	.area CABS    (ABS,CODE)
