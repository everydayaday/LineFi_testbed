                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module linefi_packet
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _crc8_PARM_3
                                     12 	.globl _crc8_PARM_2
                                     13 	.globl _sht75_crc_table
                                     14 	.globl _chk_crc_linefi_packet_packet
                                     15 	.globl _add_crc_linefi_packet_packet
                                     16 	.globl _calc_crc_linefi_packet_packet
                                     17 	.globl _Receive_Data_From_UART1_nb
                                     18 	.globl _Send_Data_To_UART1
                                     19 	.globl _printf_fast_f
                                     20 	.globl _MOSI
                                     21 	.globl _P00
                                     22 	.globl _MISO
                                     23 	.globl _P01
                                     24 	.globl _RXD_1
                                     25 	.globl _P02
                                     26 	.globl _P03
                                     27 	.globl _STADC
                                     28 	.globl _P04
                                     29 	.globl _P05
                                     30 	.globl _TXD
                                     31 	.globl _P06
                                     32 	.globl _RXD
                                     33 	.globl _P07
                                     34 	.globl _IT0
                                     35 	.globl _IE0
                                     36 	.globl _IT1
                                     37 	.globl _IE1
                                     38 	.globl _TR0
                                     39 	.globl _TF0
                                     40 	.globl _TR1
                                     41 	.globl _TF1
                                     42 	.globl _P10
                                     43 	.globl _P11
                                     44 	.globl _P12
                                     45 	.globl _SCL
                                     46 	.globl _P13
                                     47 	.globl _SDA
                                     48 	.globl _P14
                                     49 	.globl _P15
                                     50 	.globl _TXD_1
                                     51 	.globl _P16
                                     52 	.globl _P17
                                     53 	.globl _RI
                                     54 	.globl _TI
                                     55 	.globl _RB8
                                     56 	.globl _TB8
                                     57 	.globl _REN
                                     58 	.globl _SM2
                                     59 	.globl _SM1
                                     60 	.globl _FE
                                     61 	.globl _SM0
                                     62 	.globl _P20
                                     63 	.globl _EX0
                                     64 	.globl _ET0
                                     65 	.globl _EX1
                                     66 	.globl _ET1
                                     67 	.globl _ES
                                     68 	.globl _EBOD
                                     69 	.globl _EADC
                                     70 	.globl _EA
                                     71 	.globl _P30
                                     72 	.globl _PX0
                                     73 	.globl _PT0
                                     74 	.globl _PX1
                                     75 	.globl _PT1
                                     76 	.globl _PS
                                     77 	.globl _PBOD
                                     78 	.globl _PADC
                                     79 	.globl _I2CPX
                                     80 	.globl _AA
                                     81 	.globl _SI
                                     82 	.globl _STO
                                     83 	.globl _STA
                                     84 	.globl _I2CEN
                                     85 	.globl _CM_RL2
                                     86 	.globl _TR2
                                     87 	.globl _TF2
                                     88 	.globl _P
                                     89 	.globl _OV
                                     90 	.globl _RS0
                                     91 	.globl _RS1
                                     92 	.globl _F0
                                     93 	.globl _AC
                                     94 	.globl _CY
                                     95 	.globl _CLRPWM
                                     96 	.globl _PWMF
                                     97 	.globl _LOAD
                                     98 	.globl _PWMRUN
                                     99 	.globl _ADCHS0
                                    100 	.globl _ADCHS1
                                    101 	.globl _ADCHS2
                                    102 	.globl _ADCHS3
                                    103 	.globl _ETGSEL0
                                    104 	.globl _ETGSEL1
                                    105 	.globl _ADCS
                                    106 	.globl _ADCF
                                    107 	.globl _RI_1
                                    108 	.globl _TI_1
                                    109 	.globl _RB8_1
                                    110 	.globl _TB8_1
                                    111 	.globl _REN_1
                                    112 	.globl _SM2_1
                                    113 	.globl _SM1_1
                                    114 	.globl _FE_1
                                    115 	.globl _SM0_1
                                    116 	.globl _EIPH1
                                    117 	.globl _EIP1
                                    118 	.globl _PMD
                                    119 	.globl _PMEN
                                    120 	.globl _PDTCNT
                                    121 	.globl _PDTEN
                                    122 	.globl _SCON_1
                                    123 	.globl _EIPH
                                    124 	.globl _AINDIDS
                                    125 	.globl _SPDR
                                    126 	.globl _SPSR
                                    127 	.globl _SPCR2
                                    128 	.globl _SPCR
                                    129 	.globl _CAPCON4
                                    130 	.globl _CAPCON3
                                    131 	.globl _B
                                    132 	.globl _EIP
                                    133 	.globl _C2H
                                    134 	.globl _C2L
                                    135 	.globl _PIF
                                    136 	.globl _PIPEN
                                    137 	.globl _PINEN
                                    138 	.globl _PICON
                                    139 	.globl _ADCCON0
                                    140 	.globl _C1H
                                    141 	.globl _C1L
                                    142 	.globl _C0H
                                    143 	.globl _C0L
                                    144 	.globl _ADCDLY
                                    145 	.globl _ADCCON2
                                    146 	.globl _ADCCON1
                                    147 	.globl _ACC
                                    148 	.globl _PWMCON1
                                    149 	.globl _PIOCON0
                                    150 	.globl _PWM3L
                                    151 	.globl _PWM2L
                                    152 	.globl _PWM1L
                                    153 	.globl _PWM0L
                                    154 	.globl _PWMPL
                                    155 	.globl _PWMCON0
                                    156 	.globl _FBD
                                    157 	.globl _PNP
                                    158 	.globl _PWM3H
                                    159 	.globl _PWM2H
                                    160 	.globl _PWM1H
                                    161 	.globl _PWM0H
                                    162 	.globl _PWMPH
                                    163 	.globl _PSW
                                    164 	.globl _ADCMPH
                                    165 	.globl _ADCMPL
                                    166 	.globl _PWM5L
                                    167 	.globl _TH2
                                    168 	.globl _PWM4L
                                    169 	.globl _TL2
                                    170 	.globl _RCMP2H
                                    171 	.globl _RCMP2L
                                    172 	.globl _T2MOD
                                    173 	.globl _T2CON
                                    174 	.globl _TA
                                    175 	.globl _PIOCON1
                                    176 	.globl _RH3
                                    177 	.globl _PWM5H
                                    178 	.globl _RL3
                                    179 	.globl _PWM4H
                                    180 	.globl _T3CON
                                    181 	.globl _ADCRH
                                    182 	.globl _ADCRL
                                    183 	.globl _I2ADDR
                                    184 	.globl _I2CON
                                    185 	.globl _I2TOC
                                    186 	.globl _I2CLK
                                    187 	.globl _I2STAT
                                    188 	.globl _I2DAT
                                    189 	.globl _SADDR_1
                                    190 	.globl _SADEN_1
                                    191 	.globl _SADEN
                                    192 	.globl _IP
                                    193 	.globl _PWMINTC
                                    194 	.globl _IPH
                                    195 	.globl _P2S
                                    196 	.globl _P1SR
                                    197 	.globl _P1M2
                                    198 	.globl _P1S
                                    199 	.globl _P1M1
                                    200 	.globl _P0SR
                                    201 	.globl _P0M2
                                    202 	.globl _P0S
                                    203 	.globl _P0M1
                                    204 	.globl _P3
                                    205 	.globl _IAPCN
                                    206 	.globl _IAPFD
                                    207 	.globl _P3SR
                                    208 	.globl _P3M2
                                    209 	.globl _P3S
                                    210 	.globl _P3M1
                                    211 	.globl _BODCON1
                                    212 	.globl _WDCON
                                    213 	.globl _SADDR
                                    214 	.globl _IE
                                    215 	.globl _IAPAH
                                    216 	.globl _IAPAL
                                    217 	.globl _IAPUEN
                                    218 	.globl _IAPTRG
                                    219 	.globl _BODCON0
                                    220 	.globl _AUXR1
                                    221 	.globl _P2
                                    222 	.globl _CHPCON
                                    223 	.globl _EIE1
                                    224 	.globl _EIE
                                    225 	.globl _SBUF_1
                                    226 	.globl _SBUF
                                    227 	.globl _SCON
                                    228 	.globl _CKEN
                                    229 	.globl _CKSWT
                                    230 	.globl _CKDIV
                                    231 	.globl _CAPCON2
                                    232 	.globl _CAPCON1
                                    233 	.globl _CAPCON0
                                    234 	.globl _SFRS
                                    235 	.globl _P1
                                    236 	.globl _WKCON
                                    237 	.globl _CKCON
                                    238 	.globl _TH1
                                    239 	.globl _TH0
                                    240 	.globl _TL1
                                    241 	.globl _TL0
                                    242 	.globl _TMOD
                                    243 	.globl _TCON
                                    244 	.globl _PCON
                                    245 	.globl _RWK
                                    246 	.globl _RCTRIM1
                                    247 	.globl _RCTRIM0
                                    248 	.globl _DPH
                                    249 	.globl _DPL
                                    250 	.globl _SP
                                    251 	.globl _P0
                                    252 	.globl _gpcTypeStr
                                    253 	.globl _print_raw_packet_PARM_2
                                    254 	.globl _cp_buf2linefipacket_PARM_3
                                    255 	.globl _cp_buf2linefipacket_PARM_2
                                    256 	.globl _gu16Cnt
                                    257 	.globl _size_linefi_packet
                                    258 	.globl _get_octet_from_linefi
                                    259 	.globl _send_octet_to_linefi
                                    260 	.globl _send_linefi_packet
                                    261 	.globl _cp_buf2linefipacket
                                    262 	.globl _print_linefipacket
                                    263 	.globl _crc8
                                    264 	.globl _print_raw_packet
                                    265 ;--------------------------------------------------------
                                    266 ; special function registers
                                    267 ;--------------------------------------------------------
                                    268 	.area RSEG    (ABS,DATA)
      000000                        269 	.org 0x0000
                           000080   270 _P0	=	0x0080
                           000081   271 _SP	=	0x0081
                           000082   272 _DPL	=	0x0082
                           000083   273 _DPH	=	0x0083
                           000084   274 _RCTRIM0	=	0x0084
                           000085   275 _RCTRIM1	=	0x0085
                           000086   276 _RWK	=	0x0086
                           000087   277 _PCON	=	0x0087
                           000088   278 _TCON	=	0x0088
                           000089   279 _TMOD	=	0x0089
                           00008A   280 _TL0	=	0x008a
                           00008B   281 _TL1	=	0x008b
                           00008C   282 _TH0	=	0x008c
                           00008D   283 _TH1	=	0x008d
                           00008E   284 _CKCON	=	0x008e
                           00008F   285 _WKCON	=	0x008f
                           000090   286 _P1	=	0x0090
                           000091   287 _SFRS	=	0x0091
                           000092   288 _CAPCON0	=	0x0092
                           000093   289 _CAPCON1	=	0x0093
                           000094   290 _CAPCON2	=	0x0094
                           000095   291 _CKDIV	=	0x0095
                           000096   292 _CKSWT	=	0x0096
                           000097   293 _CKEN	=	0x0097
                           000098   294 _SCON	=	0x0098
                           000099   295 _SBUF	=	0x0099
                           00009A   296 _SBUF_1	=	0x009a
                           00009B   297 _EIE	=	0x009b
                           00009C   298 _EIE1	=	0x009c
                           00009F   299 _CHPCON	=	0x009f
                           0000A0   300 _P2	=	0x00a0
                           0000A2   301 _AUXR1	=	0x00a2
                           0000A3   302 _BODCON0	=	0x00a3
                           0000A4   303 _IAPTRG	=	0x00a4
                           0000A5   304 _IAPUEN	=	0x00a5
                           0000A6   305 _IAPAL	=	0x00a6
                           0000A7   306 _IAPAH	=	0x00a7
                           0000A8   307 _IE	=	0x00a8
                           0000A9   308 _SADDR	=	0x00a9
                           0000AA   309 _WDCON	=	0x00aa
                           0000AB   310 _BODCON1	=	0x00ab
                           0000AC   311 _P3M1	=	0x00ac
                           0000AC   312 _P3S	=	0x00ac
                           0000AD   313 _P3M2	=	0x00ad
                           0000AD   314 _P3SR	=	0x00ad
                           0000AE   315 _IAPFD	=	0x00ae
                           0000AF   316 _IAPCN	=	0x00af
                           0000B0   317 _P3	=	0x00b0
                           0000B1   318 _P0M1	=	0x00b1
                           0000B1   319 _P0S	=	0x00b1
                           0000B2   320 _P0M2	=	0x00b2
                           0000B2   321 _P0SR	=	0x00b2
                           0000B3   322 _P1M1	=	0x00b3
                           0000B3   323 _P1S	=	0x00b3
                           0000B4   324 _P1M2	=	0x00b4
                           0000B4   325 _P1SR	=	0x00b4
                           0000B5   326 _P2S	=	0x00b5
                           0000B7   327 _IPH	=	0x00b7
                           0000B7   328 _PWMINTC	=	0x00b7
                           0000B8   329 _IP	=	0x00b8
                           0000B9   330 _SADEN	=	0x00b9
                           0000BA   331 _SADEN_1	=	0x00ba
                           0000BB   332 _SADDR_1	=	0x00bb
                           0000BC   333 _I2DAT	=	0x00bc
                           0000BD   334 _I2STAT	=	0x00bd
                           0000BE   335 _I2CLK	=	0x00be
                           0000BF   336 _I2TOC	=	0x00bf
                           0000C0   337 _I2CON	=	0x00c0
                           0000C1   338 _I2ADDR	=	0x00c1
                           0000C2   339 _ADCRL	=	0x00c2
                           0000C3   340 _ADCRH	=	0x00c3
                           0000C4   341 _T3CON	=	0x00c4
                           0000C4   342 _PWM4H	=	0x00c4
                           0000C5   343 _RL3	=	0x00c5
                           0000C5   344 _PWM5H	=	0x00c5
                           0000C6   345 _RH3	=	0x00c6
                           0000C6   346 _PIOCON1	=	0x00c6
                           0000C7   347 _TA	=	0x00c7
                           0000C8   348 _T2CON	=	0x00c8
                           0000C9   349 _T2MOD	=	0x00c9
                           0000CA   350 _RCMP2L	=	0x00ca
                           0000CB   351 _RCMP2H	=	0x00cb
                           0000CC   352 _TL2	=	0x00cc
                           0000CC   353 _PWM4L	=	0x00cc
                           0000CD   354 _TH2	=	0x00cd
                           0000CD   355 _PWM5L	=	0x00cd
                           0000CE   356 _ADCMPL	=	0x00ce
                           0000CF   357 _ADCMPH	=	0x00cf
                           0000D0   358 _PSW	=	0x00d0
                           0000D1   359 _PWMPH	=	0x00d1
                           0000D2   360 _PWM0H	=	0x00d2
                           0000D3   361 _PWM1H	=	0x00d3
                           0000D4   362 _PWM2H	=	0x00d4
                           0000D5   363 _PWM3H	=	0x00d5
                           0000D6   364 _PNP	=	0x00d6
                           0000D7   365 _FBD	=	0x00d7
                           0000D8   366 _PWMCON0	=	0x00d8
                           0000D9   367 _PWMPL	=	0x00d9
                           0000DA   368 _PWM0L	=	0x00da
                           0000DB   369 _PWM1L	=	0x00db
                           0000DC   370 _PWM2L	=	0x00dc
                           0000DD   371 _PWM3L	=	0x00dd
                           0000DE   372 _PIOCON0	=	0x00de
                           0000DF   373 _PWMCON1	=	0x00df
                           0000E0   374 _ACC	=	0x00e0
                           0000E1   375 _ADCCON1	=	0x00e1
                           0000E2   376 _ADCCON2	=	0x00e2
                           0000E3   377 _ADCDLY	=	0x00e3
                           0000E4   378 _C0L	=	0x00e4
                           0000E5   379 _C0H	=	0x00e5
                           0000E6   380 _C1L	=	0x00e6
                           0000E7   381 _C1H	=	0x00e7
                           0000E8   382 _ADCCON0	=	0x00e8
                           0000E9   383 _PICON	=	0x00e9
                           0000EA   384 _PINEN	=	0x00ea
                           0000EB   385 _PIPEN	=	0x00eb
                           0000EC   386 _PIF	=	0x00ec
                           0000ED   387 _C2L	=	0x00ed
                           0000EE   388 _C2H	=	0x00ee
                           0000EF   389 _EIP	=	0x00ef
                           0000F0   390 _B	=	0x00f0
                           0000F1   391 _CAPCON3	=	0x00f1
                           0000F2   392 _CAPCON4	=	0x00f2
                           0000F3   393 _SPCR	=	0x00f3
                           0000F3   394 _SPCR2	=	0x00f3
                           0000F4   395 _SPSR	=	0x00f4
                           0000F5   396 _SPDR	=	0x00f5
                           0000F6   397 _AINDIDS	=	0x00f6
                           0000F7   398 _EIPH	=	0x00f7
                           0000F8   399 _SCON_1	=	0x00f8
                           0000F9   400 _PDTEN	=	0x00f9
                           0000FA   401 _PDTCNT	=	0x00fa
                           0000FB   402 _PMEN	=	0x00fb
                           0000FC   403 _PMD	=	0x00fc
                           0000FE   404 _EIP1	=	0x00fe
                           0000FF   405 _EIPH1	=	0x00ff
                                    406 ;--------------------------------------------------------
                                    407 ; special function bits
                                    408 ;--------------------------------------------------------
                                    409 	.area RSEG    (ABS,DATA)
      000000                        410 	.org 0x0000
                           0000FF   411 _SM0_1	=	0x00ff
                           0000FF   412 _FE_1	=	0x00ff
                           0000FE   413 _SM1_1	=	0x00fe
                           0000FD   414 _SM2_1	=	0x00fd
                           0000FC   415 _REN_1	=	0x00fc
                           0000FB   416 _TB8_1	=	0x00fb
                           0000FA   417 _RB8_1	=	0x00fa
                           0000F9   418 _TI_1	=	0x00f9
                           0000F8   419 _RI_1	=	0x00f8
                           0000EF   420 _ADCF	=	0x00ef
                           0000EE   421 _ADCS	=	0x00ee
                           0000ED   422 _ETGSEL1	=	0x00ed
                           0000EC   423 _ETGSEL0	=	0x00ec
                           0000EB   424 _ADCHS3	=	0x00eb
                           0000EA   425 _ADCHS2	=	0x00ea
                           0000E9   426 _ADCHS1	=	0x00e9
                           0000E8   427 _ADCHS0	=	0x00e8
                           0000DF   428 _PWMRUN	=	0x00df
                           0000DE   429 _LOAD	=	0x00de
                           0000DD   430 _PWMF	=	0x00dd
                           0000DC   431 _CLRPWM	=	0x00dc
                           0000D7   432 _CY	=	0x00d7
                           0000D6   433 _AC	=	0x00d6
                           0000D5   434 _F0	=	0x00d5
                           0000D4   435 _RS1	=	0x00d4
                           0000D3   436 _RS0	=	0x00d3
                           0000D2   437 _OV	=	0x00d2
                           0000D0   438 _P	=	0x00d0
                           0000CF   439 _TF2	=	0x00cf
                           0000CA   440 _TR2	=	0x00ca
                           0000C8   441 _CM_RL2	=	0x00c8
                           0000C6   442 _I2CEN	=	0x00c6
                           0000C5   443 _STA	=	0x00c5
                           0000C4   444 _STO	=	0x00c4
                           0000C3   445 _SI	=	0x00c3
                           0000C2   446 _AA	=	0x00c2
                           0000C0   447 _I2CPX	=	0x00c0
                           0000BE   448 _PADC	=	0x00be
                           0000BD   449 _PBOD	=	0x00bd
                           0000BC   450 _PS	=	0x00bc
                           0000BB   451 _PT1	=	0x00bb
                           0000BA   452 _PX1	=	0x00ba
                           0000B9   453 _PT0	=	0x00b9
                           0000B8   454 _PX0	=	0x00b8
                           0000B0   455 _P30	=	0x00b0
                           0000AF   456 _EA	=	0x00af
                           0000AE   457 _EADC	=	0x00ae
                           0000AD   458 _EBOD	=	0x00ad
                           0000AC   459 _ES	=	0x00ac
                           0000AB   460 _ET1	=	0x00ab
                           0000AA   461 _EX1	=	0x00aa
                           0000A9   462 _ET0	=	0x00a9
                           0000A8   463 _EX0	=	0x00a8
                           0000A0   464 _P20	=	0x00a0
                           00009F   465 _SM0	=	0x009f
                           00009F   466 _FE	=	0x009f
                           00009E   467 _SM1	=	0x009e
                           00009D   468 _SM2	=	0x009d
                           00009C   469 _REN	=	0x009c
                           00009B   470 _TB8	=	0x009b
                           00009A   471 _RB8	=	0x009a
                           000099   472 _TI	=	0x0099
                           000098   473 _RI	=	0x0098
                           000097   474 _P17	=	0x0097
                           000096   475 _P16	=	0x0096
                           000096   476 _TXD_1	=	0x0096
                           000095   477 _P15	=	0x0095
                           000094   478 _P14	=	0x0094
                           000094   479 _SDA	=	0x0094
                           000093   480 _P13	=	0x0093
                           000093   481 _SCL	=	0x0093
                           000092   482 _P12	=	0x0092
                           000091   483 _P11	=	0x0091
                           000090   484 _P10	=	0x0090
                           00008F   485 _TF1	=	0x008f
                           00008E   486 _TR1	=	0x008e
                           00008D   487 _TF0	=	0x008d
                           00008C   488 _TR0	=	0x008c
                           00008B   489 _IE1	=	0x008b
                           00008A   490 _IT1	=	0x008a
                           000089   491 _IE0	=	0x0089
                           000088   492 _IT0	=	0x0088
                           000087   493 _P07	=	0x0087
                           000087   494 _RXD	=	0x0087
                           000086   495 _P06	=	0x0086
                           000086   496 _TXD	=	0x0086
                           000085   497 _P05	=	0x0085
                           000084   498 _P04	=	0x0084
                           000084   499 _STADC	=	0x0084
                           000083   500 _P03	=	0x0083
                           000082   501 _P02	=	0x0082
                           000082   502 _RXD_1	=	0x0082
                           000081   503 _P01	=	0x0081
                           000081   504 _MISO	=	0x0081
                           000080   505 _P00	=	0x0080
                           000080   506 _MOSI	=	0x0080
                                    507 ;--------------------------------------------------------
                                    508 ; overlayable register banks
                                    509 ;--------------------------------------------------------
                                    510 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        511 	.ds 8
                                    512 ;--------------------------------------------------------
                                    513 ; internal ram data
                                    514 ;--------------------------------------------------------
                                    515 	.area DSEG    (DATA)
      000000                        516 _gu16Cnt::
      000000                        517 	.ds 2
      000002                        518 _send_linefi_packet_i_65538_55:
      000002                        519 	.ds 1
      000003                        520 _cp_buf2linefipacket_PARM_2:
      000003                        521 	.ds 3
      000006                        522 _cp_buf2linefipacket_PARM_3:
      000006                        523 	.ds 3
      000009                        524 _cp_buf2linefipacket_i_65538_62:
      000009                        525 	.ds 1
      00000A                        526 _cp_buf2linefipacket_sloc0_1_0:
      00000A                        527 	.ds 3
      00000D                        528 _print_linefipacket_i_65537_68:
      00000D                        529 	.ds 1
      00000E                        530 _print_raw_packet_PARM_2:
      00000E                        531 	.ds 3
                                    532 ;--------------------------------------------------------
                                    533 ; overlayable items in internal ram 
                                    534 ;--------------------------------------------------------
                                    535 	.area	OSEG    (OVR,DATA)
                                    536 	.area	OSEG    (OVR,DATA)
      000000                        537 _crc8_PARM_2:
      000000                        538 	.ds 1
      000001                        539 _crc8_PARM_3:
      000001                        540 	.ds 1
                                    541 ;--------------------------------------------------------
                                    542 ; indirectly addressable internal ram data
                                    543 ;--------------------------------------------------------
                                    544 	.area ISEG    (DATA)
                                    545 ;--------------------------------------------------------
                                    546 ; absolute internal ram data
                                    547 ;--------------------------------------------------------
                                    548 	.area IABS    (ABS,DATA)
                                    549 	.area IABS    (ABS,DATA)
                                    550 ;--------------------------------------------------------
                                    551 ; bit data
                                    552 ;--------------------------------------------------------
                                    553 	.area BSEG    (BIT)
                                    554 ;--------------------------------------------------------
                                    555 ; paged external ram data
                                    556 ;--------------------------------------------------------
                                    557 	.area PSEG    (PAG,XDATA)
                                    558 ;--------------------------------------------------------
                                    559 ; external ram data
                                    560 ;--------------------------------------------------------
                                    561 	.area XSEG    (XDATA)
      000000                        562 _gpcTypeStr::
      000000                        563 	.ds 84
                                    564 ;--------------------------------------------------------
                                    565 ; absolute external ram data
                                    566 ;--------------------------------------------------------
                                    567 	.area XABS    (ABS,XDATA)
                                    568 ;--------------------------------------------------------
                                    569 ; external initialized ram data
                                    570 ;--------------------------------------------------------
                                    571 	.area HOME    (CODE)
                                    572 	.area GSINIT0 (CODE)
                                    573 	.area GSINIT1 (CODE)
                                    574 	.area GSINIT2 (CODE)
                                    575 	.area GSINIT3 (CODE)
                                    576 	.area GSINIT4 (CODE)
                                    577 	.area GSINIT5 (CODE)
                                    578 	.area GSINIT  (CODE)
                                    579 	.area GSFINAL (CODE)
                                    580 	.area CSEG    (CODE)
                                    581 ;--------------------------------------------------------
                                    582 ; global & static initialisations
                                    583 ;--------------------------------------------------------
                                    584 	.area HOME    (CODE)
                                    585 	.area GSINIT  (CODE)
                                    586 	.area GSFINAL (CODE)
                                    587 	.area GSINIT  (CODE)
                                    588 ;	../lib/linefi_packet.c:15: uint16 gu16Cnt = 0;
      000000 E4               [12]  589 	clr	a
      000001 F5*00            [12]  590 	mov	_gu16Cnt,a
      000003 F5*01            [12]  591 	mov	(_gu16Cnt + 1),a
                                    592 ;	../lib/linefi_packet.c:17: const char * __xdata gpcTypeStr[] = {
      000005 90r00r00         [24]  593 	mov	dptr,#_gpcTypeStr
      000008 74r97            [12]  594 	mov	a,#___str_14
      00000A F0               [24]  595 	movx	@dptr,a
      00000B 74s00            [12]  596 	mov	a,#(___str_14 >> 8)
      00000D A3               [24]  597 	inc	dptr
      00000E F0               [24]  598 	movx	@dptr,a
      00000F 74 80            [12]  599 	mov	a,#0x80
      000011 A3               [24]  600 	inc	dptr
      000012 F0               [24]  601 	movx	@dptr,a
      000013 90r00r03         [24]  602 	mov	dptr,#(_gpcTypeStr + 0x0003)
      000016 74rA2            [12]  603 	mov	a,#___str_15
      000018 F0               [24]  604 	movx	@dptr,a
      000019 74s00            [12]  605 	mov	a,#(___str_15 >> 8)
      00001B A3               [24]  606 	inc	dptr
      00001C F0               [24]  607 	movx	@dptr,a
      00001D 74 80            [12]  608 	mov	a,#0x80
      00001F A3               [24]  609 	inc	dptr
      000020 F0               [24]  610 	movx	@dptr,a
      000021 90r00r06         [24]  611 	mov	dptr,#(_gpcTypeStr + 0x0006)
      000024 74rAD            [12]  612 	mov	a,#___str_16
      000026 F0               [24]  613 	movx	@dptr,a
      000027 74s00            [12]  614 	mov	a,#(___str_16 >> 8)
      000029 A3               [24]  615 	inc	dptr
      00002A F0               [24]  616 	movx	@dptr,a
      00002B 74 80            [12]  617 	mov	a,#0x80
      00002D A3               [24]  618 	inc	dptr
      00002E F0               [24]  619 	movx	@dptr,a
      00002F 90r00r09         [24]  620 	mov	dptr,#(_gpcTypeStr + 0x0009)
      000032 74rB8            [12]  621 	mov	a,#___str_17
      000034 F0               [24]  622 	movx	@dptr,a
      000035 74s00            [12]  623 	mov	a,#(___str_17 >> 8)
      000037 A3               [24]  624 	inc	dptr
      000038 F0               [24]  625 	movx	@dptr,a
      000039 74 80            [12]  626 	mov	a,#0x80
      00003B A3               [24]  627 	inc	dptr
      00003C F0               [24]  628 	movx	@dptr,a
      00003D 90r00r0C         [24]  629 	mov	dptr,#(_gpcTypeStr + 0x000c)
      000040 74rC5            [12]  630 	mov	a,#___str_18
      000042 F0               [24]  631 	movx	@dptr,a
      000043 74s00            [12]  632 	mov	a,#(___str_18 >> 8)
      000045 A3               [24]  633 	inc	dptr
      000046 F0               [24]  634 	movx	@dptr,a
      000047 74 80            [12]  635 	mov	a,#0x80
      000049 A3               [24]  636 	inc	dptr
      00004A F0               [24]  637 	movx	@dptr,a
      00004B 90r00r0F         [24]  638 	mov	dptr,#(_gpcTypeStr + 0x000f)
      00004E 74rD1            [12]  639 	mov	a,#___str_19
      000050 F0               [24]  640 	movx	@dptr,a
      000051 74s00            [12]  641 	mov	a,#(___str_19 >> 8)
      000053 A3               [24]  642 	inc	dptr
      000054 F0               [24]  643 	movx	@dptr,a
      000055 74 80            [12]  644 	mov	a,#0x80
      000057 A3               [24]  645 	inc	dptr
      000058 F0               [24]  646 	movx	@dptr,a
      000059 90r00r12         [24]  647 	mov	dptr,#(_gpcTypeStr + 0x0012)
      00005C 74rE0            [12]  648 	mov	a,#___str_20
      00005E F0               [24]  649 	movx	@dptr,a
      00005F 74s00            [12]  650 	mov	a,#(___str_20 >> 8)
      000061 A3               [24]  651 	inc	dptr
      000062 F0               [24]  652 	movx	@dptr,a
      000063 74 80            [12]  653 	mov	a,#0x80
      000065 A3               [24]  654 	inc	dptr
      000066 F0               [24]  655 	movx	@dptr,a
      000067 90r00r15         [24]  656 	mov	dptr,#(_gpcTypeStr + 0x0015)
      00006A 74rEE            [12]  657 	mov	a,#___str_21
      00006C F0               [24]  658 	movx	@dptr,a
      00006D 74s00            [12]  659 	mov	a,#(___str_21 >> 8)
      00006F A3               [24]  660 	inc	dptr
      000070 F0               [24]  661 	movx	@dptr,a
      000071 74 80            [12]  662 	mov	a,#0x80
      000073 A3               [24]  663 	inc	dptr
      000074 F0               [24]  664 	movx	@dptr,a
      000075 90r00r18         [24]  665 	mov	dptr,#(_gpcTypeStr + 0x0018)
      000078 74rEE            [12]  666 	mov	a,#___str_21
      00007A F0               [24]  667 	movx	@dptr,a
      00007B 74s00            [12]  668 	mov	a,#(___str_21 >> 8)
      00007D A3               [24]  669 	inc	dptr
      00007E F0               [24]  670 	movx	@dptr,a
      00007F 74 80            [12]  671 	mov	a,#0x80
      000081 A3               [24]  672 	inc	dptr
      000082 F0               [24]  673 	movx	@dptr,a
      000083 90r00r1B         [24]  674 	mov	dptr,#(_gpcTypeStr + 0x001b)
      000086 74rEE            [12]  675 	mov	a,#___str_21
      000088 F0               [24]  676 	movx	@dptr,a
      000089 74s00            [12]  677 	mov	a,#(___str_21 >> 8)
      00008B A3               [24]  678 	inc	dptr
      00008C F0               [24]  679 	movx	@dptr,a
      00008D 74 80            [12]  680 	mov	a,#0x80
      00008F A3               [24]  681 	inc	dptr
      000090 F0               [24]  682 	movx	@dptr,a
      000091 90r00r1E         [24]  683 	mov	dptr,#(_gpcTypeStr + 0x001e)
      000094 74rEE            [12]  684 	mov	a,#___str_21
      000096 F0               [24]  685 	movx	@dptr,a
      000097 74s00            [12]  686 	mov	a,#(___str_21 >> 8)
      000099 A3               [24]  687 	inc	dptr
      00009A F0               [24]  688 	movx	@dptr,a
      00009B 74 80            [12]  689 	mov	a,#0x80
      00009D A3               [24]  690 	inc	dptr
      00009E F0               [24]  691 	movx	@dptr,a
      00009F 90r00r21         [24]  692 	mov	dptr,#(_gpcTypeStr + 0x0021)
      0000A2 74rEE            [12]  693 	mov	a,#___str_21
      0000A4 F0               [24]  694 	movx	@dptr,a
      0000A5 74s00            [12]  695 	mov	a,#(___str_21 >> 8)
      0000A7 A3               [24]  696 	inc	dptr
      0000A8 F0               [24]  697 	movx	@dptr,a
      0000A9 74 80            [12]  698 	mov	a,#0x80
      0000AB A3               [24]  699 	inc	dptr
      0000AC F0               [24]  700 	movx	@dptr,a
      0000AD 90r00r24         [24]  701 	mov	dptr,#(_gpcTypeStr + 0x0024)
      0000B0 74rEE            [12]  702 	mov	a,#___str_21
      0000B2 F0               [24]  703 	movx	@dptr,a
      0000B3 74s00            [12]  704 	mov	a,#(___str_21 >> 8)
      0000B5 A3               [24]  705 	inc	dptr
      0000B6 F0               [24]  706 	movx	@dptr,a
      0000B7 74 80            [12]  707 	mov	a,#0x80
      0000B9 A3               [24]  708 	inc	dptr
      0000BA F0               [24]  709 	movx	@dptr,a
      0000BB 90r00r27         [24]  710 	mov	dptr,#(_gpcTypeStr + 0x0027)
      0000BE 74rEE            [12]  711 	mov	a,#___str_21
      0000C0 F0               [24]  712 	movx	@dptr,a
      0000C1 74s00            [12]  713 	mov	a,#(___str_21 >> 8)
      0000C3 A3               [24]  714 	inc	dptr
      0000C4 F0               [24]  715 	movx	@dptr,a
      0000C5 74 80            [12]  716 	mov	a,#0x80
      0000C7 A3               [24]  717 	inc	dptr
      0000C8 F0               [24]  718 	movx	@dptr,a
      0000C9 90r00r2A         [24]  719 	mov	dptr,#(_gpcTypeStr + 0x002a)
      0000CC 74rEE            [12]  720 	mov	a,#___str_21
      0000CE F0               [24]  721 	movx	@dptr,a
      0000CF 74s00            [12]  722 	mov	a,#(___str_21 >> 8)
      0000D1 A3               [24]  723 	inc	dptr
      0000D2 F0               [24]  724 	movx	@dptr,a
      0000D3 74 80            [12]  725 	mov	a,#0x80
      0000D5 A3               [24]  726 	inc	dptr
      0000D6 F0               [24]  727 	movx	@dptr,a
      0000D7 90r00r2D         [24]  728 	mov	dptr,#(_gpcTypeStr + 0x002d)
      0000DA 74rEE            [12]  729 	mov	a,#___str_21
      0000DC F0               [24]  730 	movx	@dptr,a
      0000DD 74s00            [12]  731 	mov	a,#(___str_21 >> 8)
      0000DF A3               [24]  732 	inc	dptr
      0000E0 F0               [24]  733 	movx	@dptr,a
      0000E1 74 80            [12]  734 	mov	a,#0x80
      0000E3 A3               [24]  735 	inc	dptr
      0000E4 F0               [24]  736 	movx	@dptr,a
      0000E5 90r00r30         [24]  737 	mov	dptr,#(_gpcTypeStr + 0x0030)
      0000E8 74rEE            [12]  738 	mov	a,#___str_21
      0000EA F0               [24]  739 	movx	@dptr,a
      0000EB 74s00            [12]  740 	mov	a,#(___str_21 >> 8)
      0000ED A3               [24]  741 	inc	dptr
      0000EE F0               [24]  742 	movx	@dptr,a
      0000EF 74 80            [12]  743 	mov	a,#0x80
      0000F1 A3               [24]  744 	inc	dptr
      0000F2 F0               [24]  745 	movx	@dptr,a
      0000F3 90r00r33         [24]  746 	mov	dptr,#(_gpcTypeStr + 0x0033)
      0000F6 74rEE            [12]  747 	mov	a,#___str_21
      0000F8 F0               [24]  748 	movx	@dptr,a
      0000F9 74s00            [12]  749 	mov	a,#(___str_21 >> 8)
      0000FB A3               [24]  750 	inc	dptr
      0000FC F0               [24]  751 	movx	@dptr,a
      0000FD 74 80            [12]  752 	mov	a,#0x80
      0000FF A3               [24]  753 	inc	dptr
      000100 F0               [24]  754 	movx	@dptr,a
      000101 90r00r36         [24]  755 	mov	dptr,#(_gpcTypeStr + 0x0036)
      000104 74rEE            [12]  756 	mov	a,#___str_21
      000106 F0               [24]  757 	movx	@dptr,a
      000107 74s00            [12]  758 	mov	a,#(___str_21 >> 8)
      000109 A3               [24]  759 	inc	dptr
      00010A F0               [24]  760 	movx	@dptr,a
      00010B 74 80            [12]  761 	mov	a,#0x80
      00010D A3               [24]  762 	inc	dptr
      00010E F0               [24]  763 	movx	@dptr,a
      00010F 90r00r39         [24]  764 	mov	dptr,#(_gpcTypeStr + 0x0039)
      000112 74rEE            [12]  765 	mov	a,#___str_21
      000114 F0               [24]  766 	movx	@dptr,a
      000115 74s00            [12]  767 	mov	a,#(___str_21 >> 8)
      000117 A3               [24]  768 	inc	dptr
      000118 F0               [24]  769 	movx	@dptr,a
      000119 74 80            [12]  770 	mov	a,#0x80
      00011B A3               [24]  771 	inc	dptr
      00011C F0               [24]  772 	movx	@dptr,a
      00011D 90r00r3C         [24]  773 	mov	dptr,#(_gpcTypeStr + 0x003c)
      000120 74rEE            [12]  774 	mov	a,#___str_21
      000122 F0               [24]  775 	movx	@dptr,a
      000123 74s00            [12]  776 	mov	a,#(___str_21 >> 8)
      000125 A3               [24]  777 	inc	dptr
      000126 F0               [24]  778 	movx	@dptr,a
      000127 74 80            [12]  779 	mov	a,#0x80
      000129 A3               [24]  780 	inc	dptr
      00012A F0               [24]  781 	movx	@dptr,a
      00012B 90r00r3F         [24]  782 	mov	dptr,#(_gpcTypeStr + 0x003f)
      00012E 74rEE            [12]  783 	mov	a,#___str_21
      000130 F0               [24]  784 	movx	@dptr,a
      000131 74s00            [12]  785 	mov	a,#(___str_21 >> 8)
      000133 A3               [24]  786 	inc	dptr
      000134 F0               [24]  787 	movx	@dptr,a
      000135 74 80            [12]  788 	mov	a,#0x80
      000137 A3               [24]  789 	inc	dptr
      000138 F0               [24]  790 	movx	@dptr,a
      000139 90r00r42         [24]  791 	mov	dptr,#(_gpcTypeStr + 0x0042)
      00013C 74rEE            [12]  792 	mov	a,#___str_21
      00013E F0               [24]  793 	movx	@dptr,a
      00013F 74s00            [12]  794 	mov	a,#(___str_21 >> 8)
      000141 A3               [24]  795 	inc	dptr
      000142 F0               [24]  796 	movx	@dptr,a
      000143 74 80            [12]  797 	mov	a,#0x80
      000145 A3               [24]  798 	inc	dptr
      000146 F0               [24]  799 	movx	@dptr,a
      000147 90r00r45         [24]  800 	mov	dptr,#(_gpcTypeStr + 0x0045)
      00014A 74rEE            [12]  801 	mov	a,#___str_21
      00014C F0               [24]  802 	movx	@dptr,a
      00014D 74s00            [12]  803 	mov	a,#(___str_21 >> 8)
      00014F A3               [24]  804 	inc	dptr
      000150 F0               [24]  805 	movx	@dptr,a
      000151 74 80            [12]  806 	mov	a,#0x80
      000153 A3               [24]  807 	inc	dptr
      000154 F0               [24]  808 	movx	@dptr,a
      000155 90r00r48         [24]  809 	mov	dptr,#(_gpcTypeStr + 0x0048)
      000158 74rEE            [12]  810 	mov	a,#___str_21
      00015A F0               [24]  811 	movx	@dptr,a
      00015B 74s00            [12]  812 	mov	a,#(___str_21 >> 8)
      00015D A3               [24]  813 	inc	dptr
      00015E F0               [24]  814 	movx	@dptr,a
      00015F 74 80            [12]  815 	mov	a,#0x80
      000161 A3               [24]  816 	inc	dptr
      000162 F0               [24]  817 	movx	@dptr,a
      000163 90r00r4B         [24]  818 	mov	dptr,#(_gpcTypeStr + 0x004b)
      000166 74rEE            [12]  819 	mov	a,#___str_21
      000168 F0               [24]  820 	movx	@dptr,a
      000169 74s00            [12]  821 	mov	a,#(___str_21 >> 8)
      00016B A3               [24]  822 	inc	dptr
      00016C F0               [24]  823 	movx	@dptr,a
      00016D 74 80            [12]  824 	mov	a,#0x80
      00016F A3               [24]  825 	inc	dptr
      000170 F0               [24]  826 	movx	@dptr,a
      000171 90r00r4E         [24]  827 	mov	dptr,#(_gpcTypeStr + 0x004e)
      000174 74rEE            [12]  828 	mov	a,#___str_21
      000176 F0               [24]  829 	movx	@dptr,a
      000177 74s00            [12]  830 	mov	a,#(___str_21 >> 8)
      000179 A3               [24]  831 	inc	dptr
      00017A F0               [24]  832 	movx	@dptr,a
      00017B 74 80            [12]  833 	mov	a,#0x80
      00017D A3               [24]  834 	inc	dptr
      00017E F0               [24]  835 	movx	@dptr,a
      00017F 90r00r51         [24]  836 	mov	dptr,#(_gpcTypeStr + 0x0051)
      000182 74rEE            [12]  837 	mov	a,#___str_21
      000184 F0               [24]  838 	movx	@dptr,a
      000185 74s00            [12]  839 	mov	a,#(___str_21 >> 8)
      000187 A3               [24]  840 	inc	dptr
      000188 F0               [24]  841 	movx	@dptr,a
      000189 74 80            [12]  842 	mov	a,#0x80
      00018B A3               [24]  843 	inc	dptr
      00018C F0               [24]  844 	movx	@dptr,a
                                    845 ;--------------------------------------------------------
                                    846 ; Home
                                    847 ;--------------------------------------------------------
                                    848 	.area HOME    (CODE)
                                    849 	.area HOME    (CODE)
                                    850 ;--------------------------------------------------------
                                    851 ; code
                                    852 ;--------------------------------------------------------
                                    853 	.area CSEG    (CODE)
                                    854 ;------------------------------------------------------------
                                    855 ;Allocation info for local variables in function 'size_linefi_packet'
                                    856 ;------------------------------------------------------------
                                    857 ;apstLineFiPkt             Allocated to registers r5 r6 r7 
                                    858 ;------------------------------------------------------------
                                    859 ;	../lib/linefi_packet.c:48: uint8 size_linefi_packet(linefi_packet_t * apstLineFiPkt)
                                    860 ;	-----------------------------------------
                                    861 ;	 function size_linefi_packet
                                    862 ;	-----------------------------------------
      000000                        863 _size_linefi_packet:
                           000007   864 	ar7 = 0x07
                           000006   865 	ar6 = 0x06
                           000005   866 	ar5 = 0x05
                           000004   867 	ar4 = 0x04
                           000003   868 	ar3 = 0x03
                           000002   869 	ar2 = 0x02
                           000001   870 	ar1 = 0x01
                           000000   871 	ar0 = 0x00
      000000 AD 82            [24]  872 	mov	r5,dpl
      000002 AE 83            [24]  873 	mov	r6,dph
      000004 AF F0            [24]  874 	mov	r7,b
                                    875 ;	../lib/linefi_packet.c:50: return apstLineFiPkt->u8Size + sizeof(linefi_packet_t) - sizeof(uint8 *);
      000006 74 03            [12]  876 	mov	a,#0x03
      000008 2D               [12]  877 	add	a,r5
      000009 FD               [12]  878 	mov	r5,a
      00000A E4               [12]  879 	clr	a
      00000B 3E               [12]  880 	addc	a,r6
      00000C FE               [12]  881 	mov	r6,a
      00000D 8D 82            [24]  882 	mov	dpl,r5
      00000F 8E 83            [24]  883 	mov	dph,r6
      000011 8F F0            [24]  884 	mov	b,r7
      000013 12r00r00         [24]  885 	lcall	__gptrget
      000016 24 05            [12]  886 	add	a,#0x05
      000018 F5 82            [12]  887 	mov	dpl,a
                                    888 ;	../lib/linefi_packet.c:51: }
      00001A 22               [24]  889 	ret
                                    890 ;------------------------------------------------------------
                                    891 ;Allocation info for local variables in function 'calc_crc_linefi_packet_packet'
                                    892 ;------------------------------------------------------------
                                    893 ;apstLineFiPkt             Allocated to registers r5 r6 r7 
                                    894 ;u8CRC                     Allocated to registers 
                                    895 ;------------------------------------------------------------
                                    896 ;	../lib/linefi_packet.c:53: uint8 calc_crc_linefi_packet_packet(linefi_packet_t * apstLineFiPkt)
                                    897 ;	-----------------------------------------
                                    898 ;	 function calc_crc_linefi_packet_packet
                                    899 ;	-----------------------------------------
      00001B                        900 _calc_crc_linefi_packet_packet:
      00001B AD 82            [24]  901 	mov	r5,dpl
      00001D AE 83            [24]  902 	mov	r6,dph
      00001F AF F0            [24]  903 	mov	r7,b
                                    904 ;	../lib/linefi_packet.c:55: uint8 u8CRC = crc8((uint8 *)apstLineFiPkt, 4, 0xFF);
      000021 8D 02            [24]  905 	mov	ar2,r5
      000023 8E 03            [24]  906 	mov	ar3,r6
      000025 8F 04            [24]  907 	mov	ar4,r7
      000027 75*00 04         [24]  908 	mov	_crc8_PARM_2,#0x04
      00002A 75*01 FF         [24]  909 	mov	_crc8_PARM_3,#0xff
      00002D 8A 82            [24]  910 	mov	dpl,r2
      00002F 8B 83            [24]  911 	mov	dph,r3
      000031 8C F0            [24]  912 	mov	b,r4
      000033 C0 07            [24]  913 	push	ar7
      000035 C0 06            [24]  914 	push	ar6
      000037 C0 05            [24]  915 	push	ar5
      000039 12r05rC3         [24]  916 	lcall	_crc8
      00003C 85 82*01         [24]  917 	mov	_crc8_PARM_3,dpl
      00003F D0 05            [24]  918 	pop	ar5
      000041 D0 06            [24]  919 	pop	ar6
      000043 D0 07            [24]  920 	pop	ar7
                                    921 ;	../lib/linefi_packet.c:56: u8CRC = crc8((uint8 *)(apstLineFiPkt->pu8Data), apstLineFiPkt->u8Size, u8CRC);
      000045 74 05            [12]  922 	mov	a,#0x05
      000047 2D               [12]  923 	add	a,r5
      000048 FA               [12]  924 	mov	r2,a
      000049 E4               [12]  925 	clr	a
      00004A 3E               [12]  926 	addc	a,r6
      00004B FB               [12]  927 	mov	r3,a
      00004C 8F 04            [24]  928 	mov	ar4,r7
      00004E 8A 82            [24]  929 	mov	dpl,r2
      000050 8B 83            [24]  930 	mov	dph,r3
      000052 8C F0            [24]  931 	mov	b,r4
      000054 12r00r00         [24]  932 	lcall	__gptrget
      000057 FA               [12]  933 	mov	r2,a
      000058 A3               [24]  934 	inc	dptr
      000059 12r00r00         [24]  935 	lcall	__gptrget
      00005C FB               [12]  936 	mov	r3,a
      00005D A3               [24]  937 	inc	dptr
      00005E 12r00r00         [24]  938 	lcall	__gptrget
      000061 FC               [12]  939 	mov	r4,a
      000062 74 03            [12]  940 	mov	a,#0x03
      000064 2D               [12]  941 	add	a,r5
      000065 FD               [12]  942 	mov	r5,a
      000066 E4               [12]  943 	clr	a
      000067 3E               [12]  944 	addc	a,r6
      000068 FE               [12]  945 	mov	r6,a
      000069 8D 82            [24]  946 	mov	dpl,r5
      00006B 8E 83            [24]  947 	mov	dph,r6
      00006D 8F F0            [24]  948 	mov	b,r7
      00006F 12r00r00         [24]  949 	lcall	__gptrget
      000072 F5*00            [12]  950 	mov	_crc8_PARM_2,a
      000074 8A 82            [24]  951 	mov	dpl,r2
      000076 8B 83            [24]  952 	mov	dph,r3
      000078 8C F0            [24]  953 	mov	b,r4
                                    954 ;	../lib/linefi_packet.c:58: return u8CRC;
                                    955 ;	../lib/linefi_packet.c:59: }
      00007A 02r05rC3         [24]  956 	ljmp	_crc8
                                    957 ;------------------------------------------------------------
                                    958 ;Allocation info for local variables in function 'add_crc_linefi_packet_packet'
                                    959 ;------------------------------------------------------------
                                    960 ;apstLineFiPkt             Allocated to registers r5 r6 r7 
                                    961 ;u8CRC                     Allocated to registers r4 
                                    962 ;------------------------------------------------------------
                                    963 ;	../lib/linefi_packet.c:61: void add_crc_linefi_packet_packet(linefi_packet_t * apstLineFiPkt)
                                    964 ;	-----------------------------------------
                                    965 ;	 function add_crc_linefi_packet_packet
                                    966 ;	-----------------------------------------
      00007D                        967 _add_crc_linefi_packet_packet:
                                    968 ;	../lib/linefi_packet.c:63: uint8 u8CRC = calc_crc_linefi_packet_packet(apstLineFiPkt);
      00007D AD 82            [24]  969 	mov	r5,dpl
      00007F AE 83            [24]  970 	mov	r6,dph
      000081 AF F0            [24]  971 	mov	r7,b
      000083 C0 07            [24]  972 	push	ar7
      000085 C0 06            [24]  973 	push	ar6
      000087 C0 05            [24]  974 	push	ar5
      000089 12r00r1B         [24]  975 	lcall	_calc_crc_linefi_packet_packet
      00008C AC 82            [24]  976 	mov	r4,dpl
      00008E D0 05            [24]  977 	pop	ar5
      000090 D0 06            [24]  978 	pop	ar6
      000092 D0 07            [24]  979 	pop	ar7
                                    980 ;	../lib/linefi_packet.c:64: apstLineFiPkt->u8CRC = u8CRC;
      000094 74 04            [12]  981 	mov	a,#0x04
      000096 2D               [12]  982 	add	a,r5
      000097 FD               [12]  983 	mov	r5,a
      000098 E4               [12]  984 	clr	a
      000099 3E               [12]  985 	addc	a,r6
      00009A FE               [12]  986 	mov	r6,a
      00009B 8D 82            [24]  987 	mov	dpl,r5
      00009D 8E 83            [24]  988 	mov	dph,r6
      00009F 8F F0            [24]  989 	mov	b,r7
      0000A1 EC               [12]  990 	mov	a,r4
                                    991 ;	../lib/linefi_packet.c:65: }
      0000A2 02r00r00         [24]  992 	ljmp	__gptrput
                                    993 ;------------------------------------------------------------
                                    994 ;Allocation info for local variables in function 'chk_crc_linefi_packet_packet'
                                    995 ;------------------------------------------------------------
                                    996 ;apstLineFiPkt             Allocated to registers r5 r6 r7 
                                    997 ;u8CRC                     Allocated to registers r4 
                                    998 ;------------------------------------------------------------
                                    999 ;	../lib/linefi_packet.c:67: uint8 chk_crc_linefi_packet_packet(linefi_packet_t * apstLineFiPkt)
                                   1000 ;	-----------------------------------------
                                   1001 ;	 function chk_crc_linefi_packet_packet
                                   1002 ;	-----------------------------------------
      0000A5                       1003 _chk_crc_linefi_packet_packet:
                                   1004 ;	../lib/linefi_packet.c:69: uint8 u8CRC = calc_crc_linefi_packet_packet(apstLineFiPkt);
      0000A5 AD 82            [24] 1005 	mov	r5,dpl
      0000A7 AE 83            [24] 1006 	mov	r6,dph
      0000A9 AF F0            [24] 1007 	mov	r7,b
      0000AB C0 07            [24] 1008 	push	ar7
      0000AD C0 06            [24] 1009 	push	ar6
      0000AF C0 05            [24] 1010 	push	ar5
      0000B1 12r00r1B         [24] 1011 	lcall	_calc_crc_linefi_packet_packet
      0000B4 AC 82            [24] 1012 	mov	r4,dpl
      0000B6 D0 05            [24] 1013 	pop	ar5
      0000B8 D0 06            [24] 1014 	pop	ar6
      0000BA D0 07            [24] 1015 	pop	ar7
                                   1016 ;	../lib/linefi_packet.c:71: if (apstLineFiPkt->u8CRC == u8CRC) {
      0000BC 74 04            [12] 1017 	mov	a,#0x04
      0000BE 2D               [12] 1018 	add	a,r5
      0000BF FD               [12] 1019 	mov	r5,a
      0000C0 E4               [12] 1020 	clr	a
      0000C1 3E               [12] 1021 	addc	a,r6
      0000C2 FE               [12] 1022 	mov	r6,a
      0000C3 8D 82            [24] 1023 	mov	dpl,r5
      0000C5 8E 83            [24] 1024 	mov	dph,r6
      0000C7 8F F0            [24] 1025 	mov	b,r7
      0000C9 12r00r00         [24] 1026 	lcall	__gptrget
      0000CC B5 04 04         [24] 1027 	cjne	a,ar4,00102$
                                   1028 ;	../lib/linefi_packet.c:72: return CRC_OK;
      0000CF 75 82 01         [24] 1029 	mov	dpl,#0x01
      0000D2 22               [24] 1030 	ret
      0000D3                       1031 00102$:
                                   1032 ;	../lib/linefi_packet.c:74: return CRC_NOT_OK;
      0000D3 75 82 00         [24] 1033 	mov	dpl,#0x00
                                   1034 ;	../lib/linefi_packet.c:75: }
      0000D6 22               [24] 1035 	ret
                                   1036 ;------------------------------------------------------------
                                   1037 ;Allocation info for local variables in function 'get_octet_from_linefi'
                                   1038 ;------------------------------------------------------------
                                   1039 ;apu8Tmp                   Allocated to registers r5 r6 r7 
                                   1040 ;------------------------------------------------------------
                                   1041 ;	../lib/linefi_packet.c:78: UINT8 get_octet_from_linefi(UINT8 * apu8Tmp)
                                   1042 ;	-----------------------------------------
                                   1043 ;	 function get_octet_from_linefi
                                   1044 ;	-----------------------------------------
      0000D7                       1045 _get_octet_from_linefi:
                                   1046 ;	../lib/linefi_packet.c:80: return Receive_Data_From_UART1_nb(apu8Tmp);
                                   1047 ;	../lib/linefi_packet.c:81: }
      0000D7 02r00r00         [24] 1048 	ljmp	_Receive_Data_From_UART1_nb
                                   1049 ;------------------------------------------------------------
                                   1050 ;Allocation info for local variables in function 'send_octet_to_linefi'
                                   1051 ;------------------------------------------------------------
                                   1052 ;au8Data                   Allocated to registers 
                                   1053 ;------------------------------------------------------------
                                   1054 ;	../lib/linefi_packet.c:83: void send_octet_to_linefi(UINT8 au8Data)
                                   1055 ;	-----------------------------------------
                                   1056 ;	 function send_octet_to_linefi
                                   1057 ;	-----------------------------------------
      0000DA                       1058 _send_octet_to_linefi:
                                   1059 ;	../lib/linefi_packet.c:85: return Send_Data_To_UART1(au8Data);
                                   1060 ;	../lib/linefi_packet.c:86: }
      0000DA 02r00r00         [24] 1061 	ljmp	_Send_Data_To_UART1
                                   1062 ;------------------------------------------------------------
                                   1063 ;Allocation info for local variables in function 'send_linefi_packet'
                                   1064 ;------------------------------------------------------------
                                   1065 ;apstLineFiPkt             Allocated to registers r5 r6 r7 
                                   1066 ;u8CRC1                    Allocated to registers r4 
                                   1067 ;pu8Buf                    Allocated to registers r2 r3 r4 
                                   1068 ;i                         Allocated with name '_send_linefi_packet_i_65538_55'
                                   1069 ;------------------------------------------------------------
                                   1070 ;	../lib/linefi_packet.c:88: void send_linefi_packet(linefi_packet_t * apstLineFiPkt)
                                   1071 ;	-----------------------------------------
                                   1072 ;	 function send_linefi_packet
                                   1073 ;	-----------------------------------------
      0000DD                       1074 _send_linefi_packet:
                                   1075 ;	../lib/linefi_packet.c:90: uint8 u8CRC1 = calc_crc_linefi_packet_packet(apstLineFiPkt);
      0000DD AD 82            [24] 1076 	mov	r5,dpl
      0000DF AE 83            [24] 1077 	mov	r6,dph
      0000E1 AF F0            [24] 1078 	mov	r7,b
      0000E3 C0 07            [24] 1079 	push	ar7
      0000E5 C0 06            [24] 1080 	push	ar6
      0000E7 C0 05            [24] 1081 	push	ar5
      0000E9 12r00r1B         [24] 1082 	lcall	_calc_crc_linefi_packet_packet
      0000EC AC 82            [24] 1083 	mov	r4,dpl
      0000EE D0 05            [24] 1084 	pop	ar5
      0000F0 D0 06            [24] 1085 	pop	ar6
      0000F2 D0 07            [24] 1086 	pop	ar7
                                   1087 ;	../lib/linefi_packet.c:91: apstLineFiPkt->u8CRC = u8CRC1;
      0000F4 74 04            [12] 1088 	mov	a,#0x04
      0000F6 2D               [12] 1089 	add	a,r5
      0000F7 F9               [12] 1090 	mov	r1,a
      0000F8 E4               [12] 1091 	clr	a
      0000F9 3E               [12] 1092 	addc	a,r6
      0000FA FA               [12] 1093 	mov	r2,a
      0000FB 8F 03            [24] 1094 	mov	ar3,r7
      0000FD 89 82            [24] 1095 	mov	dpl,r1
      0000FF 8A 83            [24] 1096 	mov	dph,r2
      000101 8B F0            [24] 1097 	mov	b,r3
      000103 EC               [12] 1098 	mov	a,r4
      000104 12r00r00         [24] 1099 	lcall	__gptrput
                                   1100 ;	../lib/linefi_packet.c:92: uint8 * pu8Buf = (uint8 *) apstLineFiPkt;
      000107 8D 02            [24] 1101 	mov	ar2,r5
      000109 8E 03            [24] 1102 	mov	ar3,r6
      00010B 8F 04            [24] 1103 	mov	ar4,r7
                                   1104 ;	../lib/linefi_packet.c:93: send_octet_to_linefi(*pu8Buf++);
      00010D 8A 82            [24] 1105 	mov	dpl,r2
      00010F 8B 83            [24] 1106 	mov	dph,r3
      000111 8C F0            [24] 1107 	mov	b,r4
      000113 12r00r00         [24] 1108 	lcall	__gptrget
      000116 F5 82            [12] 1109 	mov	dpl,a
      000118 0A               [12] 1110 	inc	r2
      000119 BA 00 01         [24] 1111 	cjne	r2,#0x00,00118$
      00011C 0B               [12] 1112 	inc	r3
      00011D                       1113 00118$:
      00011D C0 07            [24] 1114 	push	ar7
      00011F C0 06            [24] 1115 	push	ar6
      000121 C0 05            [24] 1116 	push	ar5
      000123 C0 04            [24] 1117 	push	ar4
      000125 C0 03            [24] 1118 	push	ar3
      000127 C0 02            [24] 1119 	push	ar2
      000129 12r00rDA         [24] 1120 	lcall	_send_octet_to_linefi
      00012C D0 02            [24] 1121 	pop	ar2
      00012E D0 03            [24] 1122 	pop	ar3
      000130 D0 04            [24] 1123 	pop	ar4
      000132 D0 05            [24] 1124 	pop	ar5
      000134 D0 06            [24] 1125 	pop	ar6
      000136 D0 07            [24] 1126 	pop	ar7
                                   1127 ;	../lib/linefi_packet.c:94: send_octet_to_linefi(*pu8Buf++);
      000138 8A 82            [24] 1128 	mov	dpl,r2
      00013A 8B 83            [24] 1129 	mov	dph,r3
      00013C 8C F0            [24] 1130 	mov	b,r4
      00013E 12r00r00         [24] 1131 	lcall	__gptrget
      000141 F5 82            [12] 1132 	mov	dpl,a
      000143 0A               [12] 1133 	inc	r2
      000144 BA 00 01         [24] 1134 	cjne	r2,#0x00,00119$
      000147 0B               [12] 1135 	inc	r3
      000148                       1136 00119$:
      000148 C0 07            [24] 1137 	push	ar7
      00014A C0 06            [24] 1138 	push	ar6
      00014C C0 05            [24] 1139 	push	ar5
      00014E C0 04            [24] 1140 	push	ar4
      000150 C0 03            [24] 1141 	push	ar3
      000152 C0 02            [24] 1142 	push	ar2
      000154 12r00rDA         [24] 1143 	lcall	_send_octet_to_linefi
      000157 D0 02            [24] 1144 	pop	ar2
      000159 D0 03            [24] 1145 	pop	ar3
      00015B D0 04            [24] 1146 	pop	ar4
      00015D D0 05            [24] 1147 	pop	ar5
      00015F D0 06            [24] 1148 	pop	ar6
      000161 D0 07            [24] 1149 	pop	ar7
                                   1150 ;	../lib/linefi_packet.c:95: send_octet_to_linefi(*pu8Buf++);
      000163 8A 82            [24] 1151 	mov	dpl,r2
      000165 8B 83            [24] 1152 	mov	dph,r3
      000167 8C F0            [24] 1153 	mov	b,r4
      000169 12r00r00         [24] 1154 	lcall	__gptrget
      00016C F9               [12] 1155 	mov	r1,a
      00016D 0A               [12] 1156 	inc	r2
      00016E BA 00 01         [24] 1157 	cjne	r2,#0x00,00120$
      000171 0B               [12] 1158 	inc	r3
      000172                       1159 00120$:
      000172 89 82            [24] 1160 	mov	dpl,r1
      000174 C0 07            [24] 1161 	push	ar7
      000176 C0 06            [24] 1162 	push	ar6
      000178 C0 05            [24] 1163 	push	ar5
      00017A C0 04            [24] 1164 	push	ar4
      00017C C0 03            [24] 1165 	push	ar3
      00017E C0 02            [24] 1166 	push	ar2
      000180 12r00rDA         [24] 1167 	lcall	_send_octet_to_linefi
      000183 D0 02            [24] 1168 	pop	ar2
      000185 D0 03            [24] 1169 	pop	ar3
      000187 D0 04            [24] 1170 	pop	ar4
      000189 D0 05            [24] 1171 	pop	ar5
      00018B D0 06            [24] 1172 	pop	ar6
      00018D D0 07            [24] 1173 	pop	ar7
                                   1174 ;	../lib/linefi_packet.c:96: send_octet_to_linefi(*pu8Buf++);
      00018F 8A 82            [24] 1175 	mov	dpl,r2
      000191 8B 83            [24] 1176 	mov	dph,r3
      000193 8C F0            [24] 1177 	mov	b,r4
      000195 12r00r00         [24] 1178 	lcall	__gptrget
      000198 F5 82            [12] 1179 	mov	dpl,a
      00019A 0A               [12] 1180 	inc	r2
      00019B BA 00 01         [24] 1181 	cjne	r2,#0x00,00121$
      00019E 0B               [12] 1182 	inc	r3
      00019F                       1183 00121$:
      00019F C0 07            [24] 1184 	push	ar7
      0001A1 C0 06            [24] 1185 	push	ar6
      0001A3 C0 05            [24] 1186 	push	ar5
      0001A5 C0 04            [24] 1187 	push	ar4
      0001A7 C0 03            [24] 1188 	push	ar3
      0001A9 C0 02            [24] 1189 	push	ar2
      0001AB 12r00rDA         [24] 1190 	lcall	_send_octet_to_linefi
      0001AE D0 02            [24] 1191 	pop	ar2
      0001B0 D0 03            [24] 1192 	pop	ar3
      0001B2 D0 04            [24] 1193 	pop	ar4
                                   1194 ;	../lib/linefi_packet.c:97: send_octet_to_linefi(*pu8Buf++); //CRC
      0001B4 8A 82            [24] 1195 	mov	dpl,r2
      0001B6 8B 83            [24] 1196 	mov	dph,r3
      0001B8 8C F0            [24] 1197 	mov	b,r4
      0001BA 12r00r00         [24] 1198 	lcall	__gptrget
      0001BD F5 82            [12] 1199 	mov	dpl,a
      0001BF 12r00rDA         [24] 1200 	lcall	_send_octet_to_linefi
      0001C2 D0 05            [24] 1201 	pop	ar5
      0001C4 D0 06            [24] 1202 	pop	ar6
      0001C6 D0 07            [24] 1203 	pop	ar7
                                   1204 ;	../lib/linefi_packet.c:100: for (i=0;i<apstLineFiPkt->u8Size;i++) {
      0001C8 74 05            [12] 1205 	mov	a,#0x05
      0001CA 2D               [12] 1206 	add	a,r5
      0001CB FA               [12] 1207 	mov	r2,a
      0001CC E4               [12] 1208 	clr	a
      0001CD 3E               [12] 1209 	addc	a,r6
      0001CE FB               [12] 1210 	mov	r3,a
      0001CF 8F 04            [24] 1211 	mov	ar4,r7
      0001D1 74 03            [12] 1212 	mov	a,#0x03
      0001D3 2D               [12] 1213 	add	a,r5
      0001D4 FD               [12] 1214 	mov	r5,a
      0001D5 E4               [12] 1215 	clr	a
      0001D6 3E               [12] 1216 	addc	a,r6
      0001D7 FE               [12] 1217 	mov	r6,a
      0001D8 75*02 00         [24] 1218 	mov	_send_linefi_packet_i_65538_55,#0x00
      0001DB                       1219 00103$:
      0001DB 8D 82            [24] 1220 	mov	dpl,r5
      0001DD 8E 83            [24] 1221 	mov	dph,r6
      0001DF 8F F0            [24] 1222 	mov	b,r7
      0001E1 12r00r00         [24] 1223 	lcall	__gptrget
      0001E4 F8               [12] 1224 	mov	r0,a
      0001E5 C3               [12] 1225 	clr	c
      0001E6 E5*02            [12] 1226 	mov	a,_send_linefi_packet_i_65538_55
      0001E8 98               [12] 1227 	subb	a,r0
      0001E9 50 51            [24] 1228 	jnc	00105$
                                   1229 ;	../lib/linefi_packet.c:101: send_octet_to_linefi(*(apstLineFiPkt->pu8Data+i));
      0001EB C0 05            [24] 1230 	push	ar5
      0001ED C0 06            [24] 1231 	push	ar6
      0001EF C0 07            [24] 1232 	push	ar7
      0001F1 8A 82            [24] 1233 	mov	dpl,r2
      0001F3 8B 83            [24] 1234 	mov	dph,r3
      0001F5 8C F0            [24] 1235 	mov	b,r4
      0001F7 12r00r00         [24] 1236 	lcall	__gptrget
      0001FA F8               [12] 1237 	mov	r0,a
      0001FB A3               [24] 1238 	inc	dptr
      0001FC 12r00r00         [24] 1239 	lcall	__gptrget
      0001FF F9               [12] 1240 	mov	r1,a
      000200 A3               [24] 1241 	inc	dptr
      000201 12r00r00         [24] 1242 	lcall	__gptrget
      000204 FF               [12] 1243 	mov	r7,a
      000205 E5*02            [12] 1244 	mov	a,_send_linefi_packet_i_65538_55
      000207 28               [12] 1245 	add	a,r0
      000208 F8               [12] 1246 	mov	r0,a
      000209 E4               [12] 1247 	clr	a
      00020A 39               [12] 1248 	addc	a,r1
      00020B F9               [12] 1249 	mov	r1,a
      00020C 88 82            [24] 1250 	mov	dpl,r0
      00020E 89 83            [24] 1251 	mov	dph,r1
      000210 8F F0            [24] 1252 	mov	b,r7
      000212 12r00r00         [24] 1253 	lcall	__gptrget
      000215 F5 82            [12] 1254 	mov	dpl,a
      000217 C0 07            [24] 1255 	push	ar7
      000219 C0 06            [24] 1256 	push	ar6
      00021B C0 05            [24] 1257 	push	ar5
      00021D C0 04            [24] 1258 	push	ar4
      00021F C0 03            [24] 1259 	push	ar3
      000221 C0 02            [24] 1260 	push	ar2
      000223 12r00rDA         [24] 1261 	lcall	_send_octet_to_linefi
      000226 D0 02            [24] 1262 	pop	ar2
      000228 D0 03            [24] 1263 	pop	ar3
      00022A D0 04            [24] 1264 	pop	ar4
      00022C D0 05            [24] 1265 	pop	ar5
      00022E D0 06            [24] 1266 	pop	ar6
      000230 D0 07            [24] 1267 	pop	ar7
                                   1268 ;	../lib/linefi_packet.c:100: for (i=0;i<apstLineFiPkt->u8Size;i++) {
      000232 05*02            [12] 1269 	inc	_send_linefi_packet_i_65538_55
      000234 D0 07            [24] 1270 	pop	ar7
      000236 D0 06            [24] 1271 	pop	ar6
      000238 D0 05            [24] 1272 	pop	ar5
      00023A 80 9F            [24] 1273 	sjmp	00103$
      00023C                       1274 00105$:
                                   1275 ;	../lib/linefi_packet.c:103: }
      00023C 22               [24] 1276 	ret
                                   1277 ;------------------------------------------------------------
                                   1278 ;Allocation info for local variables in function 'cp_buf2linefipacket'
                                   1279 ;------------------------------------------------------------
                                   1280 ;apu8RxBuf                 Allocated with name '_cp_buf2linefipacket_PARM_2'
                                   1281 ;apstLineFiPkt             Allocated with name '_cp_buf2linefipacket_PARM_3'
                                   1282 ;au8Size                   Allocated to registers r7 
                                   1283 ;pu8Buf                    Allocated to registers r5 r6 r7 
                                   1284 ;i                         Allocated with name '_cp_buf2linefipacket_i_65538_62'
                                   1285 ;sloc0                     Allocated with name '_cp_buf2linefipacket_sloc0_1_0'
                                   1286 ;------------------------------------------------------------
                                   1287 ;	../lib/linefi_packet.c:105: uint8 cp_buf2linefipacket(uint8 au8Size, uint8 * apu8RxBuf, linefi_packet_t * apstLineFiPkt)
                                   1288 ;	-----------------------------------------
                                   1289 ;	 function cp_buf2linefipacket
                                   1290 ;	-----------------------------------------
      00023D                       1291 _cp_buf2linefipacket:
      00023D AF 82            [24] 1292 	mov	r7,dpl
                                   1293 ;	../lib/linefi_packet.c:107: if (au8Size < 5) {
      00023F BF 05 00         [24] 1294 	cjne	r7,#0x05,00132$
      000242                       1295 00132$:
      000242 50 04            [24] 1296 	jnc	00102$
                                   1297 ;	../lib/linefi_packet.c:108: return CONV_ERR_TOO_SMALLSIZE;
      000244 75 82 03         [24] 1298 	mov	dpl,#0x03
      000247 22               [24] 1299 	ret
      000248                       1300 00102$:
                                   1301 ;	../lib/linefi_packet.c:111: uint8 * pu8Buf = (uint8 *) apstLineFiPkt;
      000248 AD*06            [24] 1302 	mov	r5,_cp_buf2linefipacket_PARM_3
      00024A AE*07            [24] 1303 	mov	r6,(_cp_buf2linefipacket_PARM_3 + 1)
      00024C AF*08            [24] 1304 	mov	r7,(_cp_buf2linefipacket_PARM_3 + 2)
                                   1305 ;	../lib/linefi_packet.c:112: *pu8Buf++ = *apu8RxBuf++;
      00024E AA*03            [24] 1306 	mov	r2,_cp_buf2linefipacket_PARM_2
      000250 AB*04            [24] 1307 	mov	r3,(_cp_buf2linefipacket_PARM_2 + 1)
      000252 AC*05            [24] 1308 	mov	r4,(_cp_buf2linefipacket_PARM_2 + 2)
      000254 8A 82            [24] 1309 	mov	dpl,r2
      000256 8B 83            [24] 1310 	mov	dph,r3
      000258 8C F0            [24] 1311 	mov	b,r4
      00025A 12r00r00         [24] 1312 	lcall	__gptrget
      00025D F9               [12] 1313 	mov	r1,a
      00025E 74 01            [12] 1314 	mov	a,#0x01
      000260 2A               [12] 1315 	add	a,r2
      000261 F5*03            [12] 1316 	mov	_cp_buf2linefipacket_PARM_2,a
      000263 E4               [12] 1317 	clr	a
      000264 3B               [12] 1318 	addc	a,r3
      000265 F5*04            [12] 1319 	mov	(_cp_buf2linefipacket_PARM_2 + 1),a
      000267 8C*05            [24] 1320 	mov	(_cp_buf2linefipacket_PARM_2 + 2),r4
      000269 8D 82            [24] 1321 	mov	dpl,r5
      00026B 8E 83            [24] 1322 	mov	dph,r6
      00026D 8F F0            [24] 1323 	mov	b,r7
      00026F E9               [12] 1324 	mov	a,r1
      000270 12r00r00         [24] 1325 	lcall	__gptrput
      000273 0D               [12] 1326 	inc	r5
      000274 BD 00 01         [24] 1327 	cjne	r5,#0x00,00134$
      000277 0E               [12] 1328 	inc	r6
      000278                       1329 00134$:
                                   1330 ;	../lib/linefi_packet.c:113: *pu8Buf++ = *apu8RxBuf++;
      000278 AA*03            [24] 1331 	mov	r2,_cp_buf2linefipacket_PARM_2
      00027A AB*04            [24] 1332 	mov	r3,(_cp_buf2linefipacket_PARM_2 + 1)
      00027C AC*05            [24] 1333 	mov	r4,(_cp_buf2linefipacket_PARM_2 + 2)
      00027E 8A 82            [24] 1334 	mov	dpl,r2
      000280 8B 83            [24] 1335 	mov	dph,r3
      000282 8C F0            [24] 1336 	mov	b,r4
      000284 12r00r00         [24] 1337 	lcall	__gptrget
      000287 F9               [12] 1338 	mov	r1,a
      000288 74 01            [12] 1339 	mov	a,#0x01
      00028A 2A               [12] 1340 	add	a,r2
      00028B F5*03            [12] 1341 	mov	_cp_buf2linefipacket_PARM_2,a
      00028D E4               [12] 1342 	clr	a
      00028E 3B               [12] 1343 	addc	a,r3
      00028F F5*04            [12] 1344 	mov	(_cp_buf2linefipacket_PARM_2 + 1),a
      000291 8C*05            [24] 1345 	mov	(_cp_buf2linefipacket_PARM_2 + 2),r4
      000293 8D 82            [24] 1346 	mov	dpl,r5
      000295 8E 83            [24] 1347 	mov	dph,r6
      000297 8F F0            [24] 1348 	mov	b,r7
      000299 E9               [12] 1349 	mov	a,r1
      00029A 12r00r00         [24] 1350 	lcall	__gptrput
      00029D 0D               [12] 1351 	inc	r5
      00029E BD 00 01         [24] 1352 	cjne	r5,#0x00,00135$
      0002A1 0E               [12] 1353 	inc	r6
      0002A2                       1354 00135$:
                                   1355 ;	../lib/linefi_packet.c:114: *pu8Buf++ = *apu8RxBuf++;
      0002A2 AA*03            [24] 1356 	mov	r2,_cp_buf2linefipacket_PARM_2
      0002A4 AB*04            [24] 1357 	mov	r3,(_cp_buf2linefipacket_PARM_2 + 1)
      0002A6 AC*05            [24] 1358 	mov	r4,(_cp_buf2linefipacket_PARM_2 + 2)
      0002A8 8A 82            [24] 1359 	mov	dpl,r2
      0002AA 8B 83            [24] 1360 	mov	dph,r3
      0002AC 8C F0            [24] 1361 	mov	b,r4
      0002AE 12r00r00         [24] 1362 	lcall	__gptrget
      0002B1 F9               [12] 1363 	mov	r1,a
      0002B2 74 01            [12] 1364 	mov	a,#0x01
      0002B4 2A               [12] 1365 	add	a,r2
      0002B5 F5*03            [12] 1366 	mov	_cp_buf2linefipacket_PARM_2,a
      0002B7 E4               [12] 1367 	clr	a
      0002B8 3B               [12] 1368 	addc	a,r3
      0002B9 F5*04            [12] 1369 	mov	(_cp_buf2linefipacket_PARM_2 + 1),a
      0002BB 8C*05            [24] 1370 	mov	(_cp_buf2linefipacket_PARM_2 + 2),r4
      0002BD 8D 82            [24] 1371 	mov	dpl,r5
      0002BF 8E 83            [24] 1372 	mov	dph,r6
      0002C1 8F F0            [24] 1373 	mov	b,r7
      0002C3 E9               [12] 1374 	mov	a,r1
      0002C4 12r00r00         [24] 1375 	lcall	__gptrput
      0002C7 0D               [12] 1376 	inc	r5
      0002C8 BD 00 01         [24] 1377 	cjne	r5,#0x00,00136$
      0002CB 0E               [12] 1378 	inc	r6
      0002CC                       1379 00136$:
                                   1380 ;	../lib/linefi_packet.c:115: *pu8Buf++ = *apu8RxBuf++;
      0002CC AA*03            [24] 1381 	mov	r2,_cp_buf2linefipacket_PARM_2
      0002CE AB*04            [24] 1382 	mov	r3,(_cp_buf2linefipacket_PARM_2 + 1)
      0002D0 AC*05            [24] 1383 	mov	r4,(_cp_buf2linefipacket_PARM_2 + 2)
      0002D2 8A 82            [24] 1384 	mov	dpl,r2
      0002D4 8B 83            [24] 1385 	mov	dph,r3
      0002D6 8C F0            [24] 1386 	mov	b,r4
      0002D8 12r00r00         [24] 1387 	lcall	__gptrget
      0002DB F9               [12] 1388 	mov	r1,a
      0002DC 74 01            [12] 1389 	mov	a,#0x01
      0002DE 2A               [12] 1390 	add	a,r2
      0002DF F5*03            [12] 1391 	mov	_cp_buf2linefipacket_PARM_2,a
      0002E1 E4               [12] 1392 	clr	a
      0002E2 3B               [12] 1393 	addc	a,r3
      0002E3 F5*04            [12] 1394 	mov	(_cp_buf2linefipacket_PARM_2 + 1),a
      0002E5 8C*05            [24] 1395 	mov	(_cp_buf2linefipacket_PARM_2 + 2),r4
      0002E7 8D 82            [24] 1396 	mov	dpl,r5
      0002E9 8E 83            [24] 1397 	mov	dph,r6
      0002EB 8F F0            [24] 1398 	mov	b,r7
      0002ED E9               [12] 1399 	mov	a,r1
      0002EE 12r00r00         [24] 1400 	lcall	__gptrput
      0002F1 0D               [12] 1401 	inc	r5
      0002F2 BD 00 01         [24] 1402 	cjne	r5,#0x00,00137$
      0002F5 0E               [12] 1403 	inc	r6
      0002F6                       1404 00137$:
                                   1405 ;	../lib/linefi_packet.c:116: *pu8Buf++ = *apu8RxBuf++;
      0002F6 AA*03            [24] 1406 	mov	r2,_cp_buf2linefipacket_PARM_2
      0002F8 AB*04            [24] 1407 	mov	r3,(_cp_buf2linefipacket_PARM_2 + 1)
      0002FA AC*05            [24] 1408 	mov	r4,(_cp_buf2linefipacket_PARM_2 + 2)
      0002FC 8A 82            [24] 1409 	mov	dpl,r2
      0002FE 8B 83            [24] 1410 	mov	dph,r3
      000300 8C F0            [24] 1411 	mov	b,r4
      000302 12r00r00         [24] 1412 	lcall	__gptrget
      000305 F9               [12] 1413 	mov	r1,a
      000306 74 01            [12] 1414 	mov	a,#0x01
      000308 2A               [12] 1415 	add	a,r2
      000309 F5*03            [12] 1416 	mov	_cp_buf2linefipacket_PARM_2,a
      00030B E4               [12] 1417 	clr	a
      00030C 3B               [12] 1418 	addc	a,r3
      00030D F5*04            [12] 1419 	mov	(_cp_buf2linefipacket_PARM_2 + 1),a
      00030F 8C*05            [24] 1420 	mov	(_cp_buf2linefipacket_PARM_2 + 2),r4
      000311 8D 82            [24] 1421 	mov	dpl,r5
      000313 8E 83            [24] 1422 	mov	dph,r6
      000315 8F F0            [24] 1423 	mov	b,r7
      000317 E9               [12] 1424 	mov	a,r1
      000318 12r00r00         [24] 1425 	lcall	__gptrput
                                   1426 ;	../lib/linefi_packet.c:118: for (i=0;i<apstLineFiPkt->u8Size;i++) {
      00031B AD*06            [24] 1427 	mov	r5,_cp_buf2linefipacket_PARM_3
      00031D AE*07            [24] 1428 	mov	r6,(_cp_buf2linefipacket_PARM_3 + 1)
      00031F AF*08            [24] 1429 	mov	r7,(_cp_buf2linefipacket_PARM_3 + 2)
      000321 74 03            [12] 1430 	mov	a,#0x03
      000323 2D               [12] 1431 	add	a,r5
      000324 FA               [12] 1432 	mov	r2,a
      000325 E4               [12] 1433 	clr	a
      000326 3E               [12] 1434 	addc	a,r6
      000327 FB               [12] 1435 	mov	r3,a
      000328 8F 04            [24] 1436 	mov	ar4,r7
      00032A 85*03*0A         [24] 1437 	mov	_cp_buf2linefipacket_sloc0_1_0,_cp_buf2linefipacket_PARM_2
      00032D 85*04*0B         [24] 1438 	mov	(_cp_buf2linefipacket_sloc0_1_0 + 1),(_cp_buf2linefipacket_PARM_2 + 1)
      000330 85*05*0C         [24] 1439 	mov	(_cp_buf2linefipacket_sloc0_1_0 + 2),(_cp_buf2linefipacket_PARM_2 + 2)
      000333 75*09 00         [24] 1440 	mov	_cp_buf2linefipacket_i_65538_62,#0x00
      000336                       1441 00107$:
      000336 8A 82            [24] 1442 	mov	dpl,r2
      000338 8B 83            [24] 1443 	mov	dph,r3
      00033A 8C F0            [24] 1444 	mov	b,r4
      00033C 12r00r00         [24] 1445 	lcall	__gptrget
      00033F F8               [12] 1446 	mov	r0,a
      000340 C3               [12] 1447 	clr	c
      000341 E5*09            [12] 1448 	mov	a,_cp_buf2linefipacket_i_65538_62
      000343 98               [12] 1449 	subb	a,r0
      000344 50 52            [24] 1450 	jnc	00103$
                                   1451 ;	../lib/linefi_packet.c:119: apstLineFiPkt->pu8Data[i] = *apu8RxBuf++;
      000346 C0 02            [24] 1452 	push	ar2
      000348 C0 03            [24] 1453 	push	ar3
      00034A C0 04            [24] 1454 	push	ar4
      00034C 74 05            [12] 1455 	mov	a,#0x05
      00034E 2D               [12] 1456 	add	a,r5
      00034F F8               [12] 1457 	mov	r0,a
      000350 E4               [12] 1458 	clr	a
      000351 3E               [12] 1459 	addc	a,r6
      000352 F9               [12] 1460 	mov	r1,a
      000353 8F 04            [24] 1461 	mov	ar4,r7
      000355 88 82            [24] 1462 	mov	dpl,r0
      000357 89 83            [24] 1463 	mov	dph,r1
      000359 8C F0            [24] 1464 	mov	b,r4
      00035B 12r00r00         [24] 1465 	lcall	__gptrget
      00035E F8               [12] 1466 	mov	r0,a
      00035F A3               [24] 1467 	inc	dptr
      000360 12r00r00         [24] 1468 	lcall	__gptrget
      000363 F9               [12] 1469 	mov	r1,a
      000364 A3               [24] 1470 	inc	dptr
      000365 12r00r00         [24] 1471 	lcall	__gptrget
      000368 FC               [12] 1472 	mov	r4,a
      000369 E5*09            [12] 1473 	mov	a,_cp_buf2linefipacket_i_65538_62
      00036B 28               [12] 1474 	add	a,r0
      00036C F8               [12] 1475 	mov	r0,a
      00036D E4               [12] 1476 	clr	a
      00036E 39               [12] 1477 	addc	a,r1
      00036F F9               [12] 1478 	mov	r1,a
      000370 85*0A 82         [24] 1479 	mov	dpl,_cp_buf2linefipacket_sloc0_1_0
      000373 85*0B 83         [24] 1480 	mov	dph,(_cp_buf2linefipacket_sloc0_1_0 + 1)
      000376 85*0C F0         [24] 1481 	mov	b,(_cp_buf2linefipacket_sloc0_1_0 + 2)
      000379 12r00r00         [24] 1482 	lcall	__gptrget
      00037C FB               [12] 1483 	mov	r3,a
      00037D A3               [24] 1484 	inc	dptr
      00037E 85 82*0A         [24] 1485 	mov	_cp_buf2linefipacket_sloc0_1_0,dpl
      000381 85 83*0B         [24] 1486 	mov	(_cp_buf2linefipacket_sloc0_1_0 + 1),dph
      000384 88 82            [24] 1487 	mov	dpl,r0
      000386 89 83            [24] 1488 	mov	dph,r1
      000388 8C F0            [24] 1489 	mov	b,r4
      00038A EB               [12] 1490 	mov	a,r3
      00038B 12r00r00         [24] 1491 	lcall	__gptrput
                                   1492 ;	../lib/linefi_packet.c:118: for (i=0;i<apstLineFiPkt->u8Size;i++) {
      00038E 05*09            [12] 1493 	inc	_cp_buf2linefipacket_i_65538_62
      000390 D0 04            [24] 1494 	pop	ar4
      000392 D0 03            [24] 1495 	pop	ar3
      000394 D0 02            [24] 1496 	pop	ar2
      000396 80 9E            [24] 1497 	sjmp	00107$
      000398                       1498 00103$:
                                   1499 ;	../lib/linefi_packet.c:122: if (chk_crc_linefi_packet_packet(apstLineFiPkt) == CRC_NOT_OK) {
      000398 8D 82            [24] 1500 	mov	dpl,r5
      00039A 8E 83            [24] 1501 	mov	dph,r6
      00039C 8F F0            [24] 1502 	mov	b,r7
      00039E 12r00rA5         [24] 1503 	lcall	_chk_crc_linefi_packet_packet
      0003A1 E5 82            [12] 1504 	mov	a,dpl
      0003A3 70 04            [24] 1505 	jnz	00105$
                                   1506 ;	../lib/linefi_packet.c:123: return CONV_ERR_CRC;
      0003A5 75 82 04         [24] 1507 	mov	dpl,#0x04
      0003A8 22               [24] 1508 	ret
      0003A9                       1509 00105$:
                                   1510 ;	../lib/linefi_packet.c:125: return CONV_OK;
      0003A9 75 82 02         [24] 1511 	mov	dpl,#0x02
                                   1512 ;	../lib/linefi_packet.c:126: }
      0003AC 22               [24] 1513 	ret
                                   1514 ;------------------------------------------------------------
                                   1515 ;Allocation info for local variables in function 'print_linefipacket'
                                   1516 ;------------------------------------------------------------
                                   1517 ;apstLineFiPkt             Allocated to registers r5 r6 r7 
                                   1518 ;i                         Allocated with name '_print_linefipacket_i_65537_68'
                                   1519 ;------------------------------------------------------------
                                   1520 ;	../lib/linefi_packet.c:128: void print_linefipacket(linefi_packet_t * apstLineFiPkt)
                                   1521 ;	-----------------------------------------
                                   1522 ;	 function print_linefipacket
                                   1523 ;	-----------------------------------------
      0003AD                       1524 _print_linefipacket:
      0003AD AD 82            [24] 1525 	mov	r5,dpl
      0003AF AE 83            [24] 1526 	mov	r6,dph
      0003B1 AF F0            [24] 1527 	mov	r7,b
                                   1528 ;	../lib/linefi_packet.c:130: printf_fast_f("-------------------------------\r\n");
      0003B3 C0 07            [24] 1529 	push	ar7
      0003B5 C0 06            [24] 1530 	push	ar6
      0003B7 C0 05            [24] 1531 	push	ar5
      0003B9 74r00            [12] 1532 	mov	a,#___str_0
      0003BB C0 E0            [24] 1533 	push	acc
      0003BD 74s00            [12] 1534 	mov	a,#(___str_0 >> 8)
      0003BF C0 E0            [24] 1535 	push	acc
      0003C1 12r00r00         [24] 1536 	lcall	_printf_fast_f
      0003C4 15 81            [12] 1537 	dec	sp
      0003C6 15 81            [12] 1538 	dec	sp
      0003C8 D0 05            [24] 1539 	pop	ar5
      0003CA D0 06            [24] 1540 	pop	ar6
      0003CC D0 07            [24] 1541 	pop	ar7
                                   1542 ;	../lib/linefi_packet.c:131: printf_fast_f("Ver : %d\r\n", apstLineFiPkt->u8Ver);
      0003CE 8D 82            [24] 1543 	mov	dpl,r5
      0003D0 8E 83            [24] 1544 	mov	dph,r6
      0003D2 8F F0            [24] 1545 	mov	b,r7
      0003D4 12r00r00         [24] 1546 	lcall	__gptrget
      0003D7 FC               [12] 1547 	mov	r4,a
      0003D8 7B 00            [12] 1548 	mov	r3,#0x00
      0003DA C0 07            [24] 1549 	push	ar7
      0003DC C0 06            [24] 1550 	push	ar6
      0003DE C0 05            [24] 1551 	push	ar5
      0003E0 C0 04            [24] 1552 	push	ar4
      0003E2 C0 03            [24] 1553 	push	ar3
      0003E4 74r22            [12] 1554 	mov	a,#___str_1
      0003E6 C0 E0            [24] 1555 	push	acc
      0003E8 74s00            [12] 1556 	mov	a,#(___str_1 >> 8)
      0003EA C0 E0            [24] 1557 	push	acc
      0003EC 12r00r00         [24] 1558 	lcall	_printf_fast_f
      0003EF E5 81            [12] 1559 	mov	a,sp
      0003F1 24 FC            [12] 1560 	add	a,#0xfc
      0003F3 F5 81            [12] 1561 	mov	sp,a
      0003F5 D0 05            [24] 1562 	pop	ar5
      0003F7 D0 06            [24] 1563 	pop	ar6
      0003F9 D0 07            [24] 1564 	pop	ar7
                                   1565 ;	../lib/linefi_packet.c:132: printf_fast_f("Type: %d(%s)\r\n", apstLineFiPkt->u8Type, gpcTypeStr[apstLineFiPkt->u8Type]);
      0003FB 74 01            [12] 1566 	mov	a,#0x01
      0003FD 2D               [12] 1567 	add	a,r5
      0003FE FA               [12] 1568 	mov	r2,a
      0003FF E4               [12] 1569 	clr	a
      000400 3E               [12] 1570 	addc	a,r6
      000401 FB               [12] 1571 	mov	r3,a
      000402 8F 04            [24] 1572 	mov	ar4,r7
      000404 8A 82            [24] 1573 	mov	dpl,r2
      000406 8B 83            [24] 1574 	mov	dph,r3
      000408 8C F0            [24] 1575 	mov	b,r4
      00040A 12r00r00         [24] 1576 	lcall	__gptrget
      00040D FA               [12] 1577 	mov	r2,a
      00040E 75 F0 03         [24] 1578 	mov	b,#0x03
      000411 A4               [48] 1579 	mul	ab
      000412 24r00            [12] 1580 	add	a,#_gpcTypeStr
      000414 F5 82            [12] 1581 	mov	dpl,a
      000416 74s00            [12] 1582 	mov	a,#(_gpcTypeStr >> 8)
      000418 35 F0            [12] 1583 	addc	a,b
      00041A F5 83            [12] 1584 	mov	dph,a
      00041C E0               [24] 1585 	movx	a,@dptr
      00041D F9               [12] 1586 	mov	r1,a
      00041E A3               [24] 1587 	inc	dptr
      00041F E0               [24] 1588 	movx	a,@dptr
      000420 FB               [12] 1589 	mov	r3,a
      000421 A3               [24] 1590 	inc	dptr
      000422 E0               [24] 1591 	movx	a,@dptr
      000423 FC               [12] 1592 	mov	r4,a
      000424 8A 00            [24] 1593 	mov	ar0,r2
      000426 7A 00            [12] 1594 	mov	r2,#0x00
      000428 C0 07            [24] 1595 	push	ar7
      00042A C0 06            [24] 1596 	push	ar6
      00042C C0 05            [24] 1597 	push	ar5
      00042E C0 01            [24] 1598 	push	ar1
      000430 C0 03            [24] 1599 	push	ar3
      000432 C0 04            [24] 1600 	push	ar4
      000434 C0 00            [24] 1601 	push	ar0
      000436 C0 02            [24] 1602 	push	ar2
      000438 74r2D            [12] 1603 	mov	a,#___str_2
      00043A C0 E0            [24] 1604 	push	acc
      00043C 74s00            [12] 1605 	mov	a,#(___str_2 >> 8)
      00043E C0 E0            [24] 1606 	push	acc
      000440 12r00r00         [24] 1607 	lcall	_printf_fast_f
      000443 E5 81            [12] 1608 	mov	a,sp
      000445 24 F9            [12] 1609 	add	a,#0xf9
      000447 F5 81            [12] 1610 	mov	sp,a
      000449 D0 05            [24] 1611 	pop	ar5
      00044B D0 06            [24] 1612 	pop	ar6
      00044D D0 07            [24] 1613 	pop	ar7
                                   1614 ;	../lib/linefi_packet.c:135: printf_fast_f("Addr: %d\r\n", apstLineFiPkt->u8Addr);
      00044F 74 02            [12] 1615 	mov	a,#0x02
      000451 2D               [12] 1616 	add	a,r5
      000452 FA               [12] 1617 	mov	r2,a
      000453 E4               [12] 1618 	clr	a
      000454 3E               [12] 1619 	addc	a,r6
      000455 FB               [12] 1620 	mov	r3,a
      000456 8F 04            [24] 1621 	mov	ar4,r7
      000458 8A 82            [24] 1622 	mov	dpl,r2
      00045A 8B 83            [24] 1623 	mov	dph,r3
      00045C 8C F0            [24] 1624 	mov	b,r4
      00045E 12r00r00         [24] 1625 	lcall	__gptrget
      000461 FA               [12] 1626 	mov	r2,a
      000462 7C 00            [12] 1627 	mov	r4,#0x00
      000464 C0 07            [24] 1628 	push	ar7
      000466 C0 06            [24] 1629 	push	ar6
      000468 C0 05            [24] 1630 	push	ar5
      00046A C0 02            [24] 1631 	push	ar2
      00046C C0 04            [24] 1632 	push	ar4
      00046E 74r3C            [12] 1633 	mov	a,#___str_3
      000470 C0 E0            [24] 1634 	push	acc
      000472 74s00            [12] 1635 	mov	a,#(___str_3 >> 8)
      000474 C0 E0            [24] 1636 	push	acc
      000476 12r00r00         [24] 1637 	lcall	_printf_fast_f
      000479 E5 81            [12] 1638 	mov	a,sp
      00047B 24 FC            [12] 1639 	add	a,#0xfc
      00047D F5 81            [12] 1640 	mov	sp,a
      00047F D0 05            [24] 1641 	pop	ar5
      000481 D0 06            [24] 1642 	pop	ar6
      000483 D0 07            [24] 1643 	pop	ar7
                                   1644 ;	../lib/linefi_packet.c:136: printf_fast_f("Size: %d\r\n", apstLineFiPkt->u8Size);
      000485 74 03            [12] 1645 	mov	a,#0x03
      000487 2D               [12] 1646 	add	a,r5
      000488 FA               [12] 1647 	mov	r2,a
      000489 E4               [12] 1648 	clr	a
      00048A 3E               [12] 1649 	addc	a,r6
      00048B FB               [12] 1650 	mov	r3,a
      00048C 8F 04            [24] 1651 	mov	ar4,r7
      00048E 8A 82            [24] 1652 	mov	dpl,r2
      000490 8B 83            [24] 1653 	mov	dph,r3
      000492 8C F0            [24] 1654 	mov	b,r4
      000494 12r00r00         [24] 1655 	lcall	__gptrget
      000497 FA               [12] 1656 	mov	r2,a
      000498 7C 00            [12] 1657 	mov	r4,#0x00
      00049A C0 07            [24] 1658 	push	ar7
      00049C C0 06            [24] 1659 	push	ar6
      00049E C0 05            [24] 1660 	push	ar5
      0004A0 C0 02            [24] 1661 	push	ar2
      0004A2 C0 04            [24] 1662 	push	ar4
      0004A4 74r47            [12] 1663 	mov	a,#___str_4
      0004A6 C0 E0            [24] 1664 	push	acc
      0004A8 74s00            [12] 1665 	mov	a,#(___str_4 >> 8)
      0004AA C0 E0            [24] 1666 	push	acc
      0004AC 12r00r00         [24] 1667 	lcall	_printf_fast_f
      0004AF E5 81            [12] 1668 	mov	a,sp
      0004B1 24 FC            [12] 1669 	add	a,#0xfc
      0004B3 F5 81            [12] 1670 	mov	sp,a
      0004B5 D0 05            [24] 1671 	pop	ar5
      0004B7 D0 06            [24] 1672 	pop	ar6
      0004B9 D0 07            [24] 1673 	pop	ar7
                                   1674 ;	../lib/linefi_packet.c:137: printf_fast_f("CRC comp : %d %d\r\n", apstLineFiPkt->u8CRC, calc_crc_linefi_packet_packet(apstLineFiPkt));
      0004BB 8D 82            [24] 1675 	mov	dpl,r5
      0004BD 8E 83            [24] 1676 	mov	dph,r6
      0004BF 8F F0            [24] 1677 	mov	b,r7
      0004C1 C0 07            [24] 1678 	push	ar7
      0004C3 C0 06            [24] 1679 	push	ar6
      0004C5 C0 05            [24] 1680 	push	ar5
      0004C7 12r00r1B         [24] 1681 	lcall	_calc_crc_linefi_packet_packet
      0004CA AC 82            [24] 1682 	mov	r4,dpl
      0004CC D0 05            [24] 1683 	pop	ar5
      0004CE D0 06            [24] 1684 	pop	ar6
      0004D0 D0 07            [24] 1685 	pop	ar7
      0004D2 7B 00            [12] 1686 	mov	r3,#0x00
      0004D4 74 04            [12] 1687 	mov	a,#0x04
      0004D6 2D               [12] 1688 	add	a,r5
      0004D7 F8               [12] 1689 	mov	r0,a
      0004D8 E4               [12] 1690 	clr	a
      0004D9 3E               [12] 1691 	addc	a,r6
      0004DA F9               [12] 1692 	mov	r1,a
      0004DB 8F 02            [24] 1693 	mov	ar2,r7
      0004DD 88 82            [24] 1694 	mov	dpl,r0
      0004DF 89 83            [24] 1695 	mov	dph,r1
      0004E1 8A F0            [24] 1696 	mov	b,r2
      0004E3 12r00r00         [24] 1697 	lcall	__gptrget
      0004E6 F8               [12] 1698 	mov	r0,a
      0004E7 7A 00            [12] 1699 	mov	r2,#0x00
      0004E9 C0 07            [24] 1700 	push	ar7
      0004EB C0 06            [24] 1701 	push	ar6
      0004ED C0 05            [24] 1702 	push	ar5
      0004EF C0 04            [24] 1703 	push	ar4
      0004F1 C0 03            [24] 1704 	push	ar3
      0004F3 C0 00            [24] 1705 	push	ar0
      0004F5 C0 02            [24] 1706 	push	ar2
      0004F7 74r52            [12] 1707 	mov	a,#___str_5
      0004F9 C0 E0            [24] 1708 	push	acc
      0004FB 74s00            [12] 1709 	mov	a,#(___str_5 >> 8)
      0004FD C0 E0            [24] 1710 	push	acc
      0004FF 12r00r00         [24] 1711 	lcall	_printf_fast_f
      000502 E5 81            [12] 1712 	mov	a,sp
      000504 24 FA            [12] 1713 	add	a,#0xfa
      000506 F5 81            [12] 1714 	mov	sp,a
                                   1715 ;	../lib/linefi_packet.c:138: printf_fast_f("DATA: ");
      000508 74r65            [12] 1716 	mov	a,#___str_6
      00050A C0 E0            [24] 1717 	push	acc
      00050C 74s00            [12] 1718 	mov	a,#(___str_6 >> 8)
      00050E C0 E0            [24] 1719 	push	acc
      000510 12r00r00         [24] 1720 	lcall	_printf_fast_f
      000513 15 81            [12] 1721 	dec	sp
      000515 15 81            [12] 1722 	dec	sp
      000517 D0 05            [24] 1723 	pop	ar5
      000519 D0 06            [24] 1724 	pop	ar6
      00051B D0 07            [24] 1725 	pop	ar7
                                   1726 ;	../lib/linefi_packet.c:140: for (i=0;i<apstLineFiPkt->u8Size;i++) {
      00051D 74 05            [12] 1727 	mov	a,#0x05
      00051F 2D               [12] 1728 	add	a,r5
      000520 FA               [12] 1729 	mov	r2,a
      000521 E4               [12] 1730 	clr	a
      000522 3E               [12] 1731 	addc	a,r6
      000523 FB               [12] 1732 	mov	r3,a
      000524 8F 04            [24] 1733 	mov	ar4,r7
      000526 74 03            [12] 1734 	mov	a,#0x03
      000528 2D               [12] 1735 	add	a,r5
      000529 FD               [12] 1736 	mov	r5,a
      00052A E4               [12] 1737 	clr	a
      00052B 3E               [12] 1738 	addc	a,r6
      00052C FE               [12] 1739 	mov	r6,a
      00052D 75*0D 00         [24] 1740 	mov	_print_linefipacket_i_65537_68,#0x00
      000530                       1741 00103$:
      000530 8D 82            [24] 1742 	mov	dpl,r5
      000532 8E 83            [24] 1743 	mov	dph,r6
      000534 8F F0            [24] 1744 	mov	b,r7
      000536 12r00r00         [24] 1745 	lcall	__gptrget
      000539 F8               [12] 1746 	mov	r0,a
      00053A C3               [12] 1747 	clr	c
      00053B E5*0D            [12] 1748 	mov	a,_print_linefipacket_i_65537_68
      00053D 98               [12] 1749 	subb	a,r0
      00053E 50 64            [24] 1750 	jnc	00101$
                                   1751 ;	../lib/linefi_packet.c:141: printf_fast_f("0x%x ", apstLineFiPkt->pu8Data[i]);
      000540 C0 05            [24] 1752 	push	ar5
      000542 C0 06            [24] 1753 	push	ar6
      000544 C0 07            [24] 1754 	push	ar7
      000546 8A 82            [24] 1755 	mov	dpl,r2
      000548 8B 83            [24] 1756 	mov	dph,r3
      00054A 8C F0            [24] 1757 	mov	b,r4
      00054C 12r00r00         [24] 1758 	lcall	__gptrget
      00054F F8               [12] 1759 	mov	r0,a
      000550 A3               [24] 1760 	inc	dptr
      000551 12r00r00         [24] 1761 	lcall	__gptrget
      000554 F9               [12] 1762 	mov	r1,a
      000555 A3               [24] 1763 	inc	dptr
      000556 12r00r00         [24] 1764 	lcall	__gptrget
      000559 FF               [12] 1765 	mov	r7,a
      00055A E5*0D            [12] 1766 	mov	a,_print_linefipacket_i_65537_68
      00055C 28               [12] 1767 	add	a,r0
      00055D F8               [12] 1768 	mov	r0,a
      00055E E4               [12] 1769 	clr	a
      00055F 39               [12] 1770 	addc	a,r1
      000560 F9               [12] 1771 	mov	r1,a
      000561 88 82            [24] 1772 	mov	dpl,r0
      000563 89 83            [24] 1773 	mov	dph,r1
      000565 8F F0            [24] 1774 	mov	b,r7
      000567 12r00r00         [24] 1775 	lcall	__gptrget
      00056A F8               [12] 1776 	mov	r0,a
      00056B 7F 00            [12] 1777 	mov	r7,#0x00
      00056D C0 07            [24] 1778 	push	ar7
      00056F C0 06            [24] 1779 	push	ar6
      000571 C0 05            [24] 1780 	push	ar5
      000573 C0 04            [24] 1781 	push	ar4
      000575 C0 03            [24] 1782 	push	ar3
      000577 C0 02            [24] 1783 	push	ar2
      000579 C0 00            [24] 1784 	push	ar0
      00057B C0 07            [24] 1785 	push	ar7
      00057D 74r6C            [12] 1786 	mov	a,#___str_7
      00057F C0 E0            [24] 1787 	push	acc
      000581 74s00            [12] 1788 	mov	a,#(___str_7 >> 8)
      000583 C0 E0            [24] 1789 	push	acc
      000585 12r00r00         [24] 1790 	lcall	_printf_fast_f
      000588 E5 81            [12] 1791 	mov	a,sp
      00058A 24 FC            [12] 1792 	add	a,#0xfc
      00058C F5 81            [12] 1793 	mov	sp,a
      00058E D0 02            [24] 1794 	pop	ar2
      000590 D0 03            [24] 1795 	pop	ar3
      000592 D0 04            [24] 1796 	pop	ar4
      000594 D0 05            [24] 1797 	pop	ar5
      000596 D0 06            [24] 1798 	pop	ar6
      000598 D0 07            [24] 1799 	pop	ar7
                                   1800 ;	../lib/linefi_packet.c:140: for (i=0;i<apstLineFiPkt->u8Size;i++) {
      00059A 05*0D            [12] 1801 	inc	_print_linefipacket_i_65537_68
      00059C D0 07            [24] 1802 	pop	ar7
      00059E D0 06            [24] 1803 	pop	ar6
      0005A0 D0 05            [24] 1804 	pop	ar5
      0005A2 80 8C            [24] 1805 	sjmp	00103$
      0005A4                       1806 00101$:
                                   1807 ;	../lib/linefi_packet.c:143: printf_fast_f("\r\n");
      0005A4 74r72            [12] 1808 	mov	a,#___str_8
      0005A6 C0 E0            [24] 1809 	push	acc
      0005A8 74s00            [12] 1810 	mov	a,#(___str_8 >> 8)
      0005AA C0 E0            [24] 1811 	push	acc
      0005AC 12r00r00         [24] 1812 	lcall	_printf_fast_f
      0005AF 15 81            [12] 1813 	dec	sp
      0005B1 15 81            [12] 1814 	dec	sp
                                   1815 ;	../lib/linefi_packet.c:144: printf_fast_f("-------------------------------\r\n");
      0005B3 74r00            [12] 1816 	mov	a,#___str_0
      0005B5 C0 E0            [24] 1817 	push	acc
      0005B7 74s00            [12] 1818 	mov	a,#(___str_0 >> 8)
      0005B9 C0 E0            [24] 1819 	push	acc
      0005BB 12r00r00         [24] 1820 	lcall	_printf_fast_f
      0005BE 15 81            [12] 1821 	dec	sp
      0005C0 15 81            [12] 1822 	dec	sp
                                   1823 ;	../lib/linefi_packet.c:145: }
      0005C2 22               [24] 1824 	ret
                                   1825 ;------------------------------------------------------------
                                   1826 ;Allocation info for local variables in function 'crc8'
                                   1827 ;------------------------------------------------------------
                                   1828 ;num_bytes                 Allocated with name '_crc8_PARM_2'
                                   1829 ;au8CRC                    Allocated with name '_crc8_PARM_3'
                                   1830 ;input_str                 Allocated to registers r5 r6 r7 
                                   1831 ;a                         Allocated to registers r3 
                                   1832 ;crc                       Allocated to registers r4 
                                   1833 ;ptr                       Allocated to registers r5 r6 r7 
                                   1834 ;------------------------------------------------------------
                                   1835 ;	../lib/linefi_packet.c:166: uint8 crc8( uint8 *input_str, uint8 num_bytes, uint8 au8CRC) 
                                   1836 ;	-----------------------------------------
                                   1837 ;	 function crc8
                                   1838 ;	-----------------------------------------
      0005C3                       1839 _crc8:
      0005C3 AD 82            [24] 1840 	mov	r5,dpl
      0005C5 AE 83            [24] 1841 	mov	r6,dph
      0005C7 AF F0            [24] 1842 	mov	r7,b
                                   1843 ;	../lib/linefi_packet.c:172: crc = au8CRC;
      0005C9 AC*01            [24] 1844 	mov	r4,_crc8_PARM_3
                                   1845 ;	../lib/linefi_packet.c:175: if ( ptr != NULL )
      0005CB ED               [12] 1846 	mov	a,r5
      0005CC 4E               [12] 1847 	orl	a,r6
      0005CD 60 21            [24] 1848 	jz	00103$
                                   1849 ;	../lib/linefi_packet.c:176: for (a=0; a<num_bytes; a++) {
      0005CF 7B 00            [12] 1850 	mov	r3,#0x00
      0005D1                       1851 00105$:
      0005D1 C3               [12] 1852 	clr	c
      0005D2 EB               [12] 1853 	mov	a,r3
      0005D3 95*00            [12] 1854 	subb	a,_crc8_PARM_2
      0005D5 50 19            [24] 1855 	jnc	00103$
                                   1856 ;	../lib/linefi_packet.c:178: crc = sht75_crc_table[(*ptr++) ^ crc];
      0005D7 8D 82            [24] 1857 	mov	dpl,r5
      0005D9 8E 83            [24] 1858 	mov	dph,r6
      0005DB 8F F0            [24] 1859 	mov	b,r7
      0005DD 12r00r00         [24] 1860 	lcall	__gptrget
      0005E0 FA               [12] 1861 	mov	r2,a
      0005E1 A3               [24] 1862 	inc	dptr
      0005E2 AD 82            [24] 1863 	mov	r5,dpl
      0005E4 AE 83            [24] 1864 	mov	r6,dph
      0005E6 EC               [12] 1865 	mov	a,r4
      0005E7 6A               [12] 1866 	xrl	a,r2
      0005E8 90r06rFF         [24] 1867 	mov	dptr,#_sht75_crc_table
      0005EB 93               [24] 1868 	movc	a,@a+dptr
      0005EC FC               [12] 1869 	mov	r4,a
                                   1870 ;	../lib/linefi_packet.c:176: for (a=0; a<num_bytes; a++) {
      0005ED 0B               [12] 1871 	inc	r3
      0005EE 80 E1            [24] 1872 	sjmp	00105$
      0005F0                       1873 00103$:
                                   1874 ;	../lib/linefi_packet.c:181: return crc;
      0005F0 8C 82            [24] 1875 	mov	dpl,r4
                                   1876 ;	../lib/linefi_packet.c:182: }  /* crc_8 */
      0005F2 22               [24] 1877 	ret
                                   1878 ;------------------------------------------------------------
                                   1879 ;Allocation info for local variables in function 'print_raw_packet'
                                   1880 ;------------------------------------------------------------
                                   1881 ;apu8Data                  Allocated with name '_print_raw_packet_PARM_2'
                                   1882 ;au8Size                   Allocated to registers r7 
                                   1883 ;i                         Allocated to registers r6 
                                   1884 ;------------------------------------------------------------
                                   1885 ;	../lib/linefi_packet.c:184: void print_raw_packet(uint8 au8Size, uint8 * apu8Data)
                                   1886 ;	-----------------------------------------
                                   1887 ;	 function print_raw_packet
                                   1888 ;	-----------------------------------------
      0005F3                       1889 _print_raw_packet:
      0005F3 AF 82            [24] 1890 	mov	r7,dpl
                                   1891 ;	../lib/linefi_packet.c:187: printf_fast_f("#%d\r\n", gu16Cnt++);
      0005F5 AD*00            [24] 1892 	mov	r5,_gu16Cnt
      0005F7 AE*01            [24] 1893 	mov	r6,(_gu16Cnt + 1)
      0005F9 05*00            [12] 1894 	inc	_gu16Cnt
      0005FB E4               [12] 1895 	clr	a
      0005FC B5*00 02         [24] 1896 	cjne	a,_gu16Cnt,00136$
      0005FF 05*01            [12] 1897 	inc	(_gu16Cnt + 1)
      000601                       1898 00136$:
      000601 C0 07            [24] 1899 	push	ar7
      000603 C0 05            [24] 1900 	push	ar5
      000605 C0 06            [24] 1901 	push	ar6
      000607 74r75            [12] 1902 	mov	a,#___str_9
      000609 C0 E0            [24] 1903 	push	acc
      00060B 74s00            [12] 1904 	mov	a,#(___str_9 >> 8)
      00060D C0 E0            [24] 1905 	push	acc
      00060F 12r00r00         [24] 1906 	lcall	_printf_fast_f
      000612 E5 81            [12] 1907 	mov	a,sp
      000614 24 FC            [12] 1908 	add	a,#0xfc
      000616 F5 81            [12] 1909 	mov	sp,a
                                   1910 ;	../lib/linefi_packet.c:188: printf_fast_f("raw :  ");
      000618 74r7B            [12] 1911 	mov	a,#___str_10
      00061A C0 E0            [24] 1912 	push	acc
      00061C 74s00            [12] 1913 	mov	a,#(___str_10 >> 8)
      00061E C0 E0            [24] 1914 	push	acc
      000620 12r00r00         [24] 1915 	lcall	_printf_fast_f
      000623 15 81            [12] 1916 	dec	sp
      000625 15 81            [12] 1917 	dec	sp
      000627 D0 07            [24] 1918 	pop	ar7
                                   1919 ;	../lib/linefi_packet.c:189: for (i=0;i<au8Size;i++) {
      000629 7E 00            [12] 1920 	mov	r6,#0x00
      00062B                       1921 00107$:
      00062B C3               [12] 1922 	clr	c
      00062C EE               [12] 1923 	mov	a,r6
      00062D 9F               [12] 1924 	subb	a,r7
      00062E 50 24            [24] 1925 	jnc	00101$
                                   1926 ;	../lib/linefi_packet.c:190: printf_fast_f("%2d   ", i);
      000630 8E 04            [24] 1927 	mov	ar4,r6
      000632 7D 00            [12] 1928 	mov	r5,#0x00
      000634 C0 07            [24] 1929 	push	ar7
      000636 C0 06            [24] 1930 	push	ar6
      000638 C0 04            [24] 1931 	push	ar4
      00063A C0 05            [24] 1932 	push	ar5
      00063C 74r83            [12] 1933 	mov	a,#___str_11
      00063E C0 E0            [24] 1934 	push	acc
      000640 74s00            [12] 1935 	mov	a,#(___str_11 >> 8)
      000642 C0 E0            [24] 1936 	push	acc
      000644 12r00r00         [24] 1937 	lcall	_printf_fast_f
      000647 E5 81            [12] 1938 	mov	a,sp
      000649 24 FC            [12] 1939 	add	a,#0xfc
      00064B F5 81            [12] 1940 	mov	sp,a
      00064D D0 06            [24] 1941 	pop	ar6
      00064F D0 07            [24] 1942 	pop	ar7
                                   1943 ;	../lib/linefi_packet.c:189: for (i=0;i<au8Size;i++) {
      000651 0E               [12] 1944 	inc	r6
      000652 80 D7            [24] 1945 	sjmp	00107$
      000654                       1946 00101$:
                                   1947 ;	../lib/linefi_packet.c:192: printf_fast_f("\r\n");
      000654 C0 07            [24] 1948 	push	ar7
      000656 74r72            [12] 1949 	mov	a,#___str_8
      000658 C0 E0            [24] 1950 	push	acc
      00065A 74s00            [12] 1951 	mov	a,#(___str_8 >> 8)
      00065C C0 E0            [24] 1952 	push	acc
      00065E 12r00r00         [24] 1953 	lcall	_printf_fast_f
      000661 15 81            [12] 1954 	dec	sp
      000663 15 81            [12] 1955 	dec	sp
                                   1956 ;	../lib/linefi_packet.c:193: printf_fast_f("data:");
      000665 74r8A            [12] 1957 	mov	a,#___str_12
      000667 C0 E0            [24] 1958 	push	acc
      000669 74s00            [12] 1959 	mov	a,#(___str_12 >> 8)
      00066B C0 E0            [24] 1960 	push	acc
      00066D 12r00r00         [24] 1961 	lcall	_printf_fast_f
      000670 15 81            [12] 1962 	dec	sp
      000672 15 81            [12] 1963 	dec	sp
      000674 D0 07            [24] 1964 	pop	ar7
                                   1965 ;	../lib/linefi_packet.c:194: for (i=0;i<au8Size;i++) {
      000676 7E 00            [12] 1966 	mov	r6,#0x00
      000678                       1967 00110$:
      000678 C3               [12] 1968 	clr	c
      000679 EE               [12] 1969 	mov	a,r6
      00067A 9F               [12] 1970 	subb	a,r7
      00067B 50 72            [24] 1971 	jnc	00105$
                                   1972 ;	../lib/linefi_packet.c:195: if (*apu8Data < 0x10) {
      00067D AB*0E            [24] 1973 	mov	r3,_print_raw_packet_PARM_2
      00067F AC*0F            [24] 1974 	mov	r4,(_print_raw_packet_PARM_2 + 1)
      000681 AD*10            [24] 1975 	mov	r5,(_print_raw_packet_PARM_2 + 2)
      000683 8B 82            [24] 1976 	mov	dpl,r3
      000685 8C 83            [24] 1977 	mov	dph,r4
      000687 8D F0            [24] 1978 	mov	b,r5
      000689 12r00r00         [24] 1979 	lcall	__gptrget
      00068C FA               [12] 1980 	mov	r2,a
      00068D BA 10 00         [24] 1981 	cjne	r2,#0x10,00139$
      000690                       1982 00139$:
      000690 50 30            [24] 1983 	jnc	00103$
                                   1984 ;	../lib/linefi_packet.c:196: printf_fast_f("0x0%x ", *apu8Data++);
      000692 8A 01            [24] 1985 	mov	ar1,r2
      000694 74 01            [12] 1986 	mov	a,#0x01
      000696 2B               [12] 1987 	add	a,r3
      000697 F5*0E            [12] 1988 	mov	_print_raw_packet_PARM_2,a
      000699 E4               [12] 1989 	clr	a
      00069A 3C               [12] 1990 	addc	a,r4
      00069B F5*0F            [12] 1991 	mov	(_print_raw_packet_PARM_2 + 1),a
      00069D 8D*10            [24] 1992 	mov	(_print_raw_packet_PARM_2 + 2),r5
      00069F 89 00            [24] 1993 	mov	ar0,r1
      0006A1 79 00            [12] 1994 	mov	r1,#0x00
      0006A3 C0 07            [24] 1995 	push	ar7
      0006A5 C0 06            [24] 1996 	push	ar6
      0006A7 C0 00            [24] 1997 	push	ar0
      0006A9 C0 01            [24] 1998 	push	ar1
      0006AB 74r90            [12] 1999 	mov	a,#___str_13
      0006AD C0 E0            [24] 2000 	push	acc
      0006AF 74s00            [12] 2001 	mov	a,#(___str_13 >> 8)
      0006B1 C0 E0            [24] 2002 	push	acc
      0006B3 12r00r00         [24] 2003 	lcall	_printf_fast_f
      0006B6 E5 81            [12] 2004 	mov	a,sp
      0006B8 24 FC            [12] 2005 	add	a,#0xfc
      0006BA F5 81            [12] 2006 	mov	sp,a
      0006BC D0 06            [24] 2007 	pop	ar6
      0006BE D0 07            [24] 2008 	pop	ar7
      0006C0 80 2A            [24] 2009 	sjmp	00111$
      0006C2                       2010 00103$:
                                   2011 ;	../lib/linefi_packet.c:199: printf_fast_f("0x%x ", *apu8Data++);
      0006C2 74 01            [12] 2012 	mov	a,#0x01
      0006C4 2B               [12] 2013 	add	a,r3
      0006C5 F5*0E            [12] 2014 	mov	_print_raw_packet_PARM_2,a
      0006C7 E4               [12] 2015 	clr	a
      0006C8 3C               [12] 2016 	addc	a,r4
      0006C9 F5*0F            [12] 2017 	mov	(_print_raw_packet_PARM_2 + 1),a
      0006CB 8D*10            [24] 2018 	mov	(_print_raw_packet_PARM_2 + 2),r5
      0006CD 7D 00            [12] 2019 	mov	r5,#0x00
      0006CF C0 07            [24] 2020 	push	ar7
      0006D1 C0 06            [24] 2021 	push	ar6
      0006D3 C0 02            [24] 2022 	push	ar2
      0006D5 C0 05            [24] 2023 	push	ar5
      0006D7 74r6C            [12] 2024 	mov	a,#___str_7
      0006D9 C0 E0            [24] 2025 	push	acc
      0006DB 74s00            [12] 2026 	mov	a,#(___str_7 >> 8)
      0006DD C0 E0            [24] 2027 	push	acc
      0006DF 12r00r00         [24] 2028 	lcall	_printf_fast_f
      0006E2 E5 81            [12] 2029 	mov	a,sp
      0006E4 24 FC            [12] 2030 	add	a,#0xfc
      0006E6 F5 81            [12] 2031 	mov	sp,a
      0006E8 D0 06            [24] 2032 	pop	ar6
      0006EA D0 07            [24] 2033 	pop	ar7
      0006EC                       2034 00111$:
                                   2035 ;	../lib/linefi_packet.c:194: for (i=0;i<au8Size;i++) {
      0006EC 0E               [12] 2036 	inc	r6
      0006ED 80 89            [24] 2037 	sjmp	00110$
      0006EF                       2038 00105$:
                                   2039 ;	../lib/linefi_packet.c:202: printf_fast_f("\r\n");
      0006EF 74r72            [12] 2040 	mov	a,#___str_8
      0006F1 C0 E0            [24] 2041 	push	acc
      0006F3 74s00            [12] 2042 	mov	a,#(___str_8 >> 8)
      0006F5 C0 E0            [24] 2043 	push	acc
      0006F7 12r00r00         [24] 2044 	lcall	_printf_fast_f
      0006FA 15 81            [12] 2045 	dec	sp
      0006FC 15 81            [12] 2046 	dec	sp
                                   2047 ;	../lib/linefi_packet.c:203: }
      0006FE 22               [24] 2048 	ret
                                   2049 	.area CSEG    (CODE)
                                   2050 	.area CONST   (CODE)
                                   2051 	.area CONST   (CODE)
      000000                       2052 ___str_0:
      000000 2D 2D 2D 2D 2D 2D 2D  2053 	.ascii "-------------------------------"
             2D 2D 2D 2D 2D 2D 2D
             2D 2D 2D 2D 2D 2D 2D
             2D 2D 2D 2D 2D 2D 2D
             2D 2D 2D
      00001F 0D                    2054 	.db 0x0d
      000020 0A                    2055 	.db 0x0a
      000021 00                    2056 	.db 0x00
                                   2057 	.area CSEG    (CODE)
                                   2058 	.area CONST   (CODE)
      000022                       2059 ___str_1:
      000022 56 65 72 20 3A 20 25  2060 	.ascii "Ver : %d"
             64
      00002A 0D                    2061 	.db 0x0d
      00002B 0A                    2062 	.db 0x0a
      00002C 00                    2063 	.db 0x00
                                   2064 	.area CSEG    (CODE)
                                   2065 	.area CONST   (CODE)
      00002D                       2066 ___str_2:
      00002D 54 79 70 65 3A 20 25  2067 	.ascii "Type: %d(%s)"
             64 28 25 73 29
      000039 0D                    2068 	.db 0x0d
      00003A 0A                    2069 	.db 0x0a
      00003B 00                    2070 	.db 0x00
                                   2071 	.area CSEG    (CODE)
                                   2072 	.area CONST   (CODE)
      00003C                       2073 ___str_3:
      00003C 41 64 64 72 3A 20 25  2074 	.ascii "Addr: %d"
             64
      000044 0D                    2075 	.db 0x0d
      000045 0A                    2076 	.db 0x0a
      000046 00                    2077 	.db 0x00
                                   2078 	.area CSEG    (CODE)
                                   2079 	.area CONST   (CODE)
      000047                       2080 ___str_4:
      000047 53 69 7A 65 3A 20 25  2081 	.ascii "Size: %d"
             64
      00004F 0D                    2082 	.db 0x0d
      000050 0A                    2083 	.db 0x0a
      000051 00                    2084 	.db 0x00
                                   2085 	.area CSEG    (CODE)
                                   2086 	.area CONST   (CODE)
      000052                       2087 ___str_5:
      000052 43 52 43 20 63 6F 6D  2088 	.ascii "CRC comp : %d %d"
             70 20 3A 20 25 64 20
             25 64
      000062 0D                    2089 	.db 0x0d
      000063 0A                    2090 	.db 0x0a
      000064 00                    2091 	.db 0x00
                                   2092 	.area CSEG    (CODE)
                                   2093 	.area CONST   (CODE)
      000065                       2094 ___str_6:
      000065 44 41 54 41 3A 20     2095 	.ascii "DATA: "
      00006B 00                    2096 	.db 0x00
                                   2097 	.area CSEG    (CODE)
                                   2098 	.area CONST   (CODE)
      00006C                       2099 ___str_7:
      00006C 30 78 25 78 20        2100 	.ascii "0x%x "
      000071 00                    2101 	.db 0x00
                                   2102 	.area CSEG    (CODE)
                                   2103 	.area CONST   (CODE)
      000072                       2104 ___str_8:
      000072 0D                    2105 	.db 0x0d
      000073 0A                    2106 	.db 0x0a
      000074 00                    2107 	.db 0x00
                                   2108 	.area CSEG    (CODE)
      0006FF                       2109 _sht75_crc_table:
      0006FF 00                    2110 	.db #0x00	; 0
      000700 31                    2111 	.db #0x31	; 49	'1'
      000701 62                    2112 	.db #0x62	; 98	'b'
      000702 53                    2113 	.db #0x53	; 83	'S'
      000703 C4                    2114 	.db #0xc4	; 196
      000704 F5                    2115 	.db #0xf5	; 245
      000705 A6                    2116 	.db #0xa6	; 166
      000706 97                    2117 	.db #0x97	; 151
      000707 B9                    2118 	.db #0xb9	; 185
      000708 88                    2119 	.db #0x88	; 136
      000709 DB                    2120 	.db #0xdb	; 219
      00070A EA                    2121 	.db #0xea	; 234
      00070B 7D                    2122 	.db #0x7d	; 125
      00070C 4C                    2123 	.db #0x4c	; 76	'L'
      00070D 1F                    2124 	.db #0x1f	; 31
      00070E 2E                    2125 	.db #0x2e	; 46
      00070F 43                    2126 	.db #0x43	; 67	'C'
      000710 72                    2127 	.db #0x72	; 114	'r'
      000711 21                    2128 	.db #0x21	; 33
      000712 10                    2129 	.db #0x10	; 16
      000713 87                    2130 	.db #0x87	; 135
      000714 B6                    2131 	.db #0xb6	; 182
      000715 E5                    2132 	.db #0xe5	; 229
      000716 D4                    2133 	.db #0xd4	; 212
      000717 FA                    2134 	.db #0xfa	; 250
      000718 CB                    2135 	.db #0xcb	; 203
      000719 98                    2136 	.db #0x98	; 152
      00071A A9                    2137 	.db #0xa9	; 169
      00071B 3E                    2138 	.db #0x3e	; 62
      00071C 0F                    2139 	.db #0x0f	; 15
      00071D 5C                    2140 	.db #0x5c	; 92
      00071E 6D                    2141 	.db #0x6d	; 109	'm'
      00071F 86                    2142 	.db #0x86	; 134
      000720 B7                    2143 	.db #0xb7	; 183
      000721 E4                    2144 	.db #0xe4	; 228
      000722 D5                    2145 	.db #0xd5	; 213
      000723 42                    2146 	.db #0x42	; 66	'B'
      000724 73                    2147 	.db #0x73	; 115	's'
      000725 20                    2148 	.db #0x20	; 32
      000726 11                    2149 	.db #0x11	; 17
      000727 3F                    2150 	.db #0x3f	; 63
      000728 0E                    2151 	.db #0x0e	; 14
      000729 5D                    2152 	.db #0x5d	; 93
      00072A 6C                    2153 	.db #0x6c	; 108	'l'
      00072B FB                    2154 	.db #0xfb	; 251
      00072C CA                    2155 	.db #0xca	; 202
      00072D 99                    2156 	.db #0x99	; 153
      00072E A8                    2157 	.db #0xa8	; 168
      00072F C5                    2158 	.db #0xc5	; 197
      000730 F4                    2159 	.db #0xf4	; 244
      000731 A7                    2160 	.db #0xa7	; 167
      000732 96                    2161 	.db #0x96	; 150
      000733 01                    2162 	.db #0x01	; 1
      000734 30                    2163 	.db #0x30	; 48	'0'
      000735 63                    2164 	.db #0x63	; 99	'c'
      000736 52                    2165 	.db #0x52	; 82	'R'
      000737 7C                    2166 	.db #0x7c	; 124
      000738 4D                    2167 	.db #0x4d	; 77	'M'
      000739 1E                    2168 	.db #0x1e	; 30
      00073A 2F                    2169 	.db #0x2f	; 47
      00073B B8                    2170 	.db #0xb8	; 184
      00073C 89                    2171 	.db #0x89	; 137
      00073D DA                    2172 	.db #0xda	; 218
      00073E EB                    2173 	.db #0xeb	; 235
      00073F 3D                    2174 	.db #0x3d	; 61
      000740 0C                    2175 	.db #0x0c	; 12
      000741 5F                    2176 	.db #0x5f	; 95
      000742 6E                    2177 	.db #0x6e	; 110	'n'
      000743 F9                    2178 	.db #0xf9	; 249
      000744 C8                    2179 	.db #0xc8	; 200
      000745 9B                    2180 	.db #0x9b	; 155
      000746 AA                    2181 	.db #0xaa	; 170
      000747 84                    2182 	.db #0x84	; 132
      000748 B5                    2183 	.db #0xb5	; 181
      000749 E6                    2184 	.db #0xe6	; 230
      00074A D7                    2185 	.db #0xd7	; 215
      00074B 40                    2186 	.db #0x40	; 64
      00074C 71                    2187 	.db #0x71	; 113	'q'
      00074D 22                    2188 	.db #0x22	; 34
      00074E 13                    2189 	.db #0x13	; 19
      00074F 7E                    2190 	.db #0x7e	; 126
      000750 4F                    2191 	.db #0x4f	; 79	'O'
      000751 1C                    2192 	.db #0x1c	; 28
      000752 2D                    2193 	.db #0x2d	; 45
      000753 BA                    2194 	.db #0xba	; 186
      000754 8B                    2195 	.db #0x8b	; 139
      000755 D8                    2196 	.db #0xd8	; 216
      000756 E9                    2197 	.db #0xe9	; 233
      000757 C7                    2198 	.db #0xc7	; 199
      000758 F6                    2199 	.db #0xf6	; 246
      000759 A5                    2200 	.db #0xa5	; 165
      00075A 94                    2201 	.db #0x94	; 148
      00075B 03                    2202 	.db #0x03	; 3
      00075C 32                    2203 	.db #0x32	; 50	'2'
      00075D 61                    2204 	.db #0x61	; 97	'a'
      00075E 50                    2205 	.db #0x50	; 80	'P'
      00075F BB                    2206 	.db #0xbb	; 187
      000760 8A                    2207 	.db #0x8a	; 138
      000761 D9                    2208 	.db #0xd9	; 217
      000762 E8                    2209 	.db #0xe8	; 232
      000763 7F                    2210 	.db #0x7f	; 127
      000764 4E                    2211 	.db #0x4e	; 78	'N'
      000765 1D                    2212 	.db #0x1d	; 29
      000766 2C                    2213 	.db #0x2c	; 44
      000767 02                    2214 	.db #0x02	; 2
      000768 33                    2215 	.db #0x33	; 51	'3'
      000769 60                    2216 	.db #0x60	; 96
      00076A 51                    2217 	.db #0x51	; 81	'Q'
      00076B C6                    2218 	.db #0xc6	; 198
      00076C F7                    2219 	.db #0xf7	; 247
      00076D A4                    2220 	.db #0xa4	; 164
      00076E 95                    2221 	.db #0x95	; 149
      00076F F8                    2222 	.db #0xf8	; 248
      000770 C9                    2223 	.db #0xc9	; 201
      000771 9A                    2224 	.db #0x9a	; 154
      000772 AB                    2225 	.db #0xab	; 171
      000773 3C                    2226 	.db #0x3c	; 60
      000774 0D                    2227 	.db #0x0d	; 13
      000775 5E                    2228 	.db #0x5e	; 94
      000776 6F                    2229 	.db #0x6f	; 111	'o'
      000777 41                    2230 	.db #0x41	; 65	'A'
      000778 70                    2231 	.db #0x70	; 112	'p'
      000779 23                    2232 	.db #0x23	; 35
      00077A 12                    2233 	.db #0x12	; 18
      00077B 85                    2234 	.db #0x85	; 133
      00077C B4                    2235 	.db #0xb4	; 180
      00077D E7                    2236 	.db #0xe7	; 231
      00077E D6                    2237 	.db #0xd6	; 214
      00077F 7A                    2238 	.db #0x7a	; 122	'z'
      000780 4B                    2239 	.db #0x4b	; 75	'K'
      000781 18                    2240 	.db #0x18	; 24
      000782 29                    2241 	.db #0x29	; 41
      000783 BE                    2242 	.db #0xbe	; 190
      000784 8F                    2243 	.db #0x8f	; 143
      000785 DC                    2244 	.db #0xdc	; 220
      000786 ED                    2245 	.db #0xed	; 237
      000787 C3                    2246 	.db #0xc3	; 195
      000788 F2                    2247 	.db #0xf2	; 242
      000789 A1                    2248 	.db #0xa1	; 161
      00078A 90                    2249 	.db #0x90	; 144
      00078B 07                    2250 	.db #0x07	; 7
      00078C 36                    2251 	.db #0x36	; 54	'6'
      00078D 65                    2252 	.db #0x65	; 101	'e'
      00078E 54                    2253 	.db #0x54	; 84	'T'
      00078F 39                    2254 	.db #0x39	; 57	'9'
      000790 08                    2255 	.db #0x08	; 8
      000791 5B                    2256 	.db #0x5b	; 91
      000792 6A                    2257 	.db #0x6a	; 106	'j'
      000793 FD                    2258 	.db #0xfd	; 253
      000794 CC                    2259 	.db #0xcc	; 204
      000795 9F                    2260 	.db #0x9f	; 159
      000796 AE                    2261 	.db #0xae	; 174
      000797 80                    2262 	.db #0x80	; 128
      000798 B1                    2263 	.db #0xb1	; 177
      000799 E2                    2264 	.db #0xe2	; 226
      00079A D3                    2265 	.db #0xd3	; 211
      00079B 44                    2266 	.db #0x44	; 68	'D'
      00079C 75                    2267 	.db #0x75	; 117	'u'
      00079D 26                    2268 	.db #0x26	; 38
      00079E 17                    2269 	.db #0x17	; 23
      00079F FC                    2270 	.db #0xfc	; 252
      0007A0 CD                    2271 	.db #0xcd	; 205
      0007A1 9E                    2272 	.db #0x9e	; 158
      0007A2 AF                    2273 	.db #0xaf	; 175
      0007A3 38                    2274 	.db #0x38	; 56	'8'
      0007A4 09                    2275 	.db #0x09	; 9
      0007A5 5A                    2276 	.db #0x5a	; 90	'Z'
      0007A6 6B                    2277 	.db #0x6b	; 107	'k'
      0007A7 45                    2278 	.db #0x45	; 69	'E'
      0007A8 74                    2279 	.db #0x74	; 116	't'
      0007A9 27                    2280 	.db #0x27	; 39
      0007AA 16                    2281 	.db #0x16	; 22
      0007AB 81                    2282 	.db #0x81	; 129
      0007AC B0                    2283 	.db #0xb0	; 176
      0007AD E3                    2284 	.db #0xe3	; 227
      0007AE D2                    2285 	.db #0xd2	; 210
      0007AF BF                    2286 	.db #0xbf	; 191
      0007B0 8E                    2287 	.db #0x8e	; 142
      0007B1 DD                    2288 	.db #0xdd	; 221
      0007B2 EC                    2289 	.db #0xec	; 236
      0007B3 7B                    2290 	.db #0x7b	; 123
      0007B4 4A                    2291 	.db #0x4a	; 74	'J'
      0007B5 19                    2292 	.db #0x19	; 25
      0007B6 28                    2293 	.db #0x28	; 40
      0007B7 06                    2294 	.db #0x06	; 6
      0007B8 37                    2295 	.db #0x37	; 55	'7'
      0007B9 64                    2296 	.db #0x64	; 100	'd'
      0007BA 55                    2297 	.db #0x55	; 85	'U'
      0007BB C2                    2298 	.db #0xc2	; 194
      0007BC F3                    2299 	.db #0xf3	; 243
      0007BD A0                    2300 	.db #0xa0	; 160
      0007BE 91                    2301 	.db #0x91	; 145
      0007BF 47                    2302 	.db #0x47	; 71	'G'
      0007C0 76                    2303 	.db #0x76	; 118	'v'
      0007C1 25                    2304 	.db #0x25	; 37
      0007C2 14                    2305 	.db #0x14	; 20
      0007C3 83                    2306 	.db #0x83	; 131
      0007C4 B2                    2307 	.db #0xb2	; 178
      0007C5 E1                    2308 	.db #0xe1	; 225
      0007C6 D0                    2309 	.db #0xd0	; 208
      0007C7 FE                    2310 	.db #0xfe	; 254
      0007C8 CF                    2311 	.db #0xcf	; 207
      0007C9 9C                    2312 	.db #0x9c	; 156
      0007CA AD                    2313 	.db #0xad	; 173
      0007CB 3A                    2314 	.db #0x3a	; 58
      0007CC 0B                    2315 	.db #0x0b	; 11
      0007CD 58                    2316 	.db #0x58	; 88	'X'
      0007CE 69                    2317 	.db #0x69	; 105	'i'
      0007CF 04                    2318 	.db #0x04	; 4
      0007D0 35                    2319 	.db #0x35	; 53	'5'
      0007D1 66                    2320 	.db #0x66	; 102	'f'
      0007D2 57                    2321 	.db #0x57	; 87	'W'
      0007D3 C0                    2322 	.db #0xc0	; 192
      0007D4 F1                    2323 	.db #0xf1	; 241
      0007D5 A2                    2324 	.db #0xa2	; 162
      0007D6 93                    2325 	.db #0x93	; 147
      0007D7 BD                    2326 	.db #0xbd	; 189
      0007D8 8C                    2327 	.db #0x8c	; 140
      0007D9 DF                    2328 	.db #0xdf	; 223
      0007DA EE                    2329 	.db #0xee	; 238
      0007DB 79                    2330 	.db #0x79	; 121	'y'
      0007DC 48                    2331 	.db #0x48	; 72	'H'
      0007DD 1B                    2332 	.db #0x1b	; 27
      0007DE 2A                    2333 	.db #0x2a	; 42
      0007DF C1                    2334 	.db #0xc1	; 193
      0007E0 F0                    2335 	.db #0xf0	; 240
      0007E1 A3                    2336 	.db #0xa3	; 163
      0007E2 92                    2337 	.db #0x92	; 146
      0007E3 05                    2338 	.db #0x05	; 5
      0007E4 34                    2339 	.db #0x34	; 52	'4'
      0007E5 67                    2340 	.db #0x67	; 103	'g'
      0007E6 56                    2341 	.db #0x56	; 86	'V'
      0007E7 78                    2342 	.db #0x78	; 120	'x'
      0007E8 49                    2343 	.db #0x49	; 73	'I'
      0007E9 1A                    2344 	.db #0x1a	; 26
      0007EA 2B                    2345 	.db #0x2b	; 43
      0007EB BC                    2346 	.db #0xbc	; 188
      0007EC 8D                    2347 	.db #0x8d	; 141
      0007ED DE                    2348 	.db #0xde	; 222
      0007EE EF                    2349 	.db #0xef	; 239
      0007EF 82                    2350 	.db #0x82	; 130
      0007F0 B3                    2351 	.db #0xb3	; 179
      0007F1 E0                    2352 	.db #0xe0	; 224
      0007F2 D1                    2353 	.db #0xd1	; 209
      0007F3 46                    2354 	.db #0x46	; 70	'F'
      0007F4 77                    2355 	.db #0x77	; 119	'w'
      0007F5 24                    2356 	.db #0x24	; 36
      0007F6 15                    2357 	.db #0x15	; 21
      0007F7 3B                    2358 	.db #0x3b	; 59
      0007F8 0A                    2359 	.db #0x0a	; 10
      0007F9 59                    2360 	.db #0x59	; 89	'Y'
      0007FA 68                    2361 	.db #0x68	; 104	'h'
      0007FB FF                    2362 	.db #0xff	; 255
      0007FC CE                    2363 	.db #0xce	; 206
      0007FD 9D                    2364 	.db #0x9d	; 157
      0007FE AC                    2365 	.db #0xac	; 172
                                   2366 	.area CONST   (CODE)
      000075                       2367 ___str_9:
      000075 23 25 64              2368 	.ascii "#%d"
      000078 0D                    2369 	.db 0x0d
      000079 0A                    2370 	.db 0x0a
      00007A 00                    2371 	.db 0x00
                                   2372 	.area CSEG    (CODE)
                                   2373 	.area CONST   (CODE)
      00007B                       2374 ___str_10:
      00007B 72 61 77 20 3A 20 20  2375 	.ascii "raw :  "
      000082 00                    2376 	.db 0x00
                                   2377 	.area CSEG    (CODE)
                                   2378 	.area CONST   (CODE)
      000083                       2379 ___str_11:
      000083 25 32 64 20 20 20     2380 	.ascii "%2d   "
      000089 00                    2381 	.db 0x00
                                   2382 	.area CSEG    (CODE)
                                   2383 	.area CONST   (CODE)
      00008A                       2384 ___str_12:
      00008A 64 61 74 61 3A        2385 	.ascii "data:"
      00008F 00                    2386 	.db 0x00
                                   2387 	.area CSEG    (CODE)
                                   2388 	.area CONST   (CODE)
      000090                       2389 ___str_13:
      000090 30 78 30 25 78 20     2390 	.ascii "0x0%x "
      000096 00                    2391 	.db 0x00
                                   2392 	.area CSEG    (CODE)
                                   2393 	.area CONST   (CODE)
      000097                       2394 ___str_14:
      000097 54 79 70 65 5F 42 63  2395 	.ascii "Type_Bcast"
             61 73 74
      0000A1 00                    2396 	.db 0x00
                                   2397 	.area CSEG    (CODE)
                                   2398 	.area CONST   (CODE)
      0000A2                       2399 ___str_15:
      0000A2 54 79 70 65 5F 55 63  2400 	.ascii "Type_Ucast"
             61 73 74
      0000AC 00                    2401 	.db 0x00
                                   2402 	.area CSEG    (CODE)
                                   2403 	.area CONST   (CODE)
      0000AD                       2404 ___str_16:
      0000AD 54 79 70 65 5F 4D 63  2405 	.ascii "Type_Mcast"
             61 73 74
      0000B7 00                    2406 	.db 0x00
                                   2407 	.area CSEG    (CODE)
                                   2408 	.area CONST   (CODE)
      0000B8                       2409 ___str_17:
      0000B8 54 79 70 65 5F 53 65  2410 	.ascii "Type_SetAddr"
             74 41 64 64 72
      0000C4 00                    2411 	.db 0x00
                                   2412 	.area CSEG    (CODE)
                                   2413 	.area CONST   (CODE)
      0000C5                       2414 ___str_18:
      0000C5 54 79 70 65 5F 53 65  2415 	.ascii "Type_SetLED"
             74 4C 45 44
      0000D0 00                    2416 	.db 0x00
                                   2417 	.area CSEG    (CODE)
                                   2418 	.area CONST   (CODE)
      0000D1                       2419 ___str_19:
      0000D1 54 79 70 65 5F 43 74  2420 	.ascii "Type_CtrlMotor"
             72 6C 4D 6F 74 6F 72
      0000DF 00                    2421 	.db 0x00
                                   2422 	.area CSEG    (CODE)
                                   2423 	.area CONST   (CODE)
      0000E0                       2424 ___str_20:
      0000E0 54 79 70 65 5F 52 65  2425 	.ascii "Type_ReadAddr"
             61 64 41 64 64 72
      0000ED 00                    2426 	.db 0x00
                                   2427 	.area CSEG    (CODE)
                                   2428 	.area CONST   (CODE)
      0000EE                       2429 ___str_21:
      0000EE 54 79 70 65 5F 4E 6F  2430 	.ascii "Type_None"
             6E 65
      0000F7 00                    2431 	.db 0x00
                                   2432 	.area CSEG    (CODE)
                                   2433 	.area CABS    (ABS,CODE)
